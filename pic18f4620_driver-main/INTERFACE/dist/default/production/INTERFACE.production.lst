

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Sep 03 14:56:06 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 12/02/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F4620 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	idataCOMRAM
   123  003996                     __pidataCOMRAM:
   124                           	callstack 0
   125                           
   126                           ;initializer for _PORT_array
   127  003996  80                 	db	128
   128  003997  0F                 	db	15
   129  003998  81                 	db	129
   130  003999  0F                 	db	15
   131  00399A  82                 	db	130
   132  00399B  0F                 	db	15
   133  00399C  83                 	db	131
   134  00399D  0F                 	db	15
   135  00399E  84                 	db	132
   136  00399F  0F                 	db	15
   137                           
   138                           ;initializer for _operator
   139  0039A0  01                 	db	1
   140                           
   141                           ;initializer for _speed
   142  0039A1  64                 	db	100
   143                           
   144                           	psect	idataBANK0
   145  003982                     __pidataBANK0:
   146                           	callstack 0
   147                           
   148                           ;initializer for _LAT_array
   149  003982  89                 	db	137
   150  003983  0F                 	db	15
   151  003984  8A                 	db	138
   152  003985  0F                 	db	15
   153  003986  8B                 	db	139
   154  003987  0F                 	db	15
   155  003988  8C                 	db	140
   156  003989  0F                 	db	15
   157  00398A  8D                 	db	141
   158  00398B  0F                 	db	15
   159                           
   160                           ;initializer for _TRIS_array
   161  00398C  92                 	db	146
   162  00398D  0F                 	db	15
   163  00398E  93                 	db	147
   164  00398F  0F                 	db	15
   165  003990  94                 	db	148
   166  003991  0F                 	db	15
   167  003992  95                 	db	149
   168  003993  0F                 	db	15
   169  003994  96                 	db	150
   170  003995  0F                 	db	15
   171                           
   172                           	psect	idataBANK1
   173  00395E                     __pidataBANK1:
   174                           	callstack 0
   175                           
   176                           ;initializer for _ground
   177  00395E  1F                 	db	31
   178  00395F  00                 	db	0
   179  003960  00                 	db	0
   180  003961  00                 	db	0
   181  003962  00                 	db	0
   182  003963  00                 	db	0
   183  003964  00                 	db	0
   184  003965  00                 	db	0
   185                           
   186                           ;initializer for _cactus
   187  003966  15                 	db	21
   188  003967  15                 	db	21
   189  003968  15                 	db	21
   190  003969  1F                 	db	31
   191  00396A  04                 	db	4
   192  00396B  15                 	db	21
   193  00396C  0E                 	db	14
   194  00396D  04                 	db	4
   195                           
   196                           ;initializer for _dinasour
   197  00396E  03                 	db	3
   198  00396F  03                 	db	3
   199  003970  02                 	db	2
   200  003971  1E                 	db	30
   201  003972  0E                 	db	14
   202  003973  0A                 	db	10
   203  003974  0A                 	db	10
   204  003975  0A                 	db	10
   205                           
   206                           ;initializer for _lcd
   207  003976  02                 	db	2
   208  003977  0A                 	db	10
   209  003978  12                 	db	18
   210  003979  1A                 	db	26
   211  00397A  22                 	db	34
   212  00397B  2A                 	db	42
   213                           
   214                           ;initializer for _int_t
   215  00397C  10                 	db	low _int_1_handler
   216  00397D  1F                 	db	high _int_1_handler
   217  00397E  01                 	db	1
   218  00397F  01                 	db	1
   219  003980  01                 	db	1
   220  003981  49                 	db	73
   221                           
   222                           	psect	smallconst
   223  001000                     __psmallconst:
   224                           	callstack 0
   225  001000  00                 	db	0
   226  001001  37                 	db	55
   227  001002  38                 	db	56
   228  001003  39                 	db	57
   229  001004  2F                 	db	47
   230  001005  34                 	db	52
   231  001006  35                 	db	53
   232  001007  36                 	db	54
   233  001008  2A                 	db	42
   234  001009  31                 	db	49
   235  00100A  32                 	db	50
   236  00100B  33                 	db	51
   237  00100C  2D                 	db	45
   238  00100D  25                 	db	37
   239  00100E  30                 	db	48
   240  00100F  3D                 	db	61
   241  001010  2B                 	db	43
   242  001011                     __end_of_buttons_array:
   243                           	callstack 0
   244  0000                     _TMR1	set	4046
   245  0000                     _INTCON2bits	set	4081
   246  0000                     _T1CONbits	set	4045
   247  0000                     _TMR1IF	set	31984
   248  0000                     _TMR1ON	set	32360
   249  0000                     _LATA	set	3977
   250  0000                     _PORTE	set	3972
   251  0000                     _PORTD	set	3971
   252  0000                     _PORTC	set	3970
   253  0000                     _PORTB	set	3969
   254  0000                     _PORTA	set	3968
   255  0000                     _TRISA	set	3986
   256  0000                     _PIR1bits	set	3998
   257  0000                     _T1CON	set	4045
   258  0000                     _RCONbits	set	4048
   259  0000                     _INTCON3bits	set	4080
   260  0000                     _INTCONbits	set	4082
   261  0000                     _TRISE	set	3990
   262  0000                     _TRISD	set	3989
   263  0000                     _TRISC	set	3988
   264  0000                     _TRISB	set	3987
   265  0000                     _LATE	set	3981
   266  0000                     _LATD	set	3980
   267  0000                     _LATC	set	3979
   268  0000                     _LATB	set	3978
   269  0000                     _OSCCON	set	4051
   270  001011                     STR_5:
   271  001011  20                 	db	32
   272  001012  20                 	db	32
   273  001013  20                 	db	32
   274  001014  20                 	db	32
   275  001015  20                 	db	32
   276  001016  20                 	db	32
   277  001017  20                 	db	32
   278  001018  20                 	db	32
   279  001019  20                 	db	32
   280  00101A  00                 	db	0
   281  00101B                     STR_4:
   282  00101B  67                 	db	103	;'g'
   283  00101C  61                 	db	97	;'a'
   284  00101D  6D                 	db	109	;'m'
   285  00101E  65                 	db	101	;'e'
   286  00101F  20                 	db	32
   287  001020  6F                 	db	111	;'o'
   288  001021  76                 	db	118	;'v'
   289  001022  65                 	db	101	;'e'
   290  001023  72                 	db	114	;'r'
   291  001024  00                 	db	0
   292  001025                     STR_6:
   293  001025  73                 	db	115	;'s'
   294  001026  63                 	db	99	;'c'
   295  001027  6F                 	db	111	;'o'
   296  001028  72                 	db	114	;'r'
   297  001029  65                 	db	101	;'e'
   298  00102A  3D                 	db	61	;'='
   299  00102B  00                 	db	0
   300  00102C                     STR_1:
   301  00102C  25                 	db	37
   302  00102D  69                 	db	105	;'i'
   303  00102E  00                 	db	0
   304  00102F  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           ; #config settings
   307                           
   308                           	psect	cinit
   309  002D9C                     __pcinit:
   310                           	callstack 0
   311  002D9C                     start_initialization:
   312                           	callstack 0
   313  002D9C                     __initialization:
   314                           	callstack 0
   315                           
   316                           ; Initialize objects allocated to BANK1 (36 bytes)
   317                           ; load TBLPTR registers with __pidataBANK1
   318  002D9C  0E5E               	movlw	low __pidataBANK1
   319  002D9E  6EF6               	movwf	tblptrl,c
   320  002DA0  0E39               	movlw	high __pidataBANK1
   321  002DA2  6EF7               	movwf	tblptrh,c
   322  002DA4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   323  002DA6  6EF8               	movwf	tblptru,c
   324  002DA8  EE01  F0A9         	lfsr	0,__pdataBANK1
   325  002DAC  EE10 F024          	lfsr	1,36
   326  002DB0                     copy_data0:
   327  002DB0  0009               	tblrd		*+
   328  002DB2  CFF5 FFEE          	movff	tablat,postinc0
   329  002DB6  50E5               	movf	postdec1,w,c
   330  002DB8  50E1               	movf	fsr1l,w,c
   331  002DBA  E1FA               	bnz	copy_data0
   332                           
   333                           ; Initialize objects allocated to BANK0 (20 bytes)
   334                           ; load TBLPTR registers with __pidataBANK0
   335  002DBC  0E82               	movlw	low __pidataBANK0
   336  002DBE  6EF6               	movwf	tblptrl,c
   337  002DC0  0E39               	movlw	high __pidataBANK0
   338  002DC2  6EF7               	movwf	tblptrh,c
   339  002DC4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   340  002DC6  6EF8               	movwf	tblptru,c
   341  002DC8  EE00  F0B4         	lfsr	0,__pdataBANK0
   342  002DCC  EE10 F014          	lfsr	1,20
   343  002DD0                     copy_data1:
   344  002DD0  0009               	tblrd		*+
   345  002DD2  CFF5 FFEE          	movff	tablat,postinc0
   346  002DD6  50E5               	movf	postdec1,w,c
   347  002DD8  50E1               	movf	fsr1l,w,c
   348  002DDA  E1FA               	bnz	copy_data1
   349                           
   350                           ; Initialize objects allocated to COMRAM (12 bytes)
   351                           ; load TBLPTR registers with __pidataCOMRAM
   352  002DDC  0E96               	movlw	low __pidataCOMRAM
   353  002DDE  6EF6               	movwf	tblptrl,c
   354  002DE0  0E39               	movlw	high __pidataCOMRAM
   355  002DE2  6EF7               	movwf	tblptrh,c
   356  002DE4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   357  002DE6  6EF8               	movwf	tblptru,c
   358  002DE8  EE00  F038         	lfsr	0,__pdataCOMRAM
   359  002DEC  EE10 F00C          	lfsr	1,12
   360  002DF0                     copy_data2:
   361  002DF0  0009               	tblrd		*+
   362  002DF2  CFF5 FFEE          	movff	tablat,postinc0
   363  002DF6  50E5               	movf	postdec1,w,c
   364  002DF8  50E1               	movf	fsr1l,w,c
   365  002DFA  E1FA               	bnz	copy_data2
   366                           
   367                           ; Clear objects allocated to BANK1 (50 bytes)
   368  002DFC  EE01  F077         	lfsr	0,__pbssBANK1
   369  002E00  0E32               	movlw	50
   370  002E02                     clear_0:
   371  002E02  6AEE               	clrf	postinc0,c
   372  002E04  06E8               	decf	wreg,f,c
   373  002E06  E1FD               	bnz	clear_0
   374                           
   375                           ; Clear objects allocated to BANK0 (12 bytes)
   376  002E08  EE00  F0C8         	lfsr	0,__pbssBANK0
   377  002E0C  0E0C               	movlw	12
   378  002E0E                     clear_1:
   379  002E0E  6AEE               	clrf	postinc0,c
   380  002E10  06E8               	decf	wreg,f,c
   381  002E12  E1FD               	bnz	clear_1
   382                           
   383                           ; Clear objects allocated to COMRAM (7 bytes)
   384  002E14  EE00  F044         	lfsr	0,__pbssCOMRAM
   385  002E18  0E07               	movlw	7
   386  002E1A                     clear_2:
   387  002E1A  6AEE               	clrf	postinc0,c
   388  002E1C  06E8               	decf	wreg,f,c
   389  002E1E  E1FD               	bnz	clear_2
   390  002E20                     end_of_initialization:
   391                           	callstack 0
   392  002E20                     __end_of__initialization:
   393                           	callstack 0
   394  002E20  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   395  002E22  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   396  002E24  0100               	movlb	0
   397  002E26  EF95  F009         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMRAM
   400  000044                     __pbssCOMRAM:
   401                           	callstack 0
   402  000044                     relay_off@F3015:
   403                           	callstack 0
   404  000044                     	ds	1
   405  000045                     relay_on@F3010:
   406                           	callstack 0
   407  000045                     	ds	1
   408  000046                     relay_init@F3005:
   409                           	callstack 0
   410  000046                     	ds	1
   411  000047                     led_toggle@F3026:
   412                           	callstack 0
   413  000047                     	ds	1
   414  000048                     led_turn_off@F3021:
   415                           	callstack 0
   416  000048                     	ds	1
   417  000049                     led_turn_on@F3016:
   418                           	callstack 0
   419  000049                     	ds	1
   420  00004A                     led_init@F3011:
   421                           	callstack 0
   422  00004A                     	ds	1
   423                           
   424                           	psect	dataCOMRAM
   425  000038                     __pdataCOMRAM:
   426                           	callstack 0
   427  000038                     _PORT_array:
   428                           	callstack 0
   429  000038                     	ds	10
   430  000042                     _operator:
   431                           	callstack 0
   432  000042                     	ds	1
   433  000043                     _speed:
   434                           	callstack 0
   435  000043                     	ds	1
   436                           
   437                           	psect	bssBANK0
   438  0000C8                     __pbssBANK0:
   439                           	callstack 0
   440  0000C8                     _width:
   441                           	callstack 0
   442  0000C8                     	ds	2
   443  0000CA                     _prec:
   444                           	callstack 0
   445  0000CA                     	ds	2
   446  0000CC                     _flags:
   447                           	callstack 0
   448  0000CC                     	ds	2
   449  0000CE                     _int2_handler:
   450                           	callstack 0
   451  0000CE                     	ds	2
   452  0000D0                     _int1_handler:
   453                           	callstack 0
   454  0000D0                     	ds	2
   455  0000D2                     _int0_handler:
   456                           	callstack 0
   457  0000D2                     	ds	2
   458                           
   459                           	psect	dataBANK0
   460  0000B4                     __pdataBANK0:
   461                           	callstack 0
   462  0000B4                     _LAT_array:
   463                           	callstack 0
   464  0000B4                     	ds	10
   465  0000BE                     _TRIS_array:
   466                           	callstack 0
   467  0000BE                     	ds	10
   468                           
   469                           	psect	bssBANK1
   470  000177                     __pbssBANK1:
   471                           	callstack 0
   472  000177                     	ds	6
   473  00017D                     _nout:
   474                           	callstack 0
   475  00017D                     	ds	2
   476  00017F                     _counter:
   477                           	callstack 0
   478  00017F                     	ds	1
   479  000180                     _y:
   480                           	callstack 0
   481  000180                     	ds	1
   482  000181                     _x:
   483                           	callstack 0
   484  000181                     	ds	1
   485  000182                     _dbuf:
   486                           	callstack 0
   487  000182                     	ds	32
   488  0001A2                     _num:
   489                           	callstack 0
   490  0001A2                     	ds	7
   491                           
   492                           	psect	dataBANK1
   493  0001A9                     __pdataBANK1:
   494                           	callstack 0
   495  0001A9                     _ground:
   496                           	callstack 0
   497  0001A9                     	ds	8
   498  0001B1                     _cactus:
   499                           	callstack 0
   500  0001B1                     	ds	8
   501  0001B9                     _dinasour:
   502                           	callstack 0
   503  0001B9                     	ds	8
   504  0001C1                     _lcd:
   505                           	callstack 0
   506  0001C1                     	ds	6
   507  0001C7                     _int_t:
   508                           	callstack 0
   509  0001C7                     	ds	6
   510                           
   511                           	psect	cstackBANK1
   512  000100                     __pcstackBANK1:
   513                           	callstack 0
   514  000100                     ?_strlen:
   515                           	callstack 0
   516  000100                     ?___aodiv:
   517                           	callstack 0
   518  000100                     ?___aomod:
   519                           	callstack 0
   520  000100                     pin_directoin_intialize@pin:
   521                           	callstack 0
   522  000100                     pin_write_value@pin:
   523                           	callstack 0
   524  000100                     INTX_enable@int_obj:
   525                           	callstack 0
   526  000100                     INTX_select_edge@int_obj:
   527                           	callstack 0
   528  000100                     INTX_disable@int_obj:
   529                           	callstack 0
   530  000100                     INTX_clear_flag@int_obj:
   531                           	callstack 0
   532  000100                     INTX_interrupt_handle@int_obj:
   533                           	callstack 0
   534  000100                     memset@dest:
   535                           	callstack 0
   536  000100                     fputc@c:
   537                           	callstack 0
   538  000100                     strlen@s:
   539                           	callstack 0
   540  000100                     ___aodiv@dividend:
   541                           	callstack 0
   542  000100                     ___aomod@dividend:
   543                           	callstack 0
   544                           
   545                           ; 8 bytes @ 0x0
   546  000100                     	ds	2
   547  000102                     ??_pin_directoin_intialize:
   548  000102                     ??_INTX_disable:
   549  000102                     ??_INTX_select_edge:
   550  000102                     ??_INTX_clear_flag:
   551  000102                     ??_INTX_interrupt_handle:
   552  000102                     ??_INTX_enable:
   553  000102                     pin_write_value@value:
   554                           	callstack 0
   555  000102                     memset@c:
   556                           	callstack 0
   557  000102                     fputc@fp:
   558                           	callstack 0
   559  000102                     strlen@a:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2
   563  000102                     	ds	1
   564  000103                     ??_pin_write_value:
   565                           
   566                           ; 1 bytes @ 0x3
   567  000103                     	ds	1
   568  000104                     ??_fputc:
   569  000104                     INTX_enable@ret:
   570                           	callstack 0
   571  000104                     INTX_select_edge@ret:
   572                           	callstack 0
   573  000104                     INTX_disable@ret:
   574                           	callstack 0
   575  000104                     INTX_clear_flag@ret:
   576                           	callstack 0
   577  000104                     INTX_interrupt_handle@ret:
   578                           	callstack 0
   579  000104                     memset@n:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x4
   583  000104                     	ds	2
   584  000106                     ??_memset:
   585                           
   586                           ; 1 bytes @ 0x6
   587  000106                     	ds	2
   588  000108                     pin_directoin_intialize@ret:
   589                           	callstack 0
   590  000108                     memset@k:
   591                           	callstack 0
   592  000108                     ___aodiv@divisor:
   593                           	callstack 0
   594  000108                     ___aomod@divisor:
   595                           	callstack 0
   596                           
   597                           ; 8 bytes @ 0x8
   598  000108                     	ds	1
   599  000109                     pin_write_value@ret:
   600                           	callstack 0
   601  000109                     INTX_pin_init@int_obj:
   602                           	callstack 0
   603  000109                     fputs@s:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x9
   607  000109                     	ds	1
   608  00010A                     lcd_send_4bits@lcd:
   609                           	callstack 0
   610  00010A                     lcd_send_enable_4bit@lcd:
   611                           	callstack 0
   612  00010A                     memset@s:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0xA
   616  00010A                     	ds	1
   617  00010B                     ??_INTX_pin_init:
   618  00010B                     fputs@fp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0xB
   622  00010B                     	ds	1
   623  00010C                     lcd_send_4bits@_data_command:
   624                           	callstack 0
   625  00010C                     lcd_send_enable_4bit@ret:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0xC
   629  00010C                     	ds	1
   630  00010D                     ??_lcd_send_4bits:
   631  00010D                     INTX_pin_init@ret:
   632                           	callstack 0
   633  00010D                     fputs@c:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0xD
   637  00010D                     	ds	1
   638  00010E                     Interrupt_INTx_Init@int_obj:
   639                           	callstack 0
   640  00010E                     fputs@i:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0xE
   644  00010E                     	ds	2
   645  000110                     ?_pad:
   646                           	callstack 0
   647  000110                     Interrupt_INTx_Init@ret:
   648                           	callstack 0
   649  000110                     ___aodiv@counter:
   650                           	callstack 0
   651  000110                     ___aomod@counter:
   652                           	callstack 0
   653  000110                     pad@fp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x10
   657  000110                     	ds	1
   658  000111                     lcd_send_4bits@ret:
   659                           	callstack 0
   660  000111                     ___aodiv@sign:
   661                           	callstack 0
   662  000111                     ___aomod@sign:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x11
   666  000111                     	ds	1
   667  000112                     ?_abs:
   668                           	callstack 0
   669  000112                     lcd_send_4bits@counter:
   670                           	callstack 0
   671  000112                     pad@buf:
   672                           	callstack 0
   673  000112                     abs@a:
   674                           	callstack 0
   675  000112                     ___aodiv@quotient:
   676                           	callstack 0
   677                           
   678                           ; 8 bytes @ 0x12
   679  000112                     	ds	1
   680  000113                     send_command@lcd:
   681                           	callstack 0
   682  000113                     display_char@lcd:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x13
   686  000113                     	ds	1
   687  000114                     ??_abs:
   688  000114                     pad@p:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x14
   692  000114                     	ds	1
   693  000115                     send_command@command:
   694                           	callstack 0
   695  000115                     display_char@data:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x15
   699  000115                     	ds	1
   700  000116                     ??_pad:
   701  000116                     send_command@ret:
   702                           	callstack 0
   703  000116                     display_char@ret:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x16
   707  000116                     	ds	1
   708  000117                     lcd_4_bit_init@lcd:
   709                           	callstack 0
   710  000117                     lcd_4_bit_set_cursor@lcd:
   711                           	callstack 0
   712  000117                     pad@i:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x17
   716  000117                     	ds	2
   717  000119                     ??_lcd_4_bit_init:
   718  000119                     lcd_4_bit_set_cursor@row:
   719                           	callstack 0
   720  000119                     pad@w:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x19
   724  000119                     	ds	1
   725  00011A                     lcd_4_bit_set_cursor@column:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x1A
   729  00011A                     	ds	1
   730  00011B                     ??_lcd_4_bit_set_cursor:
   731  00011B                     ?_dtoa:
   732                           	callstack 0
   733  00011B                     lcd_4_bit_init@counter:
   734                           	callstack 0
   735  00011B                     dtoa@fp:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x1B
   739  00011B                     	ds	1
   740  00011C                     lcd_4_bit_init@ret:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0x1C
   744  00011C                     	ds	1
   745  00011D                     lcd_4_bit_set_cursor@ret:
   746                           	callstack 0
   747  00011D                     dtoa@d:
   748                           	callstack 0
   749                           
   750                           ; 8 bytes @ 0x1D
   751  00011D                     	ds	1
   752  00011E                     display_char_at_position@lcd:
   753                           	callstack 0
   754  00011E                     display_string_at_position@lcd:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1E
   758  00011E                     	ds	2
   759  000120                     display_char_at_position@row:
   760                           	callstack 0
   761  000120                     display_string_at_position@row:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x20
   765  000120                     	ds	1
   766  000121                     display_char_at_position@coloumn:
   767                           	callstack 0
   768  000121                     display_string_at_position@coloumn:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0x21
   772  000121                     	ds	1
   773  000122                     display_char_at_position@data:
   774                           	callstack 0
   775  000122                     display_string_at_position@data:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x22
   779  000122                     	ds	1
   780  000123                     display_char_at_position@ret:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x23
   784  000123                     	ds	1
   785  000124                     display_custom_char@lcd:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x24
   789  000124                     	ds	1
   790  000125                     ??_dtoa:
   791                           
   792                           ; 1 bytes @ 0x25
   793  000125                     	ds	1
   794  000126                     display_custom_char@row:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x26
   798  000126                     	ds	1
   799  000127                     display_custom_char@cloumn:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x27
   803  000127                     	ds	1
   804  000128                     display_custom_char@data:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x28
   808  000128                     	ds	2
   809  00012A                     display_custom_char@mem_pos:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x2A
   813  00012A                     	ds	1
   814  00012B                     display_custom_char@counter:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x2B
   818  00012B                     	ds	2
   819  00012D                     _dtoa$1863:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x2D
   823  00012D                     	ds	2
   824  00012F                     dtoa@p:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x2F
   828  00012F                     	ds	2
   829  000131                     dtoa@w:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x31
   833  000131                     	ds	2
   834  000133                     dtoa@s:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x33
   838  000133                     	ds	2
   839  000135                     dtoa@n:
   840                           	callstack 0
   841                           
   842                           ; 8 bytes @ 0x35
   843  000135                     	ds	8
   844  00013D                     dtoa@i:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x3D
   848  00013D                     	ds	2
   849  00013F                     ?_vfpfcnvrt:
   850                           	callstack 0
   851  00013F                     vfpfcnvrt@fp:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x3F
   855  00013F                     	ds	2
   856  000141                     vfpfcnvrt@fmt:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x41
   860  000141                     	ds	2
   861  000143                     vfpfcnvrt@ap:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x43
   865  000143                     	ds	2
   866  000145                     ??_vfpfcnvrt:
   867                           
   868                           ; 1 bytes @ 0x45
   869  000145                     	ds	2
   870  000147                     vfpfcnvrt@ll:
   871                           	callstack 0
   872                           
   873                           ; 8 bytes @ 0x47
   874  000147                     	ds	8
   875  00014F                     ?_vfprintf:
   876                           	callstack 0
   877  00014F                     vfprintf@fp:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x4F
   881  00014F                     	ds	2
   882  000151                     vfprintf@fmt:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x51
   886  000151                     	ds	2
   887  000153                     vfprintf@ap:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x53
   891  000153                     	ds	2
   892  000155                     vfprintf@cfmt:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x55
   896  000155                     	ds	2
   897  000157                     ?_sprintf:
   898                           	callstack 0
   899  000157                     sprintf@s:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x57
   903  000157                     	ds	2
   904  000159                     sprintf@fmt:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x59
   908  000159                     	ds	4
   909  00015D                     sprintf@ap:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x5D
   913  00015D                     	ds	2
   914  00015F                     sprintf@f:
   915                           	callstack 0
   916                           
   917                           ; 11 bytes @ 0x5F
   918  00015F                     	ds	11
   919  00016A                     short_to_string@data:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x6A
   923  00016A                     	ds	2
   924  00016C                     short_to_string@str:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x6C
   928  00016C                     	ds	2
   929  00016E                     short_to_string@Temp:
   930                           	callstack 0
   931                           
   932                           ; 6 bytes @ 0x6E
   933  00016E                     	ds	6
   934  000174                     short_to_string@DataCounter:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x74
   938  000174                     	ds	1
   939  000175                     ??_main:
   940                           
   941                           ; 1 bytes @ 0x75
   942  000175                     	ds	2
   943                           
   944                           	psect	cstackBANK0
   945  000080                     __pcstackBANK0:
   946                           	callstack 0
   947  000080                     ??i1_pin_write_value:
   948                           
   949                           ; 1 bytes @ 0x0
   950  000080                     	ds	6
   951  000086                     i1pin_write_value@ret:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x6
   955  000086                     	ds	1
   956  000087                     i1lcd_send_4bits@lcd:
   957                           	callstack 0
   958  000087                     i1lcd_send_enable_4bit@lcd:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x7
   962  000087                     	ds	2
   963  000089                     i1lcd_send_4bits@_data_command:
   964                           	callstack 0
   965  000089                     i1lcd_send_enable_4bit@ret:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x9
   969  000089                     	ds	1
   970  00008A                     ??i1_lcd_send_4bits:
   971                           
   972                           ; 1 bytes @ 0xA
   973  00008A                     	ds	4
   974  00008E                     i1lcd_send_4bits@ret:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0xE
   978  00008E                     	ds	1
   979  00008F                     i1lcd_send_4bits@counter:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0xF
   983  00008F                     	ds	1
   984  000090                     i1send_command@lcd:
   985                           	callstack 0
   986  000090                     i1display_char@lcd:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x10
   990  000090                     	ds	2
   991  000092                     i1send_command@command:
   992                           	callstack 0
   993  000092                     i1display_char@data:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x12
   997  000092                     	ds	1
   998  000093                     i1send_command@ret:
   999                           	callstack 0
  1000  000093                     i1display_char@ret:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x13
  1004  000093                     	ds	1
  1005  000094                     i1lcd_4_bit_set_cursor@lcd:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x14
  1009  000094                     	ds	2
  1010  000096                     i1lcd_4_bit_set_cursor@row:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x16
  1014  000096                     	ds	1
  1015  000097                     i1lcd_4_bit_set_cursor@column:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x17
  1019  000097                     	ds	1
  1020  000098                     ??i1_lcd_4_bit_set_cursor:
  1021                           
  1022                           ; 1 bytes @ 0x18
  1023  000098                     	ds	2
  1024  00009A                     i1lcd_4_bit_set_cursor@ret:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x1A
  1028  00009A                     	ds	1
  1029  00009B                     i1display_char_at_position@lcd:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x1B
  1033  00009B                     	ds	2
  1034  00009D                     i1display_char_at_position@row:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x1D
  1038  00009D                     	ds	1
  1039  00009E                     i1display_char_at_position@coloumn:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x1E
  1043  00009E                     	ds	1
  1044  00009F                     i1display_char_at_position@data:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x1F
  1048  00009F                     	ds	1
  1049  0000A0                     i1display_char_at_position@ret:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x20
  1053  0000A0                     	ds	1
  1054  0000A1                     i1display_custom_char@lcd:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x21
  1058  0000A1                     	ds	2
  1059  0000A3                     i1display_custom_char@row:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x23
  1063  0000A3                     	ds	1
  1064  0000A4                     i1display_custom_char@cloumn:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x24
  1068  0000A4                     	ds	1
  1069  0000A5                     i1display_custom_char@data:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x25
  1073  0000A5                     	ds	2
  1074  0000A7                     i1display_custom_char@mem_pos:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x27
  1078  0000A7                     	ds	1
  1079  0000A8                     i1display_custom_char@counter:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x28
  1083  0000A8                     	ds	1
  1084  0000A9                     ??_int_1_handler:
  1085                           
  1086                           ; 1 bytes @ 0x29
  1087  0000A9                     	ds	2
  1088  0000AB                     ??_InterruptManagerLow:
  1089                           
  1090                           ; 1 bytes @ 0x2B
  1091  0000AB                     	ds	9
  1092                           
  1093                           	psect	cstackCOMRAM
  1094  000001                     __pcstackCOMRAM:
  1095                           	callstack 0
  1096  000001                     i2pin_write_value@pin:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x0
  1100  000001                     	ds	2
  1101  000003                     i2pin_write_value@value:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x2
  1105  000003                     	ds	1
  1106  000004                     ??i2_pin_write_value:
  1107                           
  1108                           ; 1 bytes @ 0x3
  1109  000004                     	ds	6
  1110  00000A                     i2pin_write_value@ret:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x9
  1114  00000A                     	ds	1
  1115  00000B                     i2lcd_send_4bits@lcd:
  1116                           	callstack 0
  1117  00000B                     i2lcd_send_enable_4bit@lcd:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0xA
  1121  00000B                     	ds	2
  1122  00000D                     i2lcd_send_4bits@_data_command:
  1123                           	callstack 0
  1124  00000D                     i2lcd_send_enable_4bit@ret:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0xC
  1128  00000D                     	ds	1
  1129  00000E                     ??i2_lcd_send_4bits:
  1130                           
  1131                           ; 1 bytes @ 0xD
  1132  00000E                     	ds	4
  1133  000012                     i2lcd_send_4bits@ret:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x11
  1137  000012                     	ds	1
  1138  000013                     i2lcd_send_4bits@counter:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x12
  1142  000013                     	ds	1
  1143  000014                     i2send_command@lcd:
  1144                           	callstack 0
  1145  000014                     i2display_char@lcd:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x13
  1149  000014                     	ds	2
  1150  000016                     i2send_command@command:
  1151                           	callstack 0
  1152  000016                     i2display_char@data:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x15
  1156  000016                     	ds	1
  1157  000017                     i2send_command@ret:
  1158                           	callstack 0
  1159  000017                     i2display_char@ret:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x16
  1163  000017                     	ds	1
  1164  000018                     i2lcd_4_bit_set_cursor@lcd:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x17
  1168  000018                     	ds	2
  1169  00001A                     i2lcd_4_bit_set_cursor@row:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x19
  1173  00001A                     	ds	1
  1174  00001B                     i2lcd_4_bit_set_cursor@column:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x1A
  1178  00001B                     	ds	1
  1179  00001C                     ??i2_lcd_4_bit_set_cursor:
  1180                           
  1181                           ; 1 bytes @ 0x1B
  1182  00001C                     	ds	2
  1183  00001E                     i2lcd_4_bit_set_cursor@ret:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x1D
  1187  00001E                     	ds	1
  1188  00001F                     i2display_char_at_position@lcd:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x1E
  1192  00001F                     	ds	2
  1193  000021                     i2display_char_at_position@row:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x20
  1197  000021                     	ds	1
  1198  000022                     i2display_char_at_position@coloumn:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x21
  1202  000022                     	ds	1
  1203  000023                     i2display_char_at_position@data:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x22
  1207  000023                     	ds	1
  1208  000024                     i2display_char_at_position@ret:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x23
  1212  000024                     	ds	1
  1213  000025                     i2display_custom_char@lcd:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x24
  1217  000025                     	ds	2
  1218  000027                     i2display_custom_char@row:
  1219                           	callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x26
  1222  000027                     	ds	1
  1223  000028                     i2display_custom_char@cloumn:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x27
  1227  000028                     	ds	1
  1228  000029                     i2display_custom_char@data:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x28
  1232  000029                     	ds	2
  1233  00002B                     i2display_custom_char@mem_pos:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x2A
  1237  00002B                     	ds	1
  1238  00002C                     i2display_custom_char@counter:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x2B
  1242  00002C                     	ds	1
  1243  00002D                     ??i2_int_1_handler:
  1244                           
  1245                           ; 1 bytes @ 0x2C
  1246  00002D                     	ds	2
  1247  00002F                     ??_InterruptManagerHigh:
  1248  00002F                     
  1249                           ; 1 bytes @ 0x2E
  1250  00002F                     	ds	6
  1251  000035                     i1pin_write_value@pin:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x34
  1255  000035                     	ds	2
  1256  000037                     i1pin_write_value@value:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x36
  1260  000037                     	ds	1
  1261  000038                     
  1262                           ; 1 bytes @ 0x37
  1263 ;;
  1264 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1265 ;;
  1266 ;; *************** function _main *****************
  1267 ;; Defined at:
  1268 ;;		line 42 in file "main.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  2  618[None  ] int 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;Total ram usage:        2 bytes
  1287 ;; Hardware stack levels required when called: 27
  1288 ;; This function calls:
  1289 ;;		_Interrupt_INTx_Init
  1290 ;;		_Timer1_init
  1291 ;;		_display_char_at_position
  1292 ;;		_display_custom_char
  1293 ;;		_display_string_at_position
  1294 ;;		_lcd_4_bit_init
  1295 ;;		_short_to_string
  1296 ;; This function is called by:
  1297 ;;		Startup code after reset
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text0
  1302  00132A                     __ptext0:
  1303                           	callstack 0
  1304  00132A                     _main:
  1305                           	callstack 4
  1306  00132A                     
  1307                           ;main.c: 44:     Timer1_init();
  1308  00132A  ECD1  F01C         	call	_Timer1_init	;wreg free
  1309  00132E                     
  1310                           ;main.c: 45:     Interrupt_INTx_Init(&int_t);
  1311  00132E  0EC7               	movlw	low _int_t
  1312  001330  0101               	movlb	1	; () banked
  1313  001332  6F0E               	movwf	Interrupt_INTx_Init@int_obj& (0+255),b
  1314  001334  0E01               	movlw	high _int_t
  1315  001336  6F0F               	movwf	(Interrupt_INTx_Init@int_obj+1)& (0+255),b
  1316  001338  ECAF  F01A         	call	_Interrupt_INTx_Init	;wreg free
  1317  00133C                     
  1318                           ;main.c: 46:     lcd_4_bit_init(&lcd);
  1319  00133C  0EC1               	movlw	low _lcd
  1320  00133E  0101               	movlb	1	; () banked
  1321  001340  6F17               	movwf	lcd_4_bit_init@lcd& (0+255),b
  1322  001342  0E01               	movlw	high _lcd
  1323  001344  6F18               	movwf	(lcd_4_bit_init@lcd+1)& (0+255),b
  1324  001346  EC4E  F00E         	call	_lcd_4_bit_init	;wreg free
  1325  00134A                     l7063:
  1326                           
  1327                           ;main.c: 50:     for(y=20;y>0;y--)
  1328  00134A  0E14               	movlw	20
  1329  00134C  0101               	movlb	1	; () banked
  1330  00134E  6F80               	movwf	_y& (0+255),b
  1331  001350                     l7069:
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;main.c: 51:     {;main.c: 52:         display_custom_char(&lcd,4,y,ground,5);
  1335  001350  0EC1               	movlw	low _lcd
  1336  001352  6F24               	movwf	display_custom_char@lcd& (0+255),b
  1337  001354  0E01               	movlw	high _lcd
  1338  001356  6F25               	movwf	(display_custom_char@lcd+1)& (0+255),b
  1339  001358  0E04               	movlw	4
  1340  00135A  6F26               	movwf	display_custom_char@row& (0+255),b
  1341  00135C  C180  F127         	movff	_y,display_custom_char@cloumn
  1342  001360  0EA9               	movlw	low _ground
  1343  001362  6F28               	movwf	display_custom_char@data& (0+255),b
  1344  001364  0E01               	movlw	high _ground
  1345  001366  6F29               	movwf	(display_custom_char@data+1)& (0+255),b
  1346  001368  0E05               	movlw	5
  1347  00136A  6F2A               	movwf	display_custom_char@mem_pos& (0+255),b
  1348  00136C  EC59  F017         	call	_display_custom_char	;wreg free
  1349  001370                     
  1350                           ;main.c: 53:     }
  1351  001370  0101               	movlb	1	; () banked
  1352  001372  0780               	decf	_y& (0+255),f,b
  1353  001374                     
  1354                           ; BSR set to: 1
  1355  001374  5180               	movf	_y& (0+255),w,b
  1356  001376  A4D8               	btfss	status,2,c
  1357  001378  EFC0  F009         	goto	u6081
  1358  00137C  EFC2  F009         	goto	u6080
  1359  001380                     u6081:
  1360  001380  EFA8  F009         	goto	l7069
  1361  001384                     u6080:
  1362  001384                     
  1363                           ; BSR set to: 1
  1364                           ;main.c: 55:     display_custom_char(&lcd,3,4,dinasour,1);
  1365  001384  0EC1               	movlw	low _lcd
  1366  001386  6F24               	movwf	display_custom_char@lcd& (0+255),b
  1367  001388  0E01               	movlw	high _lcd
  1368  00138A  6F25               	movwf	(display_custom_char@lcd+1)& (0+255),b
  1369  00138C  0E03               	movlw	3
  1370  00138E  6F26               	movwf	display_custom_char@row& (0+255),b
  1371  001390  0E04               	movlw	4
  1372  001392  6F27               	movwf	display_custom_char@cloumn& (0+255),b
  1373  001394  0EB9               	movlw	low _dinasour
  1374  001396  6F28               	movwf	display_custom_char@data& (0+255),b
  1375  001398  0E01               	movlw	high _dinasour
  1376  00139A  6F29               	movwf	(display_custom_char@data+1)& (0+255),b
  1377  00139C  0E01               	movlw	1
  1378  00139E  6F2A               	movwf	display_custom_char@mem_pos& (0+255),b
  1379  0013A0  EC59  F017         	call	_display_custom_char	;wreg free
  1380  0013A4                     
  1381                           ;main.c: 56:     _delay((unsigned long)((30)*(8000000UL/4000.0)));
  1382  0013A4  0E4E               	movlw	78
  1383  0013A6  0101               	movlb	1	; () banked
  1384  0013A8  6F75               	movwf	??_main& (0+255),b
  1385  0013AA  0EEB               	movlw	235
  1386  0013AC                     u6117:
  1387  0013AC  2EE8               	decfsz	wreg,f,c
  1388  0013AE  D7FE               	bra	u6117
  1389  0013B0  2F75               	decfsz	??_main& (0+255),f,b
  1390  0013B2  D7FC               	bra	u6117
  1391  0013B4                     l7079:
  1392                           
  1393                           ;main.c: 59:     {;main.c: 60:         for(x=20;x>0;x--)
  1394  0013B4  0E14               	movlw	20
  1395  0013B6  0101               	movlb	1	; () banked
  1396  0013B8  6F81               	movwf	_x& (0+255),b
  1397  0013BA                     l7081:
  1398                           
  1399                           ; BSR set to: 1
  1400  0013BA  5181               	movf	_x& (0+255),w,b
  1401  0013BC  A4D8               	btfss	status,2,c
  1402  0013BE  EFE3  F009         	goto	u6091
  1403  0013C2  EFE5  F009         	goto	u6090
  1404  0013C6                     u6091:
  1405  0013C6  EFE7  F009         	goto	l7085
  1406  0013CA                     u6090:
  1407  0013CA  EFDA  F009         	goto	l7079
  1408  0013CE                     l7085:
  1409                           
  1410                           ; BSR set to: 1
  1411                           ;main.c: 61:         {;main.c: 62:            display_custom_char(&lcd,3,x,cactus,4);
  1412  0013CE  0EC1               	movlw	low _lcd
  1413  0013D0  6F24               	movwf	display_custom_char@lcd& (0+255),b
  1414  0013D2  0E01               	movlw	high _lcd
  1415  0013D4  6F25               	movwf	(display_custom_char@lcd+1)& (0+255),b
  1416  0013D6  0E03               	movlw	3
  1417  0013D8  6F26               	movwf	display_custom_char@row& (0+255),b
  1418  0013DA  C181  F127         	movff	_x,display_custom_char@cloumn
  1419  0013DE  0EB1               	movlw	low _cactus
  1420  0013E0  6F28               	movwf	display_custom_char@data& (0+255),b
  1421  0013E2  0E01               	movlw	high _cactus
  1422  0013E4  6F29               	movwf	(display_custom_char@data+1)& (0+255),b
  1423  0013E6  0E04               	movlw	4
  1424  0013E8  6F2A               	movwf	display_custom_char@mem_pos& (0+255),b
  1425  0013EA  EC59  F017         	call	_display_custom_char	;wreg free
  1426                           
  1427                           ;main.c: 63:            display_char_at_position(&lcd,3,x+1,'\0');
  1428  0013EE  0EC1               	movlw	low _lcd
  1429  0013F0  0101               	movlb	1	; () banked
  1430  0013F2  6F1E               	movwf	display_char_at_position@lcd& (0+255),b
  1431  0013F4  0E01               	movlw	high _lcd
  1432  0013F6  6F1F               	movwf	(display_char_at_position@lcd+1)& (0+255),b
  1433  0013F8  0E03               	movlw	3
  1434  0013FA  6F20               	movwf	display_char_at_position@row& (0+255),b
  1435  0013FC  2981               	incf	_x& (0+255),w,b
  1436  0013FE  6F21               	movwf	display_char_at_position@coloumn& (0+255),b
  1437  001400  0E00               	movlw	0
  1438  001402  6F22               	movwf	display_char_at_position@data& (0+255),b
  1439  001404  ECED  F015         	call	_display_char_at_position	;wreg free
  1440                           
  1441                           ;main.c: 64:            display_char_at_position(&lcd,3,1,'\0');
  1442  001408  0EC1               	movlw	low _lcd
  1443  00140A  0101               	movlb	1	; () banked
  1444  00140C  6F1E               	movwf	display_char_at_position@lcd& (0+255),b
  1445  00140E  0E01               	movlw	high _lcd
  1446  001410  6F1F               	movwf	(display_char_at_position@lcd+1)& (0+255),b
  1447  001412  0E03               	movlw	3
  1448  001414  6F20               	movwf	display_char_at_position@row& (0+255),b
  1449  001416  0E01               	movlw	1
  1450  001418  6F21               	movwf	display_char_at_position@coloumn& (0+255),b
  1451  00141A  0E00               	movlw	0
  1452  00141C  6F22               	movwf	display_char_at_position@data& (0+255),b
  1453  00141E  ECED  F015         	call	_display_char_at_position	;wreg free
  1454  001422                     
  1455                           ;main.c: 65:            _delay((unsigned long)((100)*(8000000UL/4000.0)));
  1456  001422  0E02               	movlw	2
  1457  001424  0101               	movlb	1	; () banked
  1458  001426  6F76               	movwf	(??_main+1)& (0+255),b
  1459  001428  0E04               	movlw	4
  1460  00142A  6F75               	movwf	??_main& (0+255),b
  1461  00142C  0EBA               	movlw	186
  1462  00142E                     u6127:
  1463  00142E  2EE8               	decfsz	wreg,f,c
  1464  001430  D7FE               	bra	u6127
  1465  001432  2F75               	decfsz	??_main& (0+255),f,b
  1466  001434  D7FC               	bra	u6127
  1467  001436  2F76               	decfsz	(??_main+1)& (0+255),f,b
  1468  001438  D7FA               	bra	u6127
  1469  00143A  F000               	nop	
  1470  00143C                     
  1471                           ;main.c: 68:            if(x==4)
  1472  00143C  0E04               	movlw	4
  1473  00143E  0101               	movlb	1	; () banked
  1474  001440  1981               	xorwf	_x& (0+255),w,b
  1475  001442  A4D8               	btfss	status,2,c
  1476  001444  EF26  F00A         	goto	u6101
  1477  001448  EF28  F00A         	goto	u6100
  1478  00144C                     u6101:
  1479  00144C  EF64  F00A         	goto	l7101
  1480  001450                     u6100:
  1481  001450                     
  1482                           ; BSR set to: 1
  1483                           ;main.c: 69:            {;main.c: 70:               display_string_at_position(&lcd,1,5,
      +                          "game over");
  1484  001450  0EC1               	movlw	low _lcd
  1485  001452  6F1E               	movwf	display_string_at_position@lcd& (0+255),b
  1486  001454  0E01               	movlw	high _lcd
  1487  001456  6F1F               	movwf	(display_string_at_position@lcd+1)& (0+255),b
  1488  001458  0E01               	movlw	1
  1489  00145A  6F20               	movwf	display_string_at_position@row& (0+255),b
  1490  00145C  0E05               	movlw	5
  1491  00145E  6F21               	movwf	display_string_at_position@coloumn& (0+255),b
  1492  001460  0E1B               	movlw	low STR_4
  1493  001462  6F22               	movwf	display_string_at_position@data& (0+255),b
  1494  001464  0E10               	movlw	high STR_4
  1495  001466  6F23               	movwf	(display_string_at_position@data+1)& (0+255),b
  1496  001468  EC9F  F015         	call	_display_string_at_position	;wreg free
  1497  00146C                     
  1498                           ;main.c: 71:               counter=0;
  1499  00146C  0E00               	movlw	0
  1500  00146E  0101               	movlb	1	; () banked
  1501  001470  6F7F               	movwf	_counter& (0+255),b
  1502  001472                     
  1503                           ; BSR set to: 1
  1504                           ;main.c: 72:               _delay((unsigned long)((1000)*(8000000UL/4000.0)));
  1505  001472  0E0B               	movlw	11
  1506  001474  0101               	movlb	1	; () banked
  1507  001476  6F76               	movwf	(??_main+1)& (0+255),b
  1508  001478  0E26               	movlw	38
  1509  00147A  6F75               	movwf	??_main& (0+255),b
  1510  00147C  0E5D               	movlw	93
  1511  00147E                     u6137:
  1512  00147E  2EE8               	decfsz	wreg,f,c
  1513  001480  D7FE               	bra	u6137
  1514  001482  2F75               	decfsz	??_main& (0+255),f,b
  1515  001484  D7FC               	bra	u6137
  1516  001486  2F76               	decfsz	(??_main+1)& (0+255),f,b
  1517  001488  D7FA               	bra	u6137
  1518  00148A  D000               	nop2	
  1519  00148C                     
  1520                           ;main.c: 73:                display_string_at_position(&lcd,1,5,"         ");
  1521  00148C  0EC1               	movlw	low _lcd
  1522  00148E  0101               	movlb	1	; () banked
  1523  001490  6F1E               	movwf	display_string_at_position@lcd& (0+255),b
  1524  001492  0E01               	movlw	high _lcd
  1525  001494  6F1F               	movwf	(display_string_at_position@lcd+1)& (0+255),b
  1526  001496  0E01               	movlw	1
  1527  001498  6F20               	movwf	display_string_at_position@row& (0+255),b
  1528  00149A  0E05               	movlw	5
  1529  00149C  6F21               	movwf	display_string_at_position@coloumn& (0+255),b
  1530  00149E  0E11               	movlw	low STR_5
  1531  0014A0  6F22               	movwf	display_string_at_position@data& (0+255),b
  1532  0014A2  0E10               	movlw	high STR_5
  1533  0014A4  6F23               	movwf	(display_string_at_position@data+1)& (0+255),b
  1534  0014A6  EC9F  F015         	call	_display_string_at_position	;wreg free
  1535  0014AA                     
  1536                           ;main.c: 74:                 display_char_at_position(&lcd,1,13,'\0');
  1537  0014AA  0EC1               	movlw	low _lcd
  1538  0014AC  0101               	movlb	1	; () banked
  1539  0014AE  6F1E               	movwf	display_char_at_position@lcd& (0+255),b
  1540  0014B0  0E01               	movlw	high _lcd
  1541  0014B2  6F1F               	movwf	(display_char_at_position@lcd+1)& (0+255),b
  1542  0014B4  0E01               	movlw	1
  1543  0014B6  6F20               	movwf	display_char_at_position@row& (0+255),b
  1544  0014B8  0E0D               	movlw	13
  1545  0014BA  6F21               	movwf	display_char_at_position@coloumn& (0+255),b
  1546  0014BC  0E00               	movlw	0
  1547  0014BE  6F22               	movwf	display_char_at_position@data& (0+255),b
  1548  0014C0  ECED  F015         	call	_display_char_at_position	;wreg free
  1549                           
  1550                           ;main.c: 75:               goto loop;
  1551  0014C4  EFA5  F009         	goto	l7063
  1552  0014C8                     l7101:
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;main.c: 78:            short_to_string(counter,num);
  1556  0014C8  C17F  F16A         	movff	_counter,short_to_string@data
  1557  0014CC  6B6B               	clrf	(short_to_string@data+1)& (0+255),b
  1558  0014CE  0EA2               	movlw	low _num
  1559  0014D0  6F6C               	movwf	short_to_string@str& (0+255),b
  1560  0014D2  0E01               	movlw	high _num
  1561  0014D4  6F6D               	movwf	(short_to_string@str+1)& (0+255),b
  1562  0014D6  ECA6  F014         	call	_short_to_string	;wreg free
  1563  0014DA                     
  1564                           ;main.c: 79:            display_string_at_position(&lcd,1,6,"score=");
  1565  0014DA  0EC1               	movlw	low _lcd
  1566  0014DC  0101               	movlb	1	; () banked
  1567  0014DE  6F1E               	movwf	display_string_at_position@lcd& (0+255),b
  1568  0014E0  0E01               	movlw	high _lcd
  1569  0014E2  6F1F               	movwf	(display_string_at_position@lcd+1)& (0+255),b
  1570  0014E4  0E01               	movlw	1
  1571  0014E6  6F20               	movwf	display_string_at_position@row& (0+255),b
  1572  0014E8  0E06               	movlw	6
  1573  0014EA  6F21               	movwf	display_string_at_position@coloumn& (0+255),b
  1574  0014EC  0E25               	movlw	low STR_6
  1575  0014EE  6F22               	movwf	display_string_at_position@data& (0+255),b
  1576  0014F0  0E10               	movlw	high STR_6
  1577  0014F2  6F23               	movwf	(display_string_at_position@data+1)& (0+255),b
  1578  0014F4  EC9F  F015         	call	_display_string_at_position	;wreg free
  1579  0014F8                     
  1580                           ;main.c: 80:            display_string_at_position(&lcd,1,13,num);
  1581  0014F8  0EC1               	movlw	low _lcd
  1582  0014FA  0101               	movlb	1	; () banked
  1583  0014FC  6F1E               	movwf	display_string_at_position@lcd& (0+255),b
  1584  0014FE  0E01               	movlw	high _lcd
  1585  001500  6F1F               	movwf	(display_string_at_position@lcd+1)& (0+255),b
  1586  001502  0E01               	movlw	1
  1587  001504  6F20               	movwf	display_string_at_position@row& (0+255),b
  1588  001506  0E0D               	movlw	13
  1589  001508  6F21               	movwf	display_string_at_position@coloumn& (0+255),b
  1590  00150A  0EA2               	movlw	low _num
  1591  00150C  6F22               	movwf	display_string_at_position@data& (0+255),b
  1592  00150E  0E01               	movlw	high _num
  1593  001510  6F23               	movwf	(display_string_at_position@data+1)& (0+255),b
  1594  001512  EC9F  F015         	call	_display_string_at_position	;wreg free
  1595  001516                     
  1596                           ;main.c: 81:         }
  1597  001516  0101               	movlb	1	; () banked
  1598  001518  0781               	decf	_x& (0+255),f,b
  1599  00151A  EFDD  F009         	goto	l7081
  1600  00151E  EF63  F000         	goto	start
  1601  001522                     __end_of_main:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _short_to_string *****************
  1605 ;; Defined at:
  1606 ;;		line 439 in file "ECU/LCD/lcd.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  data            2  106[BANK1 ] unsigned short 
  1609 ;;  str             2  108[BANK1 ] PTR unsigned char 
  1610 ;;		 -> num(7), 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  Temp            6  110[BANK1 ] unsigned char [6]
  1613 ;;  DataCounter     1  116[BANK1 ] unsigned char 
  1614 ;;  ret             1    0        unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      unsigned char 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:       11 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 26
  1631 ;; This function calls:
  1632 ;;		_memset
  1633 ;;		_sprintf
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text1
  1640  00294C                     __ptext1:
  1641                           	callstack 0
  1642  00294C                     _short_to_string:
  1643                           	callstack 4
  1644  00294C                     
  1645                           ;ECU/LCD/lcd.c: 442:     uint8 Temp[6] = {0};
  1646  00294C  EE21  F06E         	lfsr	2,short_to_string@Temp
  1647  002950  0E05               	movlw	5
  1648  002952                     u5421:
  1649  002952  6ADE               	clrf	postinc2,c
  1650  002954  06E8               	decf	wreg,f,c
  1651  002956  E2FD               	bc	u5421
  1652  002958                     
  1653                           ;ECU/LCD/lcd.c: 443:     uint8 DataCounter = 0;
  1654  002958  0E00               	movlw	0
  1655  00295A  0101               	movlb	1	; () banked
  1656  00295C  6F74               	movwf	short_to_string@DataCounter& (0+255),b
  1657  00295E                     
  1658                           ; BSR set to: 1
  1659                           ;ECU/LCD/lcd.c: 444:     if(((void*)0) == str)
  1660  00295E  516C               	movf	short_to_string@str& (0+255),w,b
  1661  002960  116D               	iorwf	(short_to_string@str+1)& (0+255),w,b
  1662  002962  A4D8               	btfss	status,2,c
  1663  002964  EFB6  F014         	goto	u5431
  1664  002968  EFB8  F014         	goto	u5430
  1665  00296C                     u5431:
  1666  00296C  EFBA  F014         	goto	l6565
  1667  002970                     u5430:
  1668  002970                     
  1669                           ; BSR set to: 1
  1670                           ;ECU/LCD/lcd.c: 447:     }
  1671  002970  EFFF  F014         	goto	l208
  1672  002974                     l6565:
  1673                           
  1674                           ; BSR set to: 1
  1675                           ;ECU/LCD/lcd.c: 449:     {;ECU/LCD/lcd.c: 450:         memset(str, ' ', 5);
  1676  002974  C16C  F100         	movff	short_to_string@str,memset@dest
  1677  002978  C16D  F101         	movff	short_to_string@str+1,memset@dest+1
  1678  00297C  0E00               	movlw	0
  1679  00297E  6F03               	movwf	(memset@c+1)& (0+255),b
  1680  002980  0E20               	movlw	32
  1681  002982  6F02               	movwf	memset@c& (0+255),b
  1682  002984  0E00               	movlw	0
  1683  002986  6F05               	movwf	(memset@n+1)& (0+255),b
  1684  002988  0E05               	movlw	5
  1685  00298A  6F04               	movwf	memset@n& (0+255),b
  1686  00298C  EC3A  F00C         	call	_memset	;wreg free
  1687  002990                     
  1688                           ;ECU/LCD/lcd.c: 451:         str[5] = '\0';
  1689  002990  0101               	movlb	1	; () banked
  1690  002992  EE20 F005          	lfsr	2,5
  1691  002996  516C               	movf	short_to_string@str& (0+255),w,b
  1692  002998  26D9               	addwf	fsr2l,f,c
  1693  00299A  516D               	movf	(short_to_string@str+1)& (0+255),w,b
  1694  00299C  22DA               	addwfc	fsr2h,f,c
  1695  00299E  0E00               	movlw	0
  1696  0029A0  6EDF               	movwf	indf2,c
  1697  0029A2                     
  1698                           ; BSR set to: 1
  1699                           ;ECU/LCD/lcd.c: 452:         sprintf((char *)Temp, "%i", data);
  1700  0029A2  0E6E               	movlw	low short_to_string@Temp
  1701  0029A4  6F57               	movwf	sprintf@s& (0+255),b
  1702  0029A6  0E01               	movlw	high short_to_string@Temp
  1703  0029A8  6F58               	movwf	(sprintf@s+1)& (0+255),b
  1704  0029AA  0E2C               	movlw	low STR_1
  1705  0029AC  6F59               	movwf	sprintf@fmt& (0+255),b
  1706  0029AE  0E10               	movlw	high STR_1
  1707  0029B0  6F5A               	movwf	(sprintf@fmt+1)& (0+255),b
  1708  0029B2  C16A  F15B         	movff	short_to_string@data,?_sprintf+4
  1709  0029B6  C16B  F15C         	movff	short_to_string@data+1,?_sprintf+5
  1710  0029BA  EC6C  F01B         	call	_sprintf	;wreg free
  1711                           
  1712                           ;ECU/LCD/lcd.c: 453:         while(Temp[DataCounter] != '\0')
  1713  0029BE  EFF0  F014         	goto	l6575
  1714  0029C2                     l6571:
  1715                           
  1716                           ; BSR set to: 1
  1717                           ;ECU/LCD/lcd.c: 454:         {;ECU/LCD/lcd.c: 455:             str[DataCounter] = Temp[D
      +                          ataCounter];
  1718  0029C2  0E6E               	movlw	low short_to_string@Temp
  1719  0029C4  2574               	addwf	short_to_string@DataCounter& (0+255),w,b
  1720  0029C6  6ED9               	movwf	fsr2l,c
  1721  0029C8  6ADA               	clrf	fsr2h,c
  1722  0029CA  0E01               	movlw	high short_to_string@Temp
  1723  0029CC  22DA               	addwfc	fsr2h,f,c
  1724  0029CE  5174               	movf	short_to_string@DataCounter& (0+255),w,b
  1725  0029D0  256C               	addwf	short_to_string@str& (0+255),w,b
  1726  0029D2  6EE1               	movwf	fsr1l,c
  1727  0029D4  0E00               	movlw	0
  1728  0029D6  216D               	addwfc	(short_to_string@str+1)& (0+255),w,b
  1729  0029D8  6EE2               	movwf	fsr1h,c
  1730  0029DA  CFDF FFE7          	movff	indf2,indf1
  1731  0029DE                     
  1732                           ; BSR set to: 1
  1733                           ;ECU/LCD/lcd.c: 456:             DataCounter++;
  1734  0029DE  2B74               	incf	short_to_string@DataCounter& (0+255),f,b
  1735  0029E0                     l6575:
  1736                           
  1737                           ;ECU/LCD/lcd.c: 453:         while(Temp[DataCounter] != '\0')
  1738  0029E0  0E6E               	movlw	low short_to_string@Temp
  1739  0029E2  0101               	movlb	1	; () banked
  1740  0029E4  2574               	addwf	short_to_string@DataCounter& (0+255),w,b
  1741  0029E6  6ED9               	movwf	fsr2l,c
  1742  0029E8  6ADA               	clrf	fsr2h,c
  1743  0029EA  0E01               	movlw	high short_to_string@Temp
  1744  0029EC  22DA               	addwfc	fsr2h,f,c
  1745  0029EE  50DF               	movf	indf2,w,c
  1746  0029F0  A4D8               	btfss	status,2,c
  1747  0029F2  EFFD  F014         	goto	u5441
  1748  0029F6  EFFF  F014         	goto	u5440
  1749  0029FA                     u5441:
  1750  0029FA  EFE1  F014         	goto	l6571
  1751  0029FE                     u5440:
  1752  0029FE                     l208:
  1753                           
  1754                           ; BSR set to: 1
  1755  0029FE  0012               	return		;funcret
  1756  002A00                     __end_of_short_to_string:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _sprintf *****************
  1760 ;; Defined at:
  1761 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  s               2   87[BANK1 ] PTR unsigned char 
  1764 ;;		 -> short_to_string@Temp(6), 
  1765 ;;  fmt             2   89[BANK1 ] PTR const unsigned char 
  1766 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  f              11   95[BANK1 ] struct _IO_FILE
  1769 ;;  ap              2   93[BANK1 ] PTR void [1]
  1770 ;;		 -> ?_sprintf(2), 
  1771 ;;  ret             2    0        int 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2   87[BANK1 ] int 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1781 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;Total ram usage:       19 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 25
  1788 ;; This function calls:
  1789 ;;		_vfprintf
  1790 ;; This function is called by:
  1791 ;;		_short_to_string
  1792 ;;		_int_to_string
  1793 ;;		_byte_to_string
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text2
  1798  0036D8                     __ptext2:
  1799                           	callstack 0
  1800  0036D8                     _sprintf:
  1801                           	callstack 4
  1802  0036D8  0E5B               	movlw	low (?_sprintf+4)
  1803  0036DA  0101               	movlb	1	; () banked
  1804  0036DC  6F5D               	movwf	sprintf@ap& (0+255),b
  1805  0036DE  0E01               	movlw	high (?_sprintf+4)
  1806  0036E0  6F5E               	movwf	(sprintf@ap+1)& (0+255),b
  1807  0036E2  C157  F15F         	movff	sprintf@s,sprintf@f
  1808  0036E6  C158  F160         	movff	sprintf@s+1,sprintf@f+1
  1809  0036EA                     
  1810                           ; BSR set to: 1
  1811  0036EA  0E00               	movlw	0
  1812  0036EC  6F63               	movwf	(sprintf@f+4)& (0+255),b
  1813  0036EE  0E00               	movlw	0
  1814  0036F0  6F62               	movwf	(sprintf@f+3)& (0+255),b
  1815  0036F2                     
  1816                           ; BSR set to: 1
  1817  0036F2  0E00               	movlw	0
  1818  0036F4  6F69               	movwf	(sprintf@f+10)& (0+255),b
  1819  0036F6  0E00               	movlw	0
  1820  0036F8  6F68               	movwf	(sprintf@f+9)& (0+255),b
  1821  0036FA                     
  1822                           ; BSR set to: 1
  1823  0036FA  0E5F               	movlw	low sprintf@f
  1824  0036FC  6F4F               	movwf	vfprintf@fp& (0+255),b
  1825  0036FE  0E01               	movlw	high sprintf@f
  1826  003700  6F50               	movwf	(vfprintf@fp+1)& (0+255),b
  1827  003702  C159  F151         	movff	sprintf@fmt,vfprintf@fmt
  1828  003706  C15A  F152         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1829  00370A  0E5D               	movlw	low sprintf@ap
  1830  00370C  6F53               	movwf	vfprintf@ap& (0+255),b
  1831  00370E  0E01               	movlw	high sprintf@ap
  1832  003710  6F54               	movwf	(vfprintf@ap+1)& (0+255),b
  1833  003712  ECE4  F01A         	call	_vfprintf	;wreg free
  1834  003716  0101               	movlb	1	; () banked
  1835  003718  5162               	movf	(sprintf@f+3)& (0+255),w,b
  1836  00371A  2557               	addwf	sprintf@s& (0+255),w,b
  1837  00371C  6ED9               	movwf	fsr2l,c
  1838  00371E  5163               	movf	(sprintf@f+4)& (0+255),w,b
  1839  003720  2158               	addwfc	(sprintf@s+1)& (0+255),w,b
  1840  003722  6EDA               	movwf	fsr2h,c
  1841  003724  0E00               	movlw	0
  1842  003726  6EDF               	movwf	indf2,c
  1843  003728                     
  1844                           ; BSR set to: 1
  1845  003728  0012               	return		;funcret
  1846  00372A                     __end_of_sprintf:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _vfprintf *****************
  1850 ;; Defined at:
  1851 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  fp              2   79[BANK1 ] PTR struct _IO_FILE
  1854 ;;		 -> sprintf@f(11), 
  1855 ;;  fmt             2   81[BANK1 ] PTR const unsigned char 
  1856 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1857 ;;  ap              2   83[BANK1 ] PTR PTR void 
  1858 ;;		 -> sprintf@ap(2), 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  cfmt            2   85[BANK1 ] PTR unsigned char 
  1861 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  2   79[BANK1 ] int 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1871 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;Total ram usage:        8 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 24
  1878 ;; This function calls:
  1879 ;;		_vfpfcnvrt
  1880 ;; This function is called by:
  1881 ;;		_sprintf
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text3
  1886  0035C8                     __ptext3:
  1887                           	callstack 0
  1888  0035C8                     _vfprintf:
  1889                           	callstack 4
  1890  0035C8                     
  1891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1892  0035C8  C151  F155         	movff	vfprintf@fmt,vfprintf@cfmt
  1893  0035CC  C152  F156         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1894  0035D0                     
  1895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1896  0035D0  0E00               	movlw	0
  1897  0035D2  0101               	movlb	1	; () banked
  1898  0035D4  6F7E               	movwf	(_nout+1)& (0+255),b
  1899  0035D6  0E00               	movlw	0
  1900  0035D8  6F7D               	movwf	_nout& (0+255),b
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1903  0035DA  EF02  F01B         	goto	l6111
  1904  0035DE                     l6109:
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1908  0035DE  C14F  F13F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1909  0035E2  C150  F140         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1910  0035E6  0E55               	movlw	low vfprintf@cfmt
  1911  0035E8  6F41               	movwf	vfpfcnvrt@fmt& (0+255),b
  1912  0035EA  0E01               	movlw	high vfprintf@cfmt
  1913  0035EC  6F42               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1914  0035EE  C153  F143         	movff	vfprintf@ap,vfpfcnvrt@ap
  1915  0035F2  C154  F144         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1916  0035F6  EC91  F00A         	call	_vfpfcnvrt	;wreg free
  1917  0035FA  0101               	movlb	1	; () banked
  1918  0035FC  513F               	movf	?_vfpfcnvrt& (0+255),w,b
  1919  0035FE  277D               	addwf	_nout& (0+255),f,b
  1920  003600  5140               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1921  003602  237E               	addwfc	(_nout+1)& (0+255),f,b
  1922  003604                     l6111:
  1923                           
  1924                           ; BSR set to: 1
  1925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1926  003604  C155  FFF6         	movff	vfprintf@cfmt,tblptrl
  1927  003608  C156  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1928  00360C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1929  00360C  6AF8               	clrf	tblptru,c
  1930  00360E                     	endif
  1931  00360E                     	if	0	;tblptru may be non-zero
  1932  00360E                     	endif
  1933  00360E  0008               	tblrd		*
  1934  003610  50F5               	movf	tablat,w,c
  1935  003612  0900               	iorlw	0
  1936  003614  A4D8               	btfss	status,2,c
  1937  003616  EF0F  F01B         	goto	u5001
  1938  00361A  EF11  F01B         	goto	u5000
  1939  00361E                     u5001:
  1940  00361E  EFEF  F01A         	goto	l6109
  1941  003622                     u5000:
  1942  003622                     
  1943                           ; BSR set to: 1
  1944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1945  003622  C17D  F14F         	movff	_nout,?_vfprintf
  1946  003626  C17E  F150         	movff	_nout+1,?_vfprintf+1
  1947  00362A                     
  1948                           ; BSR set to: 1
  1949  00362A  0012               	return		;funcret
  1950  00362C                     __end_of_vfprintf:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _vfpfcnvrt *****************
  1954 ;; Defined at:
  1955 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  fp              2   63[BANK1 ] PTR struct _IO_FILE
  1958 ;;		 -> sprintf@f(11), 
  1959 ;;  fmt             2   65[BANK1 ] PTR PTR unsigned char 
  1960 ;;		 -> vfprintf@cfmt(2), 
  1961 ;;  ap              2   67[BANK1 ] PTR PTR void 
  1962 ;;		 -> sprintf@ap(2), 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  ll              8   71[BANK1 ] long long 
  1965 ;;  llu             8    0        unsigned long long 
  1966 ;;  f               4    0        unsigned long long 
  1967 ;;  vp              3    0        PTR void 
  1968 ;;  ct              3    0        unsigned char [3]
  1969 ;;  cp              3    0        PTR unsigned char 
  1970 ;;  i               2    0        int 
  1971 ;;  done            2    0        int 
  1972 ;;  c               1    0        unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2   63[BANK1 ] int 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:       16 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 23
  1989 ;; This function calls:
  1990 ;;		_dtoa
  1991 ;;		_fputc
  1992 ;; This function is called by:
  1993 ;;		_vfprintf
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text4
  1998  001522                     __ptext4:
  1999                           	callstack 0
  2000  001522                     _vfpfcnvrt:
  2001                           	callstack 4
  2002  001522                     
  2003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2004  001522  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2005  001526  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2006  00152A  CFDE FFF6          	movff	postinc2,tblptrl
  2007  00152E  CFDD FFF7          	movff	postdec2,tblptrh
  2008  001532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2009  001532  6AF8               	clrf	tblptru,c
  2010  001534                     	endif
  2011  001534                     	if	0	;tblptru may be non-zero
  2012  001534                     	endif
  2013  001534  0008               	tblrd		*
  2014  001536  50F5               	movf	tablat,w,c
  2015  001538  0A25               	xorlw	37
  2016  00153A  A4D8               	btfss	status,2,c
  2017  00153C  EFA2  F00A         	goto	u4871
  2018  001540  EFA4  F00A         	goto	u4870
  2019  001544                     u4871:
  2020  001544  EF57  F00B         	goto	l6021
  2021  001548                     u4870:
  2022  001548                     
  2023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2024  001548  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2025  00154C  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2026  001550  2ADE               	incf	postinc2,f,c
  2027  001552  0E00               	movlw	0
  2028  001554  22DD               	addwfc	postdec2,f,c
  2029  001556                     
  2030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2031  001556  0E00               	movlw	0
  2032  001558  0100               	movlb	0	; () banked
  2033  00155A  6FC9               	movwf	(_width+1)& (0+255),b
  2034  00155C  0E00               	movlw	0
  2035  00155E  6FC8               	movwf	_width& (0+255),b
  2036  001560  C0C8  F0CC         	movff	_width,_flags
  2037  001564  C0C9  F0CD         	movff	_width+1,_flags+1
  2038  001568                     
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2041  001568  69CA               	setf	_prec& (0+255),b
  2042  00156A  69CB               	setf	(_prec+1)& (0+255),b
  2043  00156C                     
  2044                           ; BSR set to: 0
  2045                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2046  00156C  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2047  001570  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2048  001574  CFDE FFF6          	movff	postinc2,tblptrl
  2049  001578  CFDD FFF7          	movff	postdec2,tblptrh
  2050  00157C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2051  00157C  6AF8               	clrf	tblptru,c
  2052  00157E                     	endif
  2053  00157E                     	if	0	;tblptru may be non-zero
  2054  00157E                     	endif
  2055  00157E  0008               	tblrd		*
  2056  001580  50F5               	movf	tablat,w,c
  2057  001582  0A64               	xorlw	100
  2058  001584  B4D8               	btfsc	status,2,c
  2059  001586  EFC7  F00A         	goto	u4881
  2060  00158A  EFC9  F00A         	goto	u4880
  2061  00158E                     u4881:
  2062  00158E  EFDC  F00A         	goto	l5999
  2063  001592                     u4880:
  2064  001592                     
  2065                           ; BSR set to: 0
  2066  001592  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2067  001596  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2068  00159A  CFDE FFF6          	movff	postinc2,tblptrl
  2069  00159E  CFDD FFF7          	movff	postdec2,tblptrh
  2070  0015A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2071  0015A2  6AF8               	clrf	tblptru,c
  2072  0015A4                     	endif
  2073  0015A4                     	if	0	;tblptru may be non-zero
  2074  0015A4                     	endif
  2075  0015A4  0008               	tblrd		*
  2076  0015A6  50F5               	movf	tablat,w,c
  2077  0015A8  0A69               	xorlw	105
  2078  0015AA  A4D8               	btfss	status,2,c
  2079  0015AC  EFDA  F00A         	goto	u4891
  2080  0015B0  EFDC  F00A         	goto	u4890
  2081  0015B4                     u4891:
  2082  0015B4  EF1D  F00B         	goto	l6005
  2083  0015B8                     u4890:
  2084  0015B8                     l5999:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2088  0015B8  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2089  0015BC  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2090  0015C0  2ADE               	incf	postinc2,f,c
  2091  0015C2  0E00               	movlw	0
  2092  0015C4  22DD               	addwfc	postdec2,f,c
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2095  0015C6  C143  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2096  0015CA  C144  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2097  0015CE  CFDF F145          	movff	indf2,??_vfpfcnvrt
  2098  0015D2  0E02               	movlw	2
  2099  0015D4  26DE               	addwf	postinc2,f,c
  2100  0015D6  CFDF F146          	movff	indf2,??_vfpfcnvrt+1
  2101  0015DA  0E00               	movlw	0
  2102  0015DC  22DD               	addwfc	postdec2,f,c
  2103  0015DE  C145  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2104  0015E2  C146  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2105  0015E6  CFDE F147          	movff	postinc2,vfpfcnvrt@ll
  2106  0015EA  CFDD F148          	movff	postdec2,vfpfcnvrt@ll+1
  2107  0015EE  0101               	movlb	1	; () banked
  2108  0015F0  0E00               	movlw	0
  2109  0015F2  BF48               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2110  0015F4  0EFF               	movlw	-1
  2111  0015F6  6F49               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2112  0015F8  6F4A               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2113  0015FA  6F4B               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2114  0015FC  6F4C               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2115  0015FE  6F4D               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2116  001600  6F4E               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2117  001602                     
  2118                           ; BSR set to: 1
  2119                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2120  001602  C13F  F11B         	movff	vfpfcnvrt@fp,dtoa@fp
  2121  001606  C140  F11C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2122  00160A  C147  F11D         	movff	vfpfcnvrt@ll,dtoa@d
  2123  00160E  C148  F11E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2124  001612  C149  F11F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2125  001616  C14A  F120         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2126  00161A  C14B  F121         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2127  00161E  C14C  F122         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2128  001622  C14D  F123         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2129  001626  C14E  F124         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2130  00162A  EC18  F008         	call	_dtoa	;wreg free
  2131  00162E  C11B  F13F         	movff	?_dtoa,?_vfpfcnvrt
  2132  001632  C11C  F140         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2133  001636  EF74  F00B         	goto	l1416
  2134  00163A                     l6005:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2138  00163A  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2139  00163E  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2140  001642  CFDE FFF6          	movff	postinc2,tblptrl
  2141  001646  CFDD FFF7          	movff	postdec2,tblptrh
  2142  00164A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2143  00164A  6AF8               	clrf	tblptru,c
  2144  00164C                     	endif
  2145  00164C                     	if	0	;tblptru may be non-zero
  2146  00164C                     	endif
  2147  00164C  0008               	tblrd		*
  2148  00164E  50F5               	movf	tablat,w,c
  2149  001650  0A25               	xorlw	37
  2150  001652  A4D8               	btfss	status,2,c
  2151  001654  EF2E  F00B         	goto	u4901
  2152  001658  EF30  F00B         	goto	u4900
  2153  00165C                     u4901:
  2154  00165C  EF49  F00B         	goto	l6015
  2155  001660                     u4900:
  2156  001660                     
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2159  001660  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2160  001664  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2161  001668  2ADE               	incf	postinc2,f,c
  2162  00166A  0E00               	movlw	0
  2163  00166C  22DD               	addwfc	postdec2,f,c
  2164  00166E                     
  2165                           ; BSR set to: 0
  2166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2167  00166E  0E00               	movlw	0
  2168  001670  0101               	movlb	1	; () banked
  2169  001672  6F01               	movwf	(fputc@c+1)& (0+255),b
  2170  001674  0E25               	movlw	37
  2171  001676  6F00               	movwf	fputc@c& (0+255),b
  2172  001678  C13F  F102         	movff	vfpfcnvrt@fp,fputc@fp
  2173  00167C  C140  F103         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2174  001680  ECAE  F012         	call	_fputc	;wreg free
  2175  001684                     l6011:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2178  001684  0E00               	movlw	0
  2179  001686  0101               	movlb	1	; () banked
  2180  001688  6F40               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2181  00168A  0E01               	movlw	1
  2182  00168C  6F3F               	movwf	?_vfpfcnvrt& (0+255),b
  2183  00168E  EF74  F00B         	goto	l1416
  2184  001692                     l6015:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2188  001692  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  001696  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  00169A  2ADE               	incf	postinc2,f,c
  2191  00169C  0E00               	movlw	0
  2192  00169E  22DD               	addwfc	postdec2,f,c
  2193  0016A0                     
  2194                           ; BSR set to: 0
  2195                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2196  0016A0  0E00               	movlw	0
  2197  0016A2  0101               	movlb	1	; () banked
  2198  0016A4  6F40               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2199  0016A6  0E00               	movlw	0
  2200  0016A8  6F3F               	movwf	?_vfpfcnvrt& (0+255),b
  2201  0016AA  EF74  F00B         	goto	l1416
  2202  0016AE                     l6021:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2205  0016AE  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2206  0016B2  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2207  0016B6  CFDE FFF6          	movff	postinc2,tblptrl
  2208  0016BA  CFDD FFF7          	movff	postdec2,tblptrh
  2209  0016BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2210  0016BE  6AF8               	clrf	tblptru,c
  2211  0016C0                     	endif
  2212  0016C0                     	if	0	;tblptru may be non-zero
  2213  0016C0                     	endif
  2214  0016C0  0008               	tblrd		*
  2215  0016C2  50F5               	movf	tablat,w,c
  2216  0016C4  0101               	movlb	1	; () banked
  2217  0016C6  6F00               	movwf	fputc@c& (0+255),b
  2218  0016C8  6B01               	clrf	(fputc@c+1)& (0+255),b
  2219  0016CA  C13F  F102         	movff	vfpfcnvrt@fp,fputc@fp
  2220  0016CE  C140  F103         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2221  0016D2  ECAE  F012         	call	_fputc	;wreg free
  2222  0016D6                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2224  0016D6  C141  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2225  0016DA  C142  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2226  0016DE  2ADE               	incf	postinc2,f,c
  2227  0016E0  0E00               	movlw	0
  2228  0016E2  22DD               	addwfc	postdec2,f,c
  2229  0016E4  EF42  F00B         	goto	l6011
  2230  0016E8                     l1416:
  2231  0016E8  0012               	return		;funcret
  2232  0016EA                     __end_of_vfpfcnvrt:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _dtoa *****************
  2236 ;; Defined at:
  2237 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  fp              2   27[BANK1 ] PTR struct _IO_FILE
  2240 ;;		 -> sprintf@f(11), 
  2241 ;;  d               8   29[BANK1 ] long long 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  n               8   53[BANK1 ] long long 
  2244 ;;  i               2   61[BANK1 ] int 
  2245 ;;  s               2   51[BANK1 ] int 
  2246 ;;  w               2   49[BANK1 ] int 
  2247 ;;  p               2   47[BANK1 ] int 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2   27[BANK1 ] int 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:       36 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 22
  2264 ;; This function calls:
  2265 ;;		___aodiv
  2266 ;;		___aomod
  2267 ;;		_abs
  2268 ;;		_pad
  2269 ;; This function is called by:
  2270 ;;		_vfpfcnvrt
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text5
  2275  001030                     __ptext5:
  2276                           	callstack 0
  2277  001030                     _dtoa:
  2278                           	callstack 4
  2279  001030                     
  2280                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2281  001030  C11D  F135         	movff	dtoa@d,dtoa@n
  2282  001034  C11E  F136         	movff	dtoa@d+1,dtoa@n+1
  2283  001038  C11F  F137         	movff	dtoa@d+2,dtoa@n+2
  2284  00103C  C120  F138         	movff	dtoa@d+3,dtoa@n+3
  2285  001040  C121  F139         	movff	dtoa@d+4,dtoa@n+4
  2286  001044  C122  F13A         	movff	dtoa@d+5,dtoa@n+5
  2287  001048  C123  F13B         	movff	dtoa@d+6,dtoa@n+6
  2288  00104C  C124  F13C         	movff	dtoa@d+7,dtoa@n+7
  2289  001050                     
  2290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2291  001050  0101               	movlb	1	; () banked
  2292  001052  BF3C               	btfsc	(dtoa@n+7)& (0+255),7,b
  2293  001054  EF2E  F008         	goto	u4701
  2294  001058  EF31  F008         	goto	u4700
  2295  00105C                     u4701:
  2296  00105C  0E01               	movlw	1
  2297  00105E  EF32  F008         	goto	u4710
  2298  001062                     u4700:
  2299  001062  0E00               	movlw	0
  2300  001064                     u4710:
  2301  001064  6F33               	movwf	dtoa@s& (0+255),b
  2302  001066  6B34               	clrf	(dtoa@s+1)& (0+255),b
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2305  001068  5133               	movf	dtoa@s& (0+255),w,b
  2306  00106A  1134               	iorwf	(dtoa@s+1)& (0+255),w,b
  2307  00106C  B4D8               	btfsc	status,2,c
  2308  00106E  EF3B  F008         	goto	u4721
  2309  001072  EF3D  F008         	goto	u4720
  2310  001076                     u4721:
  2311  001076  EF4D  F008         	goto	l5891
  2312  00107A                     u4720:
  2313  00107A                     
  2314                           ; BSR set to: 1
  2315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2316  00107A  1F3C               	comf	(dtoa@n+7)& (0+255),f,b
  2317  00107C  1F3B               	comf	(dtoa@n+6)& (0+255),f,b
  2318  00107E  1F3A               	comf	(dtoa@n+5)& (0+255),f,b
  2319  001080  1F39               	comf	(dtoa@n+4)& (0+255),f,b
  2320  001082  1F38               	comf	(dtoa@n+3)& (0+255),f,b
  2321  001084  1F37               	comf	(dtoa@n+2)& (0+255),f,b
  2322  001086  1F36               	comf	(dtoa@n+1)& (0+255),f,b
  2323  001088  6D35               	negf	dtoa@n& (0+255),b
  2324  00108A  0E00               	movlw	0
  2325  00108C  2336               	addwfc	(dtoa@n+1)& (0+255),f,b
  2326  00108E  2337               	addwfc	(dtoa@n+2)& (0+255),f,b
  2327  001090  2338               	addwfc	(dtoa@n+3)& (0+255),f,b
  2328  001092  2339               	addwfc	(dtoa@n+4)& (0+255),f,b
  2329  001094  233A               	addwfc	(dtoa@n+5)& (0+255),f,b
  2330  001096  233B               	addwfc	(dtoa@n+6)& (0+255),f,b
  2331  001098  233C               	addwfc	(dtoa@n+7)& (0+255),f,b
  2332  00109A                     l5891:
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2336  00109A  0100               	movlb	0	; () banked
  2337  00109C  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  2338  00109E  EF53  F008         	goto	u4731
  2339  0010A2  EF55  F008         	goto	u4730
  2340  0010A6                     u4731:
  2341  0010A6  EF56  F008         	goto	l5895
  2342  0010AA                     u4730:
  2343  0010AA                     
  2344                           ; BSR set to: 0
  2345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2346  0010AA  93CC               	bcf	_flags& (0+255),1,b
  2347  0010AC                     l5895:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2351  0010AC  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  2352  0010AE  EF63  F008         	goto	u4740
  2353  0010B2  51CB               	movf	(_prec+1)& (0+255),w,b
  2354  0010B4  E106               	bnz	u4741
  2355  0010B6  05CA               	decf	_prec& (0+255),w,b
  2356  0010B8  B0D8               	btfsc	status,0,c
  2357  0010BA  EF61  F008         	goto	u4741
  2358  0010BE  EF63  F008         	goto	u4740
  2359  0010C2                     u4741:
  2360  0010C2  EF6A  F008         	goto	l1389
  2361  0010C6                     u4740:
  2362  0010C6                     
  2363                           ; BSR set to: 0
  2364  0010C6  0E00               	movlw	0
  2365  0010C8  0101               	movlb	1	; () banked
  2366  0010CA  6F30               	movwf	(dtoa@p+1)& (0+255),b
  2367  0010CC  0E01               	movlw	1
  2368  0010CE  6F2F               	movwf	dtoa@p& (0+255),b
  2369  0010D0  EF6E  F008         	goto	l1391
  2370  0010D4                     l1389:
  2371                           
  2372                           ; BSR set to: 0
  2373  0010D4  C0CA  F12F         	movff	_prec,dtoa@p
  2374  0010D8  C0CB  F130         	movff	_prec+1,dtoa@p+1
  2375  0010DC                     l1391:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2378  0010DC  C0C8  F131         	movff	_width,dtoa@w
  2379  0010E0  C0C9  F132         	movff	_width+1,dtoa@w+1
  2380  0010E4                     
  2381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2382  0010E4  0101               	movlb	1	; () banked
  2383  0010E6  5133               	movf	dtoa@s& (0+255),w,b
  2384  0010E8  1134               	iorwf	(dtoa@s+1)& (0+255),w,b
  2385  0010EA  A4D8               	btfss	status,2,c
  2386  0010EC  EF7A  F008         	goto	u4751
  2387  0010F0  EF7C  F008         	goto	u4750
  2388  0010F4                     u4751:
  2389  0010F4  EF84  F008         	goto	l5903
  2390  0010F8                     u4750:
  2391  0010F8                     
  2392                           ; BSR set to: 1
  2393  0010F8  0100               	movlb	0	; () banked
  2394  0010FA  A5CC               	btfss	_flags& (0+255),2,b
  2395  0010FC  EF82  F008         	goto	u4761
  2396  001100  EF84  F008         	goto	u4760
  2397  001104                     u4761:
  2398  001104  EF88  F008         	goto	l5905
  2399  001108                     u4760:
  2400  001108                     l5903:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2403  001108  0101               	movlb	1	; () banked
  2404  00110A  0731               	decf	dtoa@w& (0+255),f,b
  2405  00110C  A0D8               	btfss	status,0,c
  2406  00110E  0732               	decf	(dtoa@w+1)& (0+255),f,b
  2407  001110                     l5905:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2410  001110  0E00               	movlw	0
  2411  001112  0101               	movlb	1	; () banked
  2412  001114  6F3E               	movwf	(dtoa@i+1)& (0+255),b
  2413  001116  0E1F               	movlw	31
  2414  001118  6F3D               	movwf	dtoa@i& (0+255),b
  2415  00111A                     
  2416                           ; BSR set to: 1
  2417                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2418  00111A  0E00               	movlw	0
  2419  00111C  6FA1               	movwf	(_dbuf+31)& (0+255),b
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2422  00111E  EF0F  F009         	goto	l5919
  2423  001122                     l5909:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2426  001122  0101               	movlb	1	; () banked
  2427  001124  073D               	decf	dtoa@i& (0+255),f,b
  2428  001126  A0D8               	btfss	status,0,c
  2429  001128  073E               	decf	(dtoa@i+1)& (0+255),f,b
  2430  00112A                     
  2431                           ; BSR set to: 1
  2432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2433  00112A  0E82               	movlw	low _dbuf
  2434  00112C  253D               	addwf	dtoa@i& (0+255),w,b
  2435  00112E  6ED9               	movwf	fsr2l,c
  2436  001130  0E01               	movlw	high _dbuf
  2437  001132  213E               	addwfc	(dtoa@i+1)& (0+255),w,b
  2438  001134  6EDA               	movwf	fsr2h,c
  2439  001136  C135  F100         	movff	dtoa@n,___aomod@dividend
  2440  00113A  C136  F101         	movff	dtoa@n+1,___aomod@dividend+1
  2441  00113E  C137  F102         	movff	dtoa@n+2,___aomod@dividend+2
  2442  001142  C138  F103         	movff	dtoa@n+3,___aomod@dividend+3
  2443  001146  C139  F104         	movff	dtoa@n+4,___aomod@dividend+4
  2444  00114A  C13A  F105         	movff	dtoa@n+5,___aomod@dividend+5
  2445  00114E  C13B  F106         	movff	dtoa@n+6,___aomod@dividend+6
  2446  001152  C13C  F107         	movff	dtoa@n+7,___aomod@dividend+7
  2447  001156  0E0A               	movlw	10
  2448  001158  6F08               	movwf	___aomod@divisor& (0+255),b
  2449  00115A  0E00               	movlw	0
  2450  00115C  6F09               	movwf	(___aomod@divisor+1)& (0+255),b
  2451  00115E  0E00               	movlw	0
  2452  001160  6F0A               	movwf	(___aomod@divisor+2)& (0+255),b
  2453  001162  0E00               	movlw	0
  2454  001164  6F0B               	movwf	(___aomod@divisor+3)& (0+255),b
  2455  001166  0E00               	movlw	0
  2456  001168  6F0C               	movwf	(___aomod@divisor+4)& (0+255),b
  2457  00116A  0E00               	movlw	0
  2458  00116C  6F0D               	movwf	(___aomod@divisor+5)& (0+255),b
  2459  00116E  0E00               	movlw	0
  2460  001170  6F0E               	movwf	(___aomod@divisor+6)& (0+255),b
  2461  001172  0E00               	movlw	0
  2462  001174  6F0F               	movwf	(___aomod@divisor+7)& (0+255),b
  2463  001176  ECF6  F00C         	call	___aomod	;wreg free
  2464  00117A  C100  F125         	movff	?___aomod,??_dtoa
  2465  00117E  C101  F126         	movff	?___aomod+1,??_dtoa+1
  2466  001182  C102  F127         	movff	?___aomod+2,??_dtoa+2
  2467  001186  C103  F128         	movff	?___aomod+3,??_dtoa+3
  2468  00118A  C104  F129         	movff	?___aomod+4,??_dtoa+4
  2469  00118E  C105  F12A         	movff	?___aomod+5,??_dtoa+5
  2470  001192  C106  F12B         	movff	?___aomod+6,??_dtoa+6
  2471  001196  C107  F12C         	movff	?___aomod+7,??_dtoa+7
  2472  00119A  C125  F112         	movff	??_dtoa,abs@a
  2473  00119E  C127  F113         	movff	??_dtoa+2,abs@a+1
  2474  0011A2  ECE1  F01B         	call	_abs	;wreg free
  2475  0011A6  0101               	movlb	1	; () banked
  2476  0011A8  5112               	movf	?_abs& (0+255),w,b
  2477  0011AA  0F30               	addlw	48
  2478  0011AC  6EDF               	movwf	indf2,c
  2479  0011AE                     
  2480                           ; BSR set to: 1
  2481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2482  0011AE  072F               	decf	dtoa@p& (0+255),f,b
  2483  0011B0  A0D8               	btfss	status,0,c
  2484  0011B2  0730               	decf	(dtoa@p+1)& (0+255),f,b
  2485  0011B4                     
  2486                           ; BSR set to: 1
  2487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2488  0011B4  0731               	decf	dtoa@w& (0+255),f,b
  2489  0011B6  A0D8               	btfss	status,0,c
  2490  0011B8  0732               	decf	(dtoa@w+1)& (0+255),f,b
  2491  0011BA                     
  2492                           ; BSR set to: 1
  2493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2494  0011BA  C135  F100         	movff	dtoa@n,___aodiv@dividend
  2495  0011BE  C136  F101         	movff	dtoa@n+1,___aodiv@dividend+1
  2496  0011C2  C137  F102         	movff	dtoa@n+2,___aodiv@dividend+2
  2497  0011C6  C138  F103         	movff	dtoa@n+3,___aodiv@dividend+3
  2498  0011CA  C139  F104         	movff	dtoa@n+4,___aodiv@dividend+4
  2499  0011CE  C13A  F105         	movff	dtoa@n+5,___aodiv@dividend+5
  2500  0011D2  C13B  F106         	movff	dtoa@n+6,___aodiv@dividend+6
  2501  0011D6  C13C  F107         	movff	dtoa@n+7,___aodiv@dividend+7
  2502  0011DA  0E0A               	movlw	10
  2503  0011DC  6F08               	movwf	___aodiv@divisor& (0+255),b
  2504  0011DE  0E00               	movlw	0
  2505  0011E0  6F09               	movwf	(___aodiv@divisor+1)& (0+255),b
  2506  0011E2  0E00               	movlw	0
  2507  0011E4  6F0A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2508  0011E6  0E00               	movlw	0
  2509  0011E8  6F0B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2510  0011EA  0E00               	movlw	0
  2511  0011EC  6F0C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2512  0011EE  0E00               	movlw	0
  2513  0011F0  6F0D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2514  0011F2  0E00               	movlw	0
  2515  0011F4  6F0E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2516  0011F6  0E00               	movlw	0
  2517  0011F8  6F0F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2518  0011FA  EC75  F00B         	call	___aodiv	;wreg free
  2519  0011FE  C100  F135         	movff	?___aodiv,dtoa@n
  2520  001202  C101  F136         	movff	?___aodiv+1,dtoa@n+1
  2521  001206  C102  F137         	movff	?___aodiv+2,dtoa@n+2
  2522  00120A  C103  F138         	movff	?___aodiv+3,dtoa@n+3
  2523  00120E  C104  F139         	movff	?___aodiv+4,dtoa@n+4
  2524  001212  C105  F13A         	movff	?___aodiv+5,dtoa@n+5
  2525  001216  C106  F13B         	movff	?___aodiv+6,dtoa@n+6
  2526  00121A  C107  F13C         	movff	?___aodiv+7,dtoa@n+7
  2527  00121E                     l5919:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2530  00121E  0101               	movlb	1	; () banked
  2531  001220  BF3E               	btfsc	(dtoa@i+1)& (0+255),7,b
  2532  001222  EF1B  F009         	goto	u4771
  2533  001226  513E               	movf	(dtoa@i+1)& (0+255),w,b
  2534  001228  E108               	bnz	u4770
  2535  00122A  053D               	decf	dtoa@i& (0+255),w,b
  2536  00122C  A0D8               	btfss	status,0,c
  2537  00122E  EF1B  F009         	goto	u4771
  2538  001232  EF1D  F009         	goto	u4770
  2539  001236                     u4771:
  2540  001236  EF4E  F009         	goto	l5929
  2541  00123A                     u4770:
  2542  00123A                     
  2543                           ; BSR set to: 1
  2544  00123A  5135               	movf	dtoa@n& (0+255),w,b
  2545  00123C  1136               	iorwf	(dtoa@n+1)& (0+255),w,b
  2546  00123E  1137               	iorwf	(dtoa@n+2)& (0+255),w,b
  2547  001240  1138               	iorwf	(dtoa@n+3)& (0+255),w,b
  2548  001242  1139               	iorwf	(dtoa@n+4)& (0+255),w,b
  2549  001244  113A               	iorwf	(dtoa@n+5)& (0+255),w,b
  2550  001246  113B               	iorwf	(dtoa@n+6)& (0+255),w,b
  2551  001248  113C               	iorwf	(dtoa@n+7)& (0+255),w,b
  2552  00124A  A4D8               	btfss	status,2,c
  2553  00124C  EF2A  F009         	goto	u4781
  2554  001250  EF2C  F009         	goto	u4780
  2555  001254                     u4781:
  2556  001254  EF91  F008         	goto	l5909
  2557  001258                     u4780:
  2558  001258                     
  2559                           ; BSR set to: 1
  2560  001258  BF30               	btfsc	(dtoa@p+1)& (0+255),7,b
  2561  00125A  EF39  F009         	goto	u4790
  2562  00125E  5130               	movf	(dtoa@p+1)& (0+255),w,b
  2563  001260  E106               	bnz	u4791
  2564  001262  052F               	decf	dtoa@p& (0+255),w,b
  2565  001264  B0D8               	btfsc	status,0,c
  2566  001266  EF37  F009         	goto	u4791
  2567  00126A  EF39  F009         	goto	u4790
  2568  00126E                     u4791:
  2569  00126E  EF91  F008         	goto	l5909
  2570  001272                     u4790:
  2571  001272                     
  2572                           ; BSR set to: 1
  2573  001272  BF32               	btfsc	(dtoa@w+1)& (0+255),7,b
  2574  001274  EF44  F009         	goto	u4801
  2575  001278  5132               	movf	(dtoa@w+1)& (0+255),w,b
  2576  00127A  E108               	bnz	u4800
  2577  00127C  0531               	decf	dtoa@w& (0+255),w,b
  2578  00127E  A0D8               	btfss	status,0,c
  2579  001280  EF44  F009         	goto	u4801
  2580  001284  EF46  F009         	goto	u4800
  2581  001288                     u4801:
  2582  001288  EF4E  F009         	goto	l5929
  2583  00128C                     u4800:
  2584  00128C                     
  2585                           ; BSR set to: 1
  2586  00128C  0100               	movlb	0	; () banked
  2587  00128E  B3CC               	btfsc	_flags& (0+255),1,b
  2588  001290  EF4C  F009         	goto	u4811
  2589  001294  EF4E  F009         	goto	u4810
  2590  001298                     u4811:
  2591  001298  EF91  F008         	goto	l5909
  2592  00129C                     u4810:
  2593  00129C                     l5929:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2596  00129C  0101               	movlb	1	; () banked
  2597  00129E  5133               	movf	dtoa@s& (0+255),w,b
  2598  0012A0  1134               	iorwf	(dtoa@s+1)& (0+255),w,b
  2599  0012A2  A4D8               	btfss	status,2,c
  2600  0012A4  EF56  F009         	goto	u4821
  2601  0012A8  EF58  F009         	goto	u4820
  2602  0012AC                     u4821:
  2603  0012AC  EF60  F009         	goto	l5933
  2604  0012B0                     u4820:
  2605  0012B0                     
  2606                           ; BSR set to: 1
  2607  0012B0  0100               	movlb	0	; () banked
  2608  0012B2  A5CC               	btfss	_flags& (0+255),2,b
  2609  0012B4  EF5E  F009         	goto	u4831
  2610  0012B8  EF60  F009         	goto	u4830
  2611  0012BC                     u4831:
  2612  0012BC  EF7F  F009         	goto	l5943
  2613  0012C0                     u4830:
  2614  0012C0                     l5933:
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2617  0012C0  0101               	movlb	1	; () banked
  2618  0012C2  073D               	decf	dtoa@i& (0+255),f,b
  2619  0012C4  A0D8               	btfss	status,0,c
  2620  0012C6  073E               	decf	(dtoa@i+1)& (0+255),f,b
  2621  0012C8                     
  2622                           ; BSR set to: 1
  2623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2624  0012C8  5133               	movf	dtoa@s& (0+255),w,b
  2625  0012CA  1134               	iorwf	(dtoa@s+1)& (0+255),w,b
  2626  0012CC  A4D8               	btfss	status,2,c
  2627  0012CE  EF6B  F009         	goto	u4841
  2628  0012D2  EF6D  F009         	goto	u4840
  2629  0012D6                     u4841:
  2630  0012D6  EF73  F009         	goto	l5939
  2631  0012DA                     u4840:
  2632  0012DA                     
  2633                           ; BSR set to: 1
  2634  0012DA  0E00               	movlw	0
  2635  0012DC  6F2E               	movwf	(_dtoa$1863+1)& (0+255),b
  2636  0012DE  0E2B               	movlw	43
  2637  0012E0  6F2D               	movwf	_dtoa$1863& (0+255),b
  2638  0012E2  EF77  F009         	goto	l5941
  2639  0012E6                     l5939:
  2640                           
  2641                           ; BSR set to: 1
  2642  0012E6  0E00               	movlw	0
  2643  0012E8  6F2E               	movwf	(_dtoa$1863+1)& (0+255),b
  2644  0012EA  0E2D               	movlw	45
  2645  0012EC  6F2D               	movwf	_dtoa$1863& (0+255),b
  2646  0012EE                     l5941:
  2647                           
  2648                           ; BSR set to: 1
  2649  0012EE  0E82               	movlw	low _dbuf
  2650  0012F0  253D               	addwf	dtoa@i& (0+255),w,b
  2651  0012F2  6ED9               	movwf	fsr2l,c
  2652  0012F4  0E01               	movlw	high _dbuf
  2653  0012F6  213E               	addwfc	(dtoa@i+1)& (0+255),w,b
  2654  0012F8  6EDA               	movwf	fsr2h,c
  2655  0012FA  C12D  FFDF         	movff	_dtoa$1863,indf2
  2656  0012FE                     l5943:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2659  0012FE  C11B  F110         	movff	dtoa@fp,pad@fp
  2660  001302  C11C  F111         	movff	dtoa@fp+1,pad@fp+1
  2661  001306  0E82               	movlw	low _dbuf
  2662  001308  0101               	movlb	1	; () banked
  2663  00130A  253D               	addwf	dtoa@i& (0+255),w,b
  2664  00130C  6F12               	movwf	pad@buf& (0+255),b
  2665  00130E  0E01               	movlw	high _dbuf
  2666  001310  213E               	addwfc	(dtoa@i+1)& (0+255),w,b
  2667  001312  6F13               	movwf	(pad@buf+1)& (0+255),b
  2668  001314  C131  F114         	movff	dtoa@w,pad@p
  2669  001318  C132  F115         	movff	dtoa@w+1,pad@p+1
  2670  00131C  EC48  F012         	call	_pad	;wreg free
  2671  001320  C110  F11B         	movff	?_pad,?_dtoa
  2672  001324  C111  F11C         	movff	?_pad+1,?_dtoa+1
  2673  001328  0012               	return		;funcret
  2674  00132A                     __end_of_dtoa:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _pad *****************
  2678 ;; Defined at:
  2679 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  fp              2   16[BANK1 ] PTR struct _IO_FILE
  2682 ;;		 -> sprintf@f(11), 
  2683 ;;  buf             2   18[BANK1 ] PTR unsigned char 
  2684 ;;		 -> dbuf(32), 
  2685 ;;  p               2   20[BANK1 ] int 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  w               2   25[BANK1 ] int 
  2688 ;;  i               2   23[BANK1 ] int 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  2   16[BANK1 ] int 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2698 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;Total ram usage:       11 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 21
  2705 ;; This function calls:
  2706 ;;		_fputc
  2707 ;;		_fputs
  2708 ;;		_strlen
  2709 ;; This function is called by:
  2710 ;;		_dtoa
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text6
  2715  002490                     __ptext6:
  2716                           	callstack 0
  2717  002490                     _pad:
  2718                           	callstack 4
  2719  002490                     
  2720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2721  002490  0100               	movlb	0	; () banked
  2722  002492  A1CC               	btfss	_flags& (0+255),0,b
  2723  002494  EF4E  F012         	goto	u4601
  2724  002498  EF50  F012         	goto	u4600
  2725  00249C                     u4601:
  2726  00249C  EF5A  F012         	goto	l5813
  2727  0024A0                     u4600:
  2728  0024A0                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2731  0024A0  C112  F109         	movff	pad@buf,fputs@s
  2732  0024A4  C113  F10A         	movff	pad@buf+1,fputs@s+1
  2733  0024A8  C110  F10B         	movff	pad@fp,fputs@fp
  2734  0024AC  C111  F10C         	movff	pad@fp+1,fputs@fp+1
  2735  0024B0  ECBD  F01B         	call	_fputs	;wreg free
  2736  0024B4                     l5813:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2739  0024B4  0101               	movlb	1	; () banked
  2740  0024B6  BF15               	btfsc	(pad@p+1)& (0+255),7,b
  2741  0024B8  EF60  F012         	goto	u4611
  2742  0024BC  EF62  F012         	goto	u4610
  2743  0024C0                     u4611:
  2744  0024C0  EF68  F012         	goto	l5817
  2745  0024C4                     u4610:
  2746  0024C4                     
  2747                           ; BSR set to: 1
  2748  0024C4  C114  F119         	movff	pad@p,pad@w
  2749  0024C8  C115  F11A         	movff	pad@p+1,pad@w+1
  2750  0024CC  EF6C  F012         	goto	l1378
  2751  0024D0                     l5817:
  2752                           
  2753                           ; BSR set to: 1
  2754  0024D0  0E00               	movlw	0
  2755  0024D2  6F1A               	movwf	(pad@w+1)& (0+255),b
  2756  0024D4  0E00               	movlw	0
  2757  0024D6  6F19               	movwf	pad@w& (0+255),b
  2758  0024D8                     l1378:
  2759                           
  2760                           ; BSR set to: 1
  2761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2762  0024D8  0E00               	movlw	0
  2763  0024DA  6F18               	movwf	(pad@i+1)& (0+255),b
  2764  0024DC  0E00               	movlw	0
  2765  0024DE  6F17               	movwf	pad@i& (0+255),b
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2768  0024E0  EF7F  F012         	goto	l5823
  2769  0024E4                     l5819:
  2770                           
  2771                           ; BSR set to: 1
  2772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2773  0024E4  0E00               	movlw	0
  2774  0024E6  6F01               	movwf	(fputc@c+1)& (0+255),b
  2775  0024E8  0E20               	movlw	32
  2776  0024EA  6F00               	movwf	fputc@c& (0+255),b
  2777  0024EC  C110  F102         	movff	pad@fp,fputc@fp
  2778  0024F0  C111  F103         	movff	pad@fp+1,fputc@fp+1
  2779  0024F4  ECAE  F012         	call	_fputc	;wreg free
  2780  0024F8                     
  2781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2782  0024F8  0101               	movlb	1	; () banked
  2783  0024FA  4B17               	infsnz	pad@i& (0+255),f,b
  2784  0024FC  2B18               	incf	(pad@i+1)& (0+255),f,b
  2785  0024FE                     l5823:
  2786                           
  2787                           ; BSR set to: 1
  2788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2789  0024FE  5119               	movf	pad@w& (0+255),w,b
  2790  002500  5D17               	subwf	pad@i& (0+255),w,b
  2791  002502  5118               	movf	(pad@i+1)& (0+255),w,b
  2792  002504  0A80               	xorlw	128
  2793  002506  6F16               	movwf	??_pad& (0+255),b
  2794  002508  511A               	movf	(pad@w+1)& (0+255),w,b
  2795  00250A  0A80               	xorlw	128
  2796  00250C  5916               	subwfb	??_pad& (0+255),w,b
  2797  00250E  A0D8               	btfss	status,0,c
  2798  002510  EF8C  F012         	goto	u4621
  2799  002514  EF8E  F012         	goto	u4620
  2800  002518                     u4621:
  2801  002518  EF72  F012         	goto	l5819
  2802  00251C                     u4620:
  2803  00251C                     
  2804                           ; BSR set to: 1
  2805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2806  00251C  0100               	movlb	0	; () banked
  2807  00251E  B1CC               	btfsc	_flags& (0+255),0,b
  2808  002520  EF94  F012         	goto	u4631
  2809  002524  EF96  F012         	goto	u4630
  2810  002528                     u4631:
  2811  002528  EFA0  F012         	goto	l5827
  2812  00252C                     u4630:
  2813  00252C                     
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2816  00252C  C112  F109         	movff	pad@buf,fputs@s
  2817  002530  C113  F10A         	movff	pad@buf+1,fputs@s+1
  2818  002534  C110  F10B         	movff	pad@fp,fputs@fp
  2819  002538  C111  F10C         	movff	pad@fp+1,fputs@fp+1
  2820  00253C  ECBD  F01B         	call	_fputs	;wreg free
  2821  002540                     l5827:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2824  002540  C112  F100         	movff	pad@buf,strlen@s
  2825  002544  C113  F101         	movff	pad@buf+1,strlen@s+1
  2826  002548  EC02  F01C         	call	_strlen	;wreg free
  2827  00254C  0101               	movlb	1	; () banked
  2828  00254E  5119               	movf	pad@w& (0+255),w,b
  2829  002550  2500               	addwf	?_strlen& (0+255),w,b
  2830  002552  6F10               	movwf	?_pad& (0+255),b
  2831  002554  511A               	movf	(pad@w+1)& (0+255),w,b
  2832  002556  2101               	addwfc	(?_strlen+1)& (0+255),w,b
  2833  002558  6F11               	movwf	(?_pad+1)& (0+255),b
  2834  00255A                     
  2835                           ; BSR set to: 1
  2836  00255A  0012               	return		;funcret
  2837  00255C                     __end_of_pad:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _strlen *****************
  2841 ;; Defined at:
  2842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  s               2    0[BANK1 ] PTR const unsigned char 
  2845 ;;		 -> dbuf(32), 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  a               2    2[BANK1 ] PTR const unsigned char 
  2848 ;;		 -> dbuf(32), 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  2    0[BANK1 ] unsigned int 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:        4 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 18
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_pad
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text7
  2873  003804                     __ptext7:
  2874                           	callstack 0
  2875  003804                     _strlen:
  2876                           	callstack 6
  2877  003804  C100  F102         	movff	strlen@s,strlen@a
  2878  003808  C101  F103         	movff	strlen@s+1,strlen@a+1
  2879  00380C  EF0B  F01C         	goto	l5661
  2880  003810                     l5659:
  2881  003810  0101               	movlb	1	; () banked
  2882  003812  4B00               	infsnz	strlen@s& (0+255),f,b
  2883  003814  2B01               	incf	(strlen@s+1)& (0+255),f,b
  2884  003816                     l5661:
  2885  003816  C100  FFD9         	movff	strlen@s,fsr2l
  2886  00381A  C101  FFDA         	movff	strlen@s+1,fsr2h
  2887  00381E  50DF               	movf	indf2,w,c
  2888  003820  A4D8               	btfss	status,2,c
  2889  003822  EF15  F01C         	goto	u4381
  2890  003826  EF17  F01C         	goto	u4380
  2891  00382A                     u4381:
  2892  00382A  EF08  F01C         	goto	l5659
  2893  00382E                     u4380:
  2894  00382E  0101               	movlb	1	; () banked
  2895  003830  5102               	movf	strlen@a& (0+255),w,b
  2896  003832  5D00               	subwf	strlen@s& (0+255),w,b
  2897  003834  6F00               	movwf	?_strlen& (0+255),b
  2898  003836  5103               	movf	(strlen@a+1)& (0+255),w,b
  2899  003838  5901               	subwfb	(strlen@s+1)& (0+255),w,b
  2900  00383A  6F01               	movwf	(?_strlen+1)& (0+255),b
  2901  00383C                     
  2902                           ; BSR set to: 1
  2903  00383C  0012               	return		;funcret
  2904  00383E                     __end_of_strlen:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _fputs *****************
  2908 ;; Defined at:
  2909 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  s               2    9[BANK1 ] PTR const unsigned char 
  2912 ;;		 -> dbuf(32), 
  2913 ;;  fp              2   11[BANK1 ] PTR struct _IO_FILE
  2914 ;;		 -> sprintf@f(11), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  i               2   14[BANK1 ] int 
  2917 ;;  c               1   13[BANK1 ] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2    9[BANK1 ] int 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:        7 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 20
  2934 ;; This function calls:
  2935 ;;		_fputc
  2936 ;; This function is called by:
  2937 ;;		_pad
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text8
  2942  00377A                     __ptext8:
  2943                           	callstack 0
  2944  00377A                     _fputs:
  2945                           	callstack 4
  2946  00377A  0E00               	movlw	0
  2947  00377C  0101               	movlb	1	; () banked
  2948  00377E  6F0F               	movwf	(fputs@i+1)& (0+255),b
  2949  003780  0E00               	movlw	0
  2950  003782  6F0E               	movwf	fputs@i& (0+255),b
  2951  003784  EFD0  F01B         	goto	l5655
  2952  003788                     l5651:
  2953                           
  2954                           ; BSR set to: 1
  2955  003788  C10D  F100         	movff	fputs@c,fputc@c
  2956  00378C  6B01               	clrf	(fputc@c+1)& (0+255),b
  2957  00378E  C10B  F102         	movff	fputs@fp,fputc@fp
  2958  003792  C10C  F103         	movff	fputs@fp+1,fputc@fp+1
  2959  003796  ECAE  F012         	call	_fputc	;wreg free
  2960  00379A  0101               	movlb	1	; () banked
  2961  00379C  4B0E               	infsnz	fputs@i& (0+255),f,b
  2962  00379E  2B0F               	incf	(fputs@i+1)& (0+255),f,b
  2963  0037A0                     l5655:
  2964                           
  2965                           ; BSR set to: 1
  2966  0037A0  510E               	movf	fputs@i& (0+255),w,b
  2967  0037A2  2509               	addwf	fputs@s& (0+255),w,b
  2968  0037A4  6ED9               	movwf	fsr2l,c
  2969  0037A6  510F               	movf	(fputs@i+1)& (0+255),w,b
  2970  0037A8  210A               	addwfc	(fputs@s+1)& (0+255),w,b
  2971  0037AA  6EDA               	movwf	fsr2h,c
  2972  0037AC  50DF               	movf	indf2,w,c
  2973  0037AE  6F0D               	movwf	fputs@c& (0+255),b
  2974  0037B0  510D               	movf	fputs@c& (0+255),w,b
  2975  0037B2  A4D8               	btfss	status,2,c
  2976  0037B4  EFDE  F01B         	goto	u4371
  2977  0037B8  EFE0  F01B         	goto	u4370
  2978  0037BC                     u4371:
  2979  0037BC  EFC4  F01B         	goto	l5651
  2980  0037C0                     u4370:
  2981  0037C0                     
  2982                           ; BSR set to: 1
  2983  0037C0  0012               	return		;funcret
  2984  0037C2                     __end_of_fputs:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _fputc *****************
  2988 ;; Defined at:
  2989 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  c               2    0[BANK1 ] int 
  2992 ;;  fp              2    2[BANK1 ] PTR struct _IO_FILE
  2993 ;;		 -> sprintf@f(11), 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    0[BANK1 ] int 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        9 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 19
  3012 ;; This function calls:
  3013 ;;		_putch
  3014 ;; This function is called by:
  3015 ;;		_pad
  3016 ;;		_vfpfcnvrt
  3017 ;;		_fputs
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text9
  3022  00255C                     __ptext9:
  3023                           	callstack 0
  3024  00255C                     _fputc:
  3025                           	callstack 7
  3026  00255C  0101               	movlb	1	; () banked
  3027  00255E  5102               	movf	fputc@fp& (0+255),w,b
  3028  002560  1103               	iorwf	(fputc@fp+1)& (0+255),w,b
  3029  002562  B4D8               	btfsc	status,2,c
  3030  002564  EFB6  F012         	goto	u4291
  3031  002568  EFB8  F012         	goto	u4290
  3032  00256C                     u4291:
  3033  00256C  EFC1  F012         	goto	l5615
  3034  002570                     u4290:
  3035  002570                     
  3036                           ; BSR set to: 1
  3037  002570  5102               	movf	fputc@fp& (0+255),w,b
  3038  002572  1103               	iorwf	(fputc@fp+1)& (0+255),w,b
  3039  002574  A4D8               	btfss	status,2,c
  3040  002576  EFBF  F012         	goto	u4301
  3041  00257A  EFC1  F012         	goto	u4300
  3042  00257E                     u4301:
  3043  00257E  EFC6  F012         	goto	l5617
  3044  002582                     u4300:
  3045  002582                     l5615:
  3046                           
  3047                           ; BSR set to: 1
  3048  002582  5100               	movf	fputc@c& (0+255),w,b
  3049  002584  ECD4  F01C         	call	_putch
  3050  002588  EF13  F013         	goto	l1442
  3051  00258C                     l5617:
  3052                           
  3053                           ; BSR set to: 1
  3054  00258C  EE20 F009          	lfsr	2,9
  3055  002590  5102               	movf	fputc@fp& (0+255),w,b
  3056  002592  26D9               	addwf	fsr2l,f,c
  3057  002594  5103               	movf	(fputc@fp+1)& (0+255),w,b
  3058  002596  22DA               	addwfc	fsr2h,f,c
  3059  002598  50DE               	movf	postinc2,w,c
  3060  00259A  10DE               	iorwf	postinc2,w,c
  3061  00259C  B4D8               	btfsc	status,2,c
  3062  00259E  EFD3  F012         	goto	u4311
  3063  0025A2  EFD5  F012         	goto	u4310
  3064  0025A6                     u4311:
  3065  0025A6  EFF0  F012         	goto	l5621
  3066  0025AA                     u4310:
  3067  0025AA                     
  3068                           ; BSR set to: 1
  3069  0025AA  EE20 F009          	lfsr	2,9
  3070  0025AE  5102               	movf	fputc@fp& (0+255),w,b
  3071  0025B0  26D9               	addwf	fsr2l,f,c
  3072  0025B2  5103               	movf	(fputc@fp+1)& (0+255),w,b
  3073  0025B4  22DA               	addwfc	fsr2h,f,c
  3074  0025B6  EE10 F003          	lfsr	1,3
  3075  0025BA  5102               	movf	fputc@fp& (0+255),w,b
  3076  0025BC  26E1               	addwf	fsr1l,f,c
  3077  0025BE  5103               	movf	(fputc@fp+1)& (0+255),w,b
  3078  0025C0  22E2               	addwfc	fsr1h,f,c
  3079  0025C2  50DE               	movf	postinc2,w,c
  3080  0025C4  5CE6               	subwf	postinc1,w,c
  3081  0025C6  50E6               	movf	postinc1,w,c
  3082  0025C8  0A80               	xorlw	128
  3083  0025CA  6F08               	movwf	(??_fputc+4)& (0+255),b
  3084  0025CC  50DE               	movf	postinc2,w,c
  3085  0025CE  0A80               	xorlw	128
  3086  0025D0  5908               	subwfb	(??_fputc+4)& (0+255),w,b
  3087  0025D2  B0D8               	btfsc	status,0,c
  3088  0025D4  EFEE  F012         	goto	u4321
  3089  0025D8  EFF0  F012         	goto	u4320
  3090  0025DC                     u4321:
  3091  0025DC  EF13  F013         	goto	l1442
  3092  0025E0                     u4320:
  3093  0025E0                     l5621:
  3094                           
  3095                           ; BSR set to: 1
  3096  0025E0  EE20 F003          	lfsr	2,3
  3097  0025E4  5102               	movf	fputc@fp& (0+255),w,b
  3098  0025E6  26D9               	addwf	fsr2l,f,c
  3099  0025E8  5103               	movf	(fputc@fp+1)& (0+255),w,b
  3100  0025EA  22DA               	addwfc	fsr2h,f,c
  3101  0025EC  CFDE F104          	movff	postinc2,??_fputc
  3102  0025F0  CFDD F105          	movff	postdec2,??_fputc+1
  3103  0025F4  C102  FFD9         	movff	fputc@fp,fsr2l
  3104  0025F8  C103  FFDA         	movff	fputc@fp+1,fsr2h
  3105  0025FC  CFDE F106          	movff	postinc2,??_fputc+2
  3106  002600  CFDD F107          	movff	postdec2,??_fputc+3
  3107  002604  5104               	movf	??_fputc& (0+255),w,b
  3108  002606  2506               	addwf	(??_fputc+2)& (0+255),w,b
  3109  002608  6ED9               	movwf	fsr2l,c
  3110  00260A  5105               	movf	(??_fputc+1)& (0+255),w,b
  3111  00260C  2107               	addwfc	(??_fputc+3)& (0+255),w,b
  3112  00260E  6EDA               	movwf	fsr2h,c
  3113  002610  C100  FFDF         	movff	fputc@c,indf2
  3114  002614  EE20 F003          	lfsr	2,3
  3115  002618  5102               	movf	fputc@fp& (0+255),w,b
  3116  00261A  26D9               	addwf	fsr2l,f,c
  3117  00261C  5103               	movf	(fputc@fp+1)& (0+255),w,b
  3118  00261E  22DA               	addwfc	fsr2h,f,c
  3119  002620  2ADE               	incf	postinc2,f,c
  3120  002622  0E00               	movlw	0
  3121  002624  22DD               	addwfc	postdec2,f,c
  3122  002626                     l1442:
  3123  002626  0012               	return		;funcret
  3124  002628                     __end_of_fputc:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _putch *****************
  3128 ;; Defined at:
  3129 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  c               1    wreg     unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  c               1    0[COMRAM] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 18
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_fputc
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text10
  3158  0039A8                     __ptext10:
  3159                           	callstack 0
  3160  0039A8                     _putch:
  3161                           	callstack 7
  3162  0039A8  0012               	return		;funcret
  3163  0039AA                     __end_of_putch:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _abs *****************
  3167 ;; Defined at:
  3168 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  a               2   18[BANK1 ] int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  2   18[BANK1 ] int 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3182 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;Total ram usage:        4 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 18
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_dtoa
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text11
  3197  0037C2                     __ptext11:
  3198                           	callstack 0
  3199  0037C2                     _abs:
  3200                           	callstack 7
  3201  0037C2  0101               	movlb	1	; () banked
  3202  0037C4  BF13               	btfsc	(abs@a+1)& (0+255),7,b
  3203  0037C6  EFEF  F01B         	goto	u4640
  3204  0037CA  5113               	movf	(abs@a+1)& (0+255),w,b
  3205  0037CC  E106               	bnz	u4641
  3206  0037CE  0512               	decf	abs@a& (0+255),w,b
  3207  0037D0  B0D8               	btfsc	status,0,c
  3208  0037D2  EFED  F01B         	goto	u4641
  3209  0037D6  EFEF  F01B         	goto	u4640
  3210  0037DA                     u4641:
  3211  0037DA  EFFD  F01B         	goto	l1427
  3212  0037DE                     u4640:
  3213  0037DE                     
  3214                           ; BSR set to: 1
  3215  0037DE  C112  F114         	movff	abs@a,??_abs
  3216  0037E2  C113  F115         	movff	abs@a+1,??_abs+1
  3217  0037E6  1F14               	comf	??_abs& (0+255),f,b
  3218  0037E8  1F15               	comf	(??_abs+1)& (0+255),f,b
  3219  0037EA  4B14               	infsnz	??_abs& (0+255),f,b
  3220  0037EC  2B15               	incf	(??_abs+1)& (0+255),f,b
  3221  0037EE  C114  F112         	movff	??_abs,?_abs
  3222  0037F2  C115  F113         	movff	??_abs+1,?_abs+1
  3223  0037F6  EF01  F01C         	goto	l1430
  3224  0037FA                     l1427:
  3225                           
  3226                           ; BSR set to: 1
  3227  0037FA  C112  F112         	movff	abs@a,?_abs
  3228  0037FE  C113  F113         	movff	abs@a+1,?_abs+1
  3229  003802                     l1430:
  3230                           
  3231                           ; BSR set to: 1
  3232  003802  0012               	return		;funcret
  3233  003804                     __end_of_abs:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function ___aomod *****************
  3237 ;; Defined at:
  3238 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  dividend        8    0[BANK1 ] long long 
  3241 ;;  divisor         8    8[BANK1 ] long long 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  sign            1   17[BANK1 ] unsigned char 
  3244 ;;  counter         1   16[BANK1 ] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  8    0[BANK1 ] long long 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3254 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;Total ram usage:       18 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 18
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_dtoa
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text12
  3269  0019EC                     __ptext12:
  3270                           	callstack 0
  3271  0019EC                     ___aomod:
  3272                           	callstack 7
  3273  0019EC  0E00               	movlw	0
  3274  0019EE  0101               	movlb	1	; () banked
  3275  0019F0  6F11               	movwf	___aomod@sign& (0+255),b
  3276  0019F2                     
  3277                           ; BSR set to: 1
  3278  0019F2  BF07               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3279  0019F4  EF00  F00D         	goto	u4540
  3280  0019F8  EFFE  F00C         	goto	u4541
  3281  0019FC                     u4541:
  3282  0019FC  EF12  F00D         	goto	l5781
  3283  001A00                     u4540:
  3284  001A00                     
  3285                           ; BSR set to: 1
  3286  001A00  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
  3287  001A02  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
  3288  001A04  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
  3289  001A06  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
  3290  001A08  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
  3291  001A0A  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
  3292  001A0C  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
  3293  001A0E  6D00               	negf	___aomod@dividend& (0+255),b
  3294  001A10  0E00               	movlw	0
  3295  001A12  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3296  001A14  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3297  001A16  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3298  001A18  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3299  001A1A  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3300  001A1C  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3301  001A1E  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3302  001A20                     
  3303                           ; BSR set to: 1
  3304  001A20  0E01               	movlw	1
  3305  001A22  6F11               	movwf	___aomod@sign& (0+255),b
  3306  001A24                     l5781:
  3307                           
  3308                           ; BSR set to: 1
  3309  001A24  BF0F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3310  001A26  EF19  F00D         	goto	u4550
  3311  001A2A  EF17  F00D         	goto	u4551
  3312  001A2E                     u4551:
  3313  001A2E  EF29  F00D         	goto	l5785
  3314  001A32                     u4550:
  3315  001A32                     
  3316                           ; BSR set to: 1
  3317  001A32  1F0F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3318  001A34  1F0E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3319  001A36  1F0D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3320  001A38  1F0C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3321  001A3A  1F0B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3322  001A3C  1F0A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3323  001A3E  1F09               	comf	(___aomod@divisor+1)& (0+255),f,b
  3324  001A40  6D08               	negf	___aomod@divisor& (0+255),b
  3325  001A42  0E00               	movlw	0
  3326  001A44  2309               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3327  001A46  230A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3328  001A48  230B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3329  001A4A  230C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3330  001A4C  230D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3331  001A4E  230E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3332  001A50  230F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3333  001A52                     l5785:
  3334                           
  3335                           ; BSR set to: 1
  3336  001A52  5108               	movf	___aomod@divisor& (0+255),w,b
  3337  001A54  1109               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3338  001A56  110A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3339  001A58  110B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3340  001A5A  110C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3341  001A5C  110D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3342  001A5E  110E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3343  001A60  110F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3344  001A62  B4D8               	btfsc	status,2,c
  3345  001A64  EF36  F00D         	goto	u4561
  3346  001A68  EF38  F00D         	goto	u4560
  3347  001A6C                     u4561:
  3348  001A6C  EF80  F00D         	goto	l5801
  3349  001A70                     u4560:
  3350  001A70                     
  3351                           ; BSR set to: 1
  3352  001A70  0E01               	movlw	1
  3353  001A72  6F10               	movwf	___aomod@counter& (0+255),b
  3354  001A74  EF46  F00D         	goto	l5791
  3355  001A78                     l5789:
  3356                           
  3357                           ; BSR set to: 1
  3358  001A78  90D8               	bcf	status,0,c
  3359  001A7A  3708               	rlcf	___aomod@divisor& (0+255),f,b
  3360  001A7C  3709               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3361  001A7E  370A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3362  001A80  370B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3363  001A82  370C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3364  001A84  370D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3365  001A86  370E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3366  001A88  370F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3367  001A8A  2B10               	incf	___aomod@counter& (0+255),f,b
  3368  001A8C                     l5791:
  3369                           
  3370                           ; BSR set to: 1
  3371  001A8C  AF0F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3372  001A8E  EF4B  F00D         	goto	u4571
  3373  001A92  EF4D  F00D         	goto	u4570
  3374  001A96                     u4571:
  3375  001A96  EF3C  F00D         	goto	l5789
  3376  001A9A                     u4570:
  3377  001A9A                     l5793:
  3378                           
  3379                           ; BSR set to: 1
  3380  001A9A  5108               	movf	___aomod@divisor& (0+255),w,b
  3381  001A9C  5D00               	subwf	___aomod@dividend& (0+255),w,b
  3382  001A9E  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
  3383  001AA0  5901               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3384  001AA2  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3385  001AA4  5902               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3386  001AA6  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3387  001AA8  5903               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3388  001AAA  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3389  001AAC  5904               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3390  001AAE  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3391  001AB0  5905               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3392  001AB2  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3393  001AB4  5906               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3394  001AB6  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3395  001AB8  5907               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3396  001ABA  A0D8               	btfss	status,0,c
  3397  001ABC  EF62  F00D         	goto	u4581
  3398  001AC0  EF64  F00D         	goto	u4580
  3399  001AC4                     u4581:
  3400  001AC4  EF74  F00D         	goto	l5797
  3401  001AC8                     u4580:
  3402  001AC8                     
  3403                           ; BSR set to: 1
  3404  001AC8  5108               	movf	___aomod@divisor& (0+255),w,b
  3405  001ACA  5F00               	subwf	___aomod@dividend& (0+255),f,b
  3406  001ACC  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
  3407  001ACE  5B01               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3408  001AD0  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3409  001AD2  5B02               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3410  001AD4  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3411  001AD6  5B03               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3412  001AD8  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3413  001ADA  5B04               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3414  001ADC  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3415  001ADE  5B05               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3416  001AE0  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3417  001AE2  5B06               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3418  001AE4  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3419  001AE6  5B07               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3420  001AE8                     l5797:
  3421                           
  3422                           ; BSR set to: 1
  3423  001AE8  90D8               	bcf	status,0,c
  3424  001AEA  330F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3425  001AEC  330E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3426  001AEE  330D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3427  001AF0  330C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3428  001AF2  330B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3429  001AF4  330A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3430  001AF6  3309               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3431  001AF8  3308               	rrcf	___aomod@divisor& (0+255),f,b
  3432  001AFA                     
  3433                           ; BSR set to: 1
  3434  001AFA  2F10               	decfsz	___aomod@counter& (0+255),f,b
  3435  001AFC  EF4D  F00D         	goto	l5793
  3436  001B00                     l5801:
  3437                           
  3438                           ; BSR set to: 1
  3439  001B00  5111               	movf	___aomod@sign& (0+255),w,b
  3440  001B02  B4D8               	btfsc	status,2,c
  3441  001B04  EF86  F00D         	goto	u4591
  3442  001B08  EF88  F00D         	goto	u4590
  3443  001B0C                     u4591:
  3444  001B0C  EF98  F00D         	goto	l5805
  3445  001B10                     u4590:
  3446  001B10                     
  3447                           ; BSR set to: 1
  3448  001B10  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
  3449  001B12  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
  3450  001B14  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
  3451  001B16  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
  3452  001B18  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
  3453  001B1A  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
  3454  001B1C  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
  3455  001B1E  6D00               	negf	___aomod@dividend& (0+255),b
  3456  001B20  0E00               	movlw	0
  3457  001B22  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3458  001B24  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3459  001B26  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3460  001B28  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3461  001B2A  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3462  001B2C  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3463  001B2E  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3464  001B30                     l5805:
  3465                           
  3466                           ; BSR set to: 1
  3467  001B30  C100  F100         	movff	___aomod@dividend,?___aomod
  3468  001B34  C101  F101         	movff	___aomod@dividend+1,?___aomod+1
  3469  001B38  C102  F102         	movff	___aomod@dividend+2,?___aomod+2
  3470  001B3C  C103  F103         	movff	___aomod@dividend+3,?___aomod+3
  3471  001B40  C104  F104         	movff	___aomod@dividend+4,?___aomod+4
  3472  001B44  C105  F105         	movff	___aomod@dividend+5,?___aomod+5
  3473  001B48  C106  F106         	movff	___aomod@dividend+6,?___aomod+6
  3474  001B4C  C107  F107         	movff	___aomod@dividend+7,?___aomod+7
  3475  001B50                     
  3476                           ; BSR set to: 1
  3477  001B50  0012               	return		;funcret
  3478  001B52                     __end_of___aomod:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function ___aodiv *****************
  3482 ;; Defined at:
  3483 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  dividend        8    0[BANK1 ] long long 
  3486 ;;  divisor         8    8[BANK1 ] long long 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  quotient        8   18[BANK1 ] long long 
  3489 ;;  sign            1   17[BANK1 ] unsigned char 
  3490 ;;  counter         1   16[BANK1 ] unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  8    0[BANK1 ] long long 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3500 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;Total ram usage:       26 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 18
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_dtoa
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text13
  3515  0016EA                     __ptext13:
  3516                           	callstack 0
  3517  0016EA                     ___aodiv:
  3518                           	callstack 7
  3519  0016EA  0E00               	movlw	0
  3520  0016EC  0101               	movlb	1	; () banked
  3521  0016EE  6F11               	movwf	___aodiv@sign& (0+255),b
  3522  0016F0                     
  3523                           ; BSR set to: 1
  3524  0016F0  BF0F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3525  0016F2  EF7F  F00B         	goto	u4470
  3526  0016F6  EF7D  F00B         	goto	u4471
  3527  0016FA                     u4471:
  3528  0016FA  EF91  F00B         	goto	l5737
  3529  0016FE                     u4470:
  3530  0016FE                     
  3531                           ; BSR set to: 1
  3532  0016FE  1F0F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3533  001700  1F0E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3534  001702  1F0D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3535  001704  1F0C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3536  001706  1F0B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3537  001708  1F0A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3538  00170A  1F09               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3539  00170C  6D08               	negf	___aodiv@divisor& (0+255),b
  3540  00170E  0E00               	movlw	0
  3541  001710  2309               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3542  001712  230A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3543  001714  230B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3544  001716  230C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3545  001718  230D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3546  00171A  230E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3547  00171C  230F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3548  00171E                     
  3549                           ; BSR set to: 1
  3550  00171E  0E01               	movlw	1
  3551  001720  6F11               	movwf	___aodiv@sign& (0+255),b
  3552  001722                     l5737:
  3553                           
  3554                           ; BSR set to: 1
  3555  001722  BF07               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3556  001724  EF98  F00B         	goto	u4480
  3557  001728  EF96  F00B         	goto	u4481
  3558  00172C                     u4481:
  3559  00172C  EFAA  F00B         	goto	l5743
  3560  001730                     u4480:
  3561  001730                     
  3562                           ; BSR set to: 1
  3563  001730  1F07               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3564  001732  1F06               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3565  001734  1F05               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3566  001736  1F04               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3567  001738  1F03               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3568  00173A  1F02               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3569  00173C  1F01               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3570  00173E  6D00               	negf	___aodiv@dividend& (0+255),b
  3571  001740  0E00               	movlw	0
  3572  001742  2301               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3573  001744  2302               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3574  001746  2303               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3575  001748  2304               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3576  00174A  2305               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3577  00174C  2306               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3578  00174E  2307               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3579  001750                     
  3580                           ; BSR set to: 1
  3581  001750  0E01               	movlw	1
  3582  001752  1B11               	xorwf	___aodiv@sign& (0+255),f,b
  3583  001754                     l5743:
  3584                           
  3585                           ; BSR set to: 1
  3586  001754  EE21  F012         	lfsr	2,___aodiv@quotient
  3587  001758  0E07               	movlw	7
  3588  00175A                     u4491:
  3589  00175A  6ADE               	clrf	postinc2,c
  3590  00175C  06E8               	decf	wreg,f,c
  3591  00175E  E2FD               	bc	u4491
  3592  001760                     
  3593                           ; BSR set to: 1
  3594  001760  5108               	movf	___aodiv@divisor& (0+255),w,b
  3595  001762  1109               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3596  001764  110A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3597  001766  110B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3598  001768  110C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3599  00176A  110D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3600  00176C  110E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3601  00176E  110F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3602  001770  B4D8               	btfsc	status,2,c
  3603  001772  EFBD  F00B         	goto	u4501
  3604  001776  EFBF  F00B         	goto	u4500
  3605  00177A                     u4501:
  3606  00177A  EF11  F00C         	goto	l5765
  3607  00177E                     u4500:
  3608  00177E                     
  3609                           ; BSR set to: 1
  3610  00177E  0E01               	movlw	1
  3611  001780  6F10               	movwf	___aodiv@counter& (0+255),b
  3612  001782  EFCD  F00B         	goto	l5751
  3613  001786                     l5749:
  3614                           
  3615                           ; BSR set to: 1
  3616  001786  90D8               	bcf	status,0,c
  3617  001788  3708               	rlcf	___aodiv@divisor& (0+255),f,b
  3618  00178A  3709               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3619  00178C  370A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3620  00178E  370B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3621  001790  370C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3622  001792  370D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3623  001794  370E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3624  001796  370F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3625  001798  2B10               	incf	___aodiv@counter& (0+255),f,b
  3626  00179A                     l5751:
  3627                           
  3628                           ; BSR set to: 1
  3629  00179A  AF0F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3630  00179C  EFD2  F00B         	goto	u4511
  3631  0017A0  EFD4  F00B         	goto	u4510
  3632  0017A4                     u4511:
  3633  0017A4  EFC3  F00B         	goto	l5749
  3634  0017A8                     u4510:
  3635  0017A8                     l5753:
  3636                           
  3637                           ; BSR set to: 1
  3638  0017A8  90D8               	bcf	status,0,c
  3639  0017AA  3712               	rlcf	___aodiv@quotient& (0+255),f,b
  3640  0017AC  3713               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3641  0017AE  3714               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3642  0017B0  3715               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3643  0017B2  3716               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3644  0017B4  3717               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3645  0017B6  3718               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3646  0017B8  3719               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3647  0017BA                     
  3648                           ; BSR set to: 1
  3649  0017BA  5108               	movf	___aodiv@divisor& (0+255),w,b
  3650  0017BC  5D00               	subwf	___aodiv@dividend& (0+255),w,b
  3651  0017BE  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3652  0017C0  5901               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3653  0017C2  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3654  0017C4  5902               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3655  0017C6  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3656  0017C8  5903               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3657  0017CA  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3658  0017CC  5904               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3659  0017CE  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3660  0017D0  5905               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3661  0017D2  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3662  0017D4  5906               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3663  0017D6  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3664  0017D8  5907               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3665  0017DA  A0D8               	btfss	status,0,c
  3666  0017DC  EFF2  F00B         	goto	u4521
  3667  0017E0  EFF4  F00B         	goto	u4520
  3668  0017E4                     u4521:
  3669  0017E4  EF05  F00C         	goto	l5761
  3670  0017E8                     u4520:
  3671  0017E8                     
  3672                           ; BSR set to: 1
  3673  0017E8  5108               	movf	___aodiv@divisor& (0+255),w,b
  3674  0017EA  5F00               	subwf	___aodiv@dividend& (0+255),f,b
  3675  0017EC  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3676  0017EE  5B01               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3677  0017F0  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3678  0017F2  5B02               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3679  0017F4  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3680  0017F6  5B03               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3681  0017F8  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3682  0017FA  5B04               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3683  0017FC  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3684  0017FE  5B05               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3685  001800  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3686  001802  5B06               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3687  001804  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3688  001806  5B07               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3689  001808                     
  3690                           ; BSR set to: 1
  3691  001808  8112               	bsf	___aodiv@quotient& (0+255),0,b
  3692  00180A                     l5761:
  3693                           
  3694                           ; BSR set to: 1
  3695  00180A  90D8               	bcf	status,0,c
  3696  00180C  330F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3697  00180E  330E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3698  001810  330D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3699  001812  330C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3700  001814  330B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3701  001816  330A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3702  001818  3309               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3703  00181A  3308               	rrcf	___aodiv@divisor& (0+255),f,b
  3704  00181C                     
  3705                           ; BSR set to: 1
  3706  00181C  2F10               	decfsz	___aodiv@counter& (0+255),f,b
  3707  00181E  EFD4  F00B         	goto	l5753
  3708  001822                     l5765:
  3709                           
  3710                           ; BSR set to: 1
  3711  001822  5111               	movf	___aodiv@sign& (0+255),w,b
  3712  001824  B4D8               	btfsc	status,2,c
  3713  001826  EF17  F00C         	goto	u4531
  3714  00182A  EF19  F00C         	goto	u4530
  3715  00182E                     u4531:
  3716  00182E  EF29  F00C         	goto	l5769
  3717  001832                     u4530:
  3718  001832                     
  3719                           ; BSR set to: 1
  3720  001832  1F19               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3721  001834  1F18               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3722  001836  1F17               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3723  001838  1F16               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3724  00183A  1F15               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3725  00183C  1F14               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3726  00183E  1F13               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3727  001840  6D12               	negf	___aodiv@quotient& (0+255),b
  3728  001842  0E00               	movlw	0
  3729  001844  2313               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3730  001846  2314               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3731  001848  2315               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3732  00184A  2316               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3733  00184C  2317               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3734  00184E  2318               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3735  001850  2319               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3736  001852                     l5769:
  3737                           
  3738                           ; BSR set to: 1
  3739  001852  C112  F100         	movff	___aodiv@quotient,?___aodiv
  3740  001856  C113  F101         	movff	___aodiv@quotient+1,?___aodiv+1
  3741  00185A  C114  F102         	movff	___aodiv@quotient+2,?___aodiv+2
  3742  00185E  C115  F103         	movff	___aodiv@quotient+3,?___aodiv+3
  3743  001862  C116  F104         	movff	___aodiv@quotient+4,?___aodiv+4
  3744  001866  C117  F105         	movff	___aodiv@quotient+5,?___aodiv+5
  3745  00186A  C118  F106         	movff	___aodiv@quotient+6,?___aodiv+6
  3746  00186E  C119  F107         	movff	___aodiv@quotient+7,?___aodiv+7
  3747  001872                     
  3748                           ; BSR set to: 1
  3749  001872  0012               	return		;funcret
  3750  001874                     __end_of___aodiv:
  3751                           	callstack 0
  3752                           
  3753 ;; *************** function _memset *****************
  3754 ;; Defined at:
  3755 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  dest            2    0[BANK1 ] PTR void 
  3758 ;;		 -> num(7), 
  3759 ;;  c               2    2[BANK1 ] int 
  3760 ;;  n               2    4[BANK1 ] unsigned int 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  s               2   10[BANK1 ] PTR unsigned char 
  3763 ;;		 -> num(7), 
  3764 ;;  k               2    8[BANK1 ] unsigned int 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  2    0[BANK1 ] PTR void 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3774 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;Total ram usage:       12 bytes
  3779 ;; Hardware stack levels used: 1
  3780 ;; Hardware stack levels required when called: 18
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_short_to_string
  3785 ;;		_int_to_string
  3786 ;;		_byte_to_string
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text14
  3791  001874                     __ptext14:
  3792                           	callstack 0
  3793  001874                     _memset:
  3794                           	callstack 11
  3795  001874  C100  F10A         	movff	memset@dest,memset@s
  3796  001878  C101  F10B         	movff	memset@dest+1,memset@s+1
  3797  00187C  0101               	movlb	1	; () banked
  3798  00187E  5104               	movf	memset@n& (0+255),w,b
  3799  001880  1105               	iorwf	(memset@n+1)& (0+255),w,b
  3800  001882  A4D8               	btfss	status,2,c
  3801  001884  EF46  F00C         	goto	u5061
  3802  001888  EF48  F00C         	goto	u5060
  3803  00188C                     u5061:
  3804  00188C  EF4A  F00C         	goto	l6181
  3805  001890                     u5060:
  3806  001890  EFF5  F00C         	goto	l1338
  3807  001894                     l6181:
  3808                           
  3809                           ; BSR set to: 1
  3810  001894  C10A  FFD9         	movff	memset@s,fsr2l
  3811  001898  C10B  FFDA         	movff	memset@s+1,fsr2h
  3812  00189C  C102  FFDF         	movff	memset@c,indf2
  3813  0018A0                     
  3814                           ; BSR set to: 1
  3815  0018A0  5104               	movf	memset@n& (0+255),w,b
  3816  0018A2  250A               	addwf	memset@s& (0+255),w,b
  3817  0018A4  6F06               	movwf	??_memset& (0+255),b
  3818  0018A6  5105               	movf	(memset@n+1)& (0+255),w,b
  3819  0018A8  210B               	addwfc	(memset@s+1)& (0+255),w,b
  3820  0018AA  6F07               	movwf	(??_memset+1)& (0+255),b
  3821  0018AC  0EFF               	movlw	255
  3822  0018AE  2506               	addwf	??_memset& (0+255),w,b
  3823  0018B0  6ED9               	movwf	fsr2l,c
  3824  0018B2  0EFF               	movlw	255
  3825  0018B4  2107               	addwfc	(??_memset+1)& (0+255),w,b
  3826  0018B6  6EDA               	movwf	fsr2h,c
  3827  0018B8  C102  FFDF         	movff	memset@c,indf2
  3828  0018BC  5105               	movf	(memset@n+1)& (0+255),w,b
  3829  0018BE  E107               	bnz	u5071
  3830  0018C0  0E03               	movlw	3
  3831  0018C2  5D04               	subwf	memset@n& (0+255),w,b
  3832  0018C4  B0D8               	btfsc	status,0,c
  3833  0018C6  EF67  F00C         	goto	u5071
  3834  0018CA  EF69  F00C         	goto	u5070
  3835  0018CE                     u5071:
  3836  0018CE  EF6B  F00C         	goto	l6187
  3837  0018D2                     u5070:
  3838  0018D2  EFF5  F00C         	goto	l1338
  3839  0018D6                     l6187:
  3840                           
  3841                           ; BSR set to: 1
  3842  0018D6  EE20 F001          	lfsr	2,1
  3843  0018DA  510A               	movf	memset@s& (0+255),w,b
  3844  0018DC  26D9               	addwf	fsr2l,f,c
  3845  0018DE  510B               	movf	(memset@s+1)& (0+255),w,b
  3846  0018E0  22DA               	addwfc	fsr2h,f,c
  3847  0018E2  C102  FFDF         	movff	memset@c,indf2
  3848  0018E6  EE20 F002          	lfsr	2,2
  3849  0018EA  510A               	movf	memset@s& (0+255),w,b
  3850  0018EC  26D9               	addwf	fsr2l,f,c
  3851  0018EE  510B               	movf	(memset@s+1)& (0+255),w,b
  3852  0018F0  22DA               	addwfc	fsr2h,f,c
  3853  0018F2  C102  FFDF         	movff	memset@c,indf2
  3854  0018F6  5104               	movf	memset@n& (0+255),w,b
  3855  0018F8  250A               	addwf	memset@s& (0+255),w,b
  3856  0018FA  6F06               	movwf	??_memset& (0+255),b
  3857  0018FC  5105               	movf	(memset@n+1)& (0+255),w,b
  3858  0018FE  210B               	addwfc	(memset@s+1)& (0+255),w,b
  3859  001900  6F07               	movwf	(??_memset+1)& (0+255),b
  3860  001902  0EFE               	movlw	254
  3861  001904  2506               	addwf	??_memset& (0+255),w,b
  3862  001906  6ED9               	movwf	fsr2l,c
  3863  001908  0EFF               	movlw	255
  3864  00190A  2107               	addwfc	(??_memset+1)& (0+255),w,b
  3865  00190C  6EDA               	movwf	fsr2h,c
  3866  00190E  C102  FFDF         	movff	memset@c,indf2
  3867  001912  5104               	movf	memset@n& (0+255),w,b
  3868  001914  250A               	addwf	memset@s& (0+255),w,b
  3869  001916  6F06               	movwf	??_memset& (0+255),b
  3870  001918  5105               	movf	(memset@n+1)& (0+255),w,b
  3871  00191A  210B               	addwfc	(memset@s+1)& (0+255),w,b
  3872  00191C  6F07               	movwf	(??_memset+1)& (0+255),b
  3873  00191E  0EFD               	movlw	253
  3874  001920  2506               	addwf	??_memset& (0+255),w,b
  3875  001922  6ED9               	movwf	fsr2l,c
  3876  001924  0EFF               	movlw	255
  3877  001926  2107               	addwfc	(??_memset+1)& (0+255),w,b
  3878  001928  6EDA               	movwf	fsr2h,c
  3879  00192A  C102  FFDF         	movff	memset@c,indf2
  3880  00192E                     
  3881                           ; BSR set to: 1
  3882  00192E  5105               	movf	(memset@n+1)& (0+255),w,b
  3883  001930  E107               	bnz	u5081
  3884  001932  0E07               	movlw	7
  3885  001934  5D04               	subwf	memset@n& (0+255),w,b
  3886  001936  B0D8               	btfsc	status,0,c
  3887  001938  EFA0  F00C         	goto	u5081
  3888  00193C  EFA2  F00C         	goto	u5080
  3889  001940                     u5081:
  3890  001940  EFA4  F00C         	goto	l6193
  3891  001944                     u5080:
  3892  001944  EFF5  F00C         	goto	l1338
  3893  001948                     l6193:
  3894                           
  3895                           ; BSR set to: 1
  3896  001948  EE20 F003          	lfsr	2,3
  3897  00194C  510A               	movf	memset@s& (0+255),w,b
  3898  00194E  26D9               	addwf	fsr2l,f,c
  3899  001950  510B               	movf	(memset@s+1)& (0+255),w,b
  3900  001952  22DA               	addwfc	fsr2h,f,c
  3901  001954  C102  FFDF         	movff	memset@c,indf2
  3902  001958  5104               	movf	memset@n& (0+255),w,b
  3903  00195A  250A               	addwf	memset@s& (0+255),w,b
  3904  00195C  6F06               	movwf	??_memset& (0+255),b
  3905  00195E  5105               	movf	(memset@n+1)& (0+255),w,b
  3906  001960  210B               	addwfc	(memset@s+1)& (0+255),w,b
  3907  001962  6F07               	movwf	(??_memset+1)& (0+255),b
  3908  001964  0EFC               	movlw	252
  3909  001966  2506               	addwf	??_memset& (0+255),w,b
  3910  001968  6ED9               	movwf	fsr2l,c
  3911  00196A  0EFF               	movlw	255
  3912  00196C  2107               	addwfc	(??_memset+1)& (0+255),w,b
  3913  00196E  6EDA               	movwf	fsr2h,c
  3914  001970  C102  FFDF         	movff	memset@c,indf2
  3915  001974                     
  3916                           ; BSR set to: 1
  3917  001974  5105               	movf	(memset@n+1)& (0+255),w,b
  3918  001976  E107               	bnz	u5091
  3919  001978  0E09               	movlw	9
  3920  00197A  5D04               	subwf	memset@n& (0+255),w,b
  3921  00197C  B0D8               	btfsc	status,0,c
  3922  00197E  EFC3  F00C         	goto	u5091
  3923  001982  EFC5  F00C         	goto	u5090
  3924  001986                     u5091:
  3925  001986  EFC7  F00C         	goto	l6199
  3926  00198A                     u5090:
  3927  00198A  EFF5  F00C         	goto	l1338
  3928  00198E                     l6199:
  3929                           
  3930                           ; BSR set to: 1
  3931  00198E  C10A  F106         	movff	memset@s,??_memset
  3932  001992  C10B  F107         	movff	memset@s+1,??_memset+1
  3933  001996  1F06               	comf	??_memset& (0+255),f,b
  3934  001998  1F07               	comf	(??_memset+1)& (0+255),f,b
  3935  00199A  4B06               	infsnz	??_memset& (0+255),f,b
  3936  00199C  2B07               	incf	(??_memset+1)& (0+255),f,b
  3937  00199E  0E03               	movlw	3
  3938  0019A0  1506               	andwf	??_memset& (0+255),w,b
  3939  0019A2  6F08               	movwf	memset@k& (0+255),b
  3940  0019A4  6B09               	clrf	(memset@k+1)& (0+255),b
  3941  0019A6  5108               	movf	memset@k& (0+255),w,b
  3942  0019A8  270A               	addwf	memset@s& (0+255),f,b
  3943  0019AA  5109               	movf	(memset@k+1)& (0+255),w,b
  3944  0019AC  230B               	addwfc	(memset@s+1)& (0+255),f,b
  3945  0019AE  5108               	movf	memset@k& (0+255),w,b
  3946  0019B0  5F04               	subwf	memset@n& (0+255),f,b
  3947  0019B2  5109               	movf	(memset@k+1)& (0+255),w,b
  3948  0019B4  5B05               	subwfb	(memset@n+1)& (0+255),f,b
  3949  0019B6  0EFC               	movlw	252
  3950  0019B8  1704               	andwf	memset@n& (0+255),f,b
  3951  0019BA  0EFF               	movlw	255
  3952  0019BC  1705               	andwf	(memset@n+1)& (0+255),f,b
  3953  0019BE  EFEC  F00C         	goto	l6207
  3954  0019C2                     l6201:
  3955                           
  3956                           ; BSR set to: 1
  3957  0019C2  C10A  FFD9         	movff	memset@s,fsr2l
  3958  0019C6  C10B  FFDA         	movff	memset@s+1,fsr2h
  3959  0019CA  C102  FFDF         	movff	memset@c,indf2
  3960  0019CE                     
  3961                           ; BSR set to: 1
  3962  0019CE  0704               	decf	memset@n& (0+255),f,b
  3963  0019D0  A0D8               	btfss	status,0,c
  3964  0019D2  0705               	decf	(memset@n+1)& (0+255),f,b
  3965  0019D4                     
  3966                           ; BSR set to: 1
  3967  0019D4  4B0A               	infsnz	memset@s& (0+255),f,b
  3968  0019D6  2B0B               	incf	(memset@s+1)& (0+255),f,b
  3969  0019D8                     l6207:
  3970                           
  3971                           ; BSR set to: 1
  3972  0019D8  5104               	movf	memset@n& (0+255),w,b
  3973  0019DA  1105               	iorwf	(memset@n+1)& (0+255),w,b
  3974  0019DC  A4D8               	btfss	status,2,c
  3975  0019DE  EFF3  F00C         	goto	u5101
  3976  0019E2  EFF5  F00C         	goto	u5100
  3977  0019E6                     u5101:
  3978  0019E6  EFE1  F00C         	goto	l6201
  3979  0019EA                     u5100:
  3980  0019EA                     l1338:
  3981                           
  3982                           ; BSR set to: 1
  3983  0019EA  0012               	return		;funcret
  3984  0019EC                     __end_of_memset:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function _lcd_4_bit_init *****************
  3988 ;; Defined at:
  3989 ;;		line 15 in file "ECU/LCD/lcd.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  lcd             2   23[BANK1 ] PTR const struct .
  3992 ;;		 -> lcd(6), 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  ret             1   28[BANK1 ] unsigned char 
  3995 ;;  counter         1   27[BANK1 ] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        6 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 21
  4012 ;; This function calls:
  4013 ;;		_pin_directoin_intialize
  4014 ;;		_send_command
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text15
  4021  001C9C                     __ptext15:
  4022                           	callstack 0
  4023  001C9C                     _lcd_4_bit_init:
  4024                           	callstack 9
  4025  001C9C                     
  4026                           ;ECU/LCD/lcd.c: 18:     Std_ReturnType ret=(Std_ReturnType)0x01;
  4027  001C9C  0E01               	movlw	1
  4028  001C9E  0101               	movlb	1	; () banked
  4029  001CA0  6F1C               	movwf	lcd_4_bit_init@ret& (0+255),b
  4030  001CA2                     
  4031                           ; BSR set to: 1
  4032                           ;ECU/LCD/lcd.c: 19:     if(((void*)0)==lcd)
  4033  001CA2  5117               	movf	lcd_4_bit_init@lcd& (0+255),w,b
  4034  001CA4  1118               	iorwf	(lcd_4_bit_init@lcd+1)& (0+255),w,b
  4035  001CA6  A4D8               	btfss	status,2,c
  4036  001CA8  EF58  F00E         	goto	u5251
  4037  001CAC  EF5A  F00E         	goto	u5250
  4038  001CB0                     u5251:
  4039  001CB0  EF5C  F00E         	goto	l6401
  4040  001CB4                     u5250:
  4041  001CB4                     
  4042                           ; BSR set to: 1
  4043                           ;ECU/LCD/lcd.c: 22:     }
  4044  001CB4  EFEE  F00E         	goto	l104
  4045  001CB8                     l6401:
  4046                           
  4047                           ; BSR set to: 1
  4048                           ;ECU/LCD/lcd.c: 24:     {;ECU/LCD/lcd.c: 25:         ret=pin_directoin_intialize(&(lcd->
      +                          en));
  4049  001CB8  0E01               	movlw	1
  4050  001CBA  2517               	addwf	lcd_4_bit_init@lcd& (0+255),w,b
  4051  001CBC  6F00               	movwf	pin_directoin_intialize@pin& (0+255),b
  4052  001CBE  0E00               	movlw	0
  4053  001CC0  2118               	addwfc	(lcd_4_bit_init@lcd+1)& (0+255),w,b
  4054  001CC2  6F01               	movwf	(pin_directoin_intialize@pin+1)& (0+255),b
  4055  001CC4  ECA9  F00D         	call	_pin_directoin_intialize	;wreg free
  4056  001CC8  0101               	movlb	1	; () banked
  4057  001CCA  6F1C               	movwf	lcd_4_bit_init@ret& (0+255),b
  4058                           
  4059                           ;ECU/LCD/lcd.c: 26:         ret=pin_directoin_intialize(&(lcd->rs));
  4060  001CCC  C117  F100         	movff	lcd_4_bit_init@lcd,pin_directoin_intialize@pin
  4061  001CD0  C118  F101         	movff	lcd_4_bit_init@lcd+1,pin_directoin_intialize@pin+1
  4062  001CD4  ECA9  F00D         	call	_pin_directoin_intialize	;wreg free
  4063  001CD8  0101               	movlb	1	; () banked
  4064  001CDA  6F1C               	movwf	lcd_4_bit_init@ret& (0+255),b
  4065  001CDC                     
  4066                           ; BSR set to: 1
  4067                           ;ECU/LCD/lcd.c: 27:        for(counter=0;counter<4;counter++)
  4068  001CDC  0E00               	movlw	0
  4069  001CDE  6F1B               	movwf	lcd_4_bit_init@counter& (0+255),b
  4070  001CE0                     l6409:
  4071                           
  4072                           ; BSR set to: 1
  4073  001CE0  511B               	movf	lcd_4_bit_init@counter& (0+255),w,b
  4074  001CE2  2517               	addwf	lcd_4_bit_init@lcd& (0+255),w,b
  4075  001CE4  6F19               	movwf	??_lcd_4_bit_init& (0+255),b
  4076  001CE6  0E00               	movlw	0
  4077  001CE8  2118               	addwfc	(lcd_4_bit_init@lcd+1)& (0+255),w,b
  4078  001CEA  6F1A               	movwf	(??_lcd_4_bit_init+1)& (0+255),b
  4079  001CEC  0E02               	movlw	2
  4080  001CEE  2519               	addwf	??_lcd_4_bit_init& (0+255),w,b
  4081  001CF0  6F00               	movwf	pin_directoin_intialize@pin& (0+255),b
  4082  001CF2  0E00               	movlw	0
  4083  001CF4  211A               	addwfc	(??_lcd_4_bit_init+1)& (0+255),w,b
  4084  001CF6  6F01               	movwf	(pin_directoin_intialize@pin+1)& (0+255),b
  4085  001CF8  ECA9  F00D         	call	_pin_directoin_intialize	;wreg free
  4086  001CFC                     
  4087                           ;ECU/LCD/lcd.c: 30:        }
  4088  001CFC  0101               	movlb	1	; () banked
  4089  001CFE  2B1B               	incf	lcd_4_bit_init@counter& (0+255),f,b
  4090  001D00                     
  4091                           ; BSR set to: 1
  4092  001D00  0E03               	movlw	3
  4093  001D02  651B               	cpfsgt	lcd_4_bit_init@counter& (0+255),b
  4094  001D04  EF86  F00E         	goto	u5261
  4095  001D08  EF88  F00E         	goto	u5260
  4096  001D0C                     u5261:
  4097  001D0C  EF70  F00E         	goto	l6409
  4098  001D10                     u5260:
  4099  001D10                     
  4100                           ; BSR set to: 1
  4101                           ;ECU/LCD/lcd.c: 32:        _delay((unsigned long)((20)*(8000000UL/4000.0)));
  4102  001D10  0E34               	movlw	52
  4103  001D12  0101               	movlb	1	; () banked
  4104  001D14  6F19               	movwf	??_lcd_4_bit_init& (0+255),b
  4105  001D16  0EF1               	movlw	241
  4106  001D18                     u6147:
  4107  001D18  2EE8               	decfsz	wreg,f,c
  4108  001D1A  D7FE               	bra	u6147
  4109  001D1C  2F19               	decfsz	??_lcd_4_bit_init& (0+255),f,b
  4110  001D1E  D7FC               	bra	u6147
  4111  001D20  D000               	nop2	
  4112  001D22  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4113  001D26  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4114  001D2A  0E38               	movlw	56
  4115  001D2C  0101               	movlb	1	; () banked
  4116  001D2E  6F15               	movwf	send_command@command& (0+255),b
  4117  001D30  ECDB  F017         	call	_send_command	;wreg free
  4118  001D34                     
  4119                           ;ECU/LCD/lcd.c: 34:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  4120  001D34  0E0D               	movlw	13
  4121  001D36  0101               	movlb	1	; () banked
  4122  001D38  6F19               	movwf	??_lcd_4_bit_init& (0+255),b
  4123  001D3A  0EFB               	movlw	251
  4124  001D3C                     u6157:
  4125  001D3C  2EE8               	decfsz	wreg,f,c
  4126  001D3E  D7FE               	bra	u6157
  4127  001D40  2F19               	decfsz	??_lcd_4_bit_init& (0+255),f,b
  4128  001D42  D7FC               	bra	u6157
  4129  001D44  D000               	nop2	
  4130  001D46  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4131  001D4A  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4132  001D4E  0E38               	movlw	56
  4133  001D50  0101               	movlb	1	; () banked
  4134  001D52  6F15               	movwf	send_command@command& (0+255),b
  4135  001D54  ECDB  F017         	call	_send_command	;wreg free
  4136  001D58                     
  4137                           ;ECU/LCD/lcd.c: 36:         _delay((unsigned long)((150)*(8000000UL/4000000.0)));
  4138  001D58  0E64               	movlw	100
  4139  001D5A                     u6167:
  4140  001D5A  2EE8               	decfsz	wreg,f,c
  4141  001D5C  D7FE               	bra	u6167
  4142  001D5E  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4143  001D62  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4144  001D66  0E38               	movlw	56
  4145  001D68  0101               	movlb	1	; () banked
  4146  001D6A  6F15               	movwf	send_command@command& (0+255),b
  4147  001D6C  ECDB  F017         	call	_send_command	;wreg free
  4148  001D70  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4149  001D74  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4150  001D78  0E01               	movlw	1
  4151  001D7A  0101               	movlb	1	; () banked
  4152  001D7C  6F15               	movwf	send_command@command& (0+255),b
  4153  001D7E  ECDB  F017         	call	_send_command	;wreg free
  4154  001D82  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4155  001D86  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4156  001D8A  0E02               	movlw	2
  4157  001D8C  0101               	movlb	1	; () banked
  4158  001D8E  6F15               	movwf	send_command@command& (0+255),b
  4159  001D90  ECDB  F017         	call	_send_command	;wreg free
  4160  001D94  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4161  001D98  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4162  001D9C  0E06               	movlw	6
  4163  001D9E  0101               	movlb	1	; () banked
  4164  001DA0  6F15               	movwf	send_command@command& (0+255),b
  4165  001DA2  ECDB  F017         	call	_send_command	;wreg free
  4166  001DA6  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4167  001DAA  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4168  001DAE  0E0C               	movlw	12
  4169  001DB0  0101               	movlb	1	; () banked
  4170  001DB2  6F15               	movwf	send_command@command& (0+255),b
  4171  001DB4  ECDB  F017         	call	_send_command	;wreg free
  4172  001DB8  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4173  001DBC  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4174  001DC0  0E28               	movlw	40
  4175  001DC2  0101               	movlb	1	; () banked
  4176  001DC4  6F15               	movwf	send_command@command& (0+255),b
  4177  001DC6  ECDB  F017         	call	_send_command	;wreg free
  4178  001DCA  C117  F113         	movff	lcd_4_bit_init@lcd,send_command@lcd
  4179  001DCE  C118  F114         	movff	lcd_4_bit_init@lcd+1,send_command@lcd+1
  4180  001DD2  0E80               	movlw	128
  4181  001DD4  0101               	movlb	1	; () banked
  4182  001DD6  6F15               	movwf	send_command@command& (0+255),b
  4183  001DD8  ECDB  F017         	call	_send_command	;wreg free
  4184  001DDC                     l104:
  4185  001DDC  0012               	return		;funcret
  4186  001DDE                     __end_of_lcd_4_bit_init:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _display_string_at_position *****************
  4190 ;; Defined at:
  4191 ;;		line 159 in file "ECU/LCD/lcd.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  lcd             2   30[BANK1 ] PTR const struct .
  4194 ;;		 -> lcd(6), 
  4195 ;;  row             1   32[BANK1 ] unsigned char 
  4196 ;;  coloumn         1   33[BANK1 ] unsigned char 
  4197 ;;  data            2   34[BANK1 ] PTR unsigned char 
  4198 ;;		 -> STR_6(7), num(7), STR_5(10), STR_4(10), 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  ret             1    0        unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      unsigned char 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        6 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 22
  4217 ;; This function calls:
  4218 ;;		_display_char
  4219 ;;		_lcd_4_bit_set_cursor
  4220 ;; This function is called by:
  4221 ;;		_main
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text16
  4226  002B3E                     __ptext16:
  4227                           	callstack 0
  4228  002B3E                     _display_string_at_position:
  4229                           	callstack 8
  4230  002B3E                     
  4231                           ;ECU/LCD/lcd.c: 162:     if(((void*)0)==lcd)
  4232  002B3E  0101               	movlb	1	; () banked
  4233  002B40  511E               	movf	display_string_at_position@lcd& (0+255),w,b
  4234  002B42  111F               	iorwf	(display_string_at_position@lcd+1)& (0+255),w,b
  4235  002B44  A4D8               	btfss	status,2,c
  4236  002B46  EFA7  F015         	goto	u5271
  4237  002B4A  EFA9  F015         	goto	u5270
  4238  002B4E                     u5271:
  4239  002B4E  EFAB  F015         	goto	l6445
  4240  002B52                     u5270:
  4241  002B52                     
  4242                           ; BSR set to: 1
  4243                           ;ECU/LCD/lcd.c: 165:     }
  4244  002B52  EFEC  F015         	goto	l135
  4245  002B56                     l6445:
  4246                           
  4247                           ; BSR set to: 1
  4248  002B56  C11E  F117         	movff	display_string_at_position@lcd,lcd_4_bit_set_cursor@lcd
  4249  002B5A  C11F  F118         	movff	display_string_at_position@lcd+1,lcd_4_bit_set_cursor@lcd+1
  4250  002B5E  C120  F119         	movff	display_string_at_position@row,lcd_4_bit_set_cursor@row
  4251  002B62  C121  F11A         	movff	display_string_at_position@coloumn,lcd_4_bit_set_cursor@column
  4252  002B66  EC14  F013         	call	_lcd_4_bit_set_cursor	;wreg free
  4253                           
  4254                           ;ECU/LCD/lcd.c: 169:         while(*data!='\0')
  4255  002B6A  EFD3  F015         	goto	l6451
  4256  002B6E                     l6447:
  4257  002B6E  C11E  F113         	movff	display_string_at_position@lcd,display_char@lcd
  4258  002B72  C11F  F114         	movff	display_string_at_position@lcd+1,display_char@lcd+1
  4259  002B76  C122  FFF6         	movff	display_string_at_position@data,tblptrl
  4260  002B7A  C123  FFF7         	movff	display_string_at_position@data+1,tblptrh
  4261  002B7E  0E00               	movlw	low (__smallconst shr (0+16))
  4262  002B80  6EF8               	movwf	tblptru,c
  4263  002B82  0E0F               	movlw	(high __ramtop+-1)
  4264  002B84  64F7               	cpfsgt	tblptrh,c
  4265  002B86  D003               	bra	u5287
  4266  002B88  0008               	tblrd		*
  4267  002B8A  50F5               	movf	tablat,w,c
  4268  002B8C  D005               	bra	u5280
  4269  002B8E                     u5287:
  4270  002B8E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4271  002B92  CFF7 FFEA          	movff	tblptrh,fsr0h
  4272  002B96  50EF               	movf	indf0,w,c
  4273  002B98                     u5280:
  4274  002B98  0101               	movlb	1	; () banked
  4275  002B9A  6F15               	movwf	display_char@data& (0+255),b
  4276  002B9C  EC1A  F018         	call	_display_char	;wreg free
  4277  002BA0  0101               	movlb	1	; () banked
  4278  002BA2  4B22               	infsnz	display_string_at_position@data& (0+255),f,b
  4279  002BA4  2B23               	incf	(display_string_at_position@data+1)& (0+255),f,b
  4280  002BA6                     l6451:
  4281                           
  4282                           ;ECU/LCD/lcd.c: 169:         while(*data!='\0')
  4283  002BA6  C122  FFF6         	movff	display_string_at_position@data,tblptrl
  4284  002BAA  C123  FFF7         	movff	display_string_at_position@data+1,tblptrh
  4285  002BAE  0E00               	movlw	low (__smallconst shr (0+16))
  4286  002BB0  6EF8               	movwf	tblptru,c
  4287  002BB2  0E0F               	movlw	(high __ramtop+-1)
  4288  002BB4  64F7               	cpfsgt	tblptrh,c
  4289  002BB6  D003               	bra	u5297
  4290  002BB8  0008               	tblrd		*
  4291  002BBA  50F5               	movf	tablat,w,c
  4292  002BBC  D005               	bra	u5290
  4293  002BBE                     u5297:
  4294  002BBE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4295  002BC2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4296  002BC6  50EF               	movf	indf0,w,c
  4297  002BC8                     u5290:
  4298  002BC8  0900               	iorlw	0
  4299  002BCA  A4D8               	btfss	status,2,c
  4300  002BCC  EFEA  F015         	goto	u5301
  4301  002BD0  EFEC  F015         	goto	u5300
  4302  002BD4                     u5301:
  4303  002BD4  EFB7  F015         	goto	l6447
  4304  002BD8                     u5300:
  4305  002BD8                     l135:
  4306  002BD8  0012               	return		;funcret
  4307  002BDA                     __end_of_display_string_at_position:
  4308                           	callstack 0
  4309                           
  4310 ;; *************** function _display_custom_char *****************
  4311 ;; Defined at:
  4312 ;;		line 184 in file "ECU/LCD/lcd.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  lcd             2   36[BANK1 ] PTR const struct .
  4315 ;;		 -> lcd(6), 
  4316 ;;  row             1   38[BANK1 ] unsigned char 
  4317 ;;  cloumn          1   39[BANK1 ] unsigned char 
  4318 ;;  data            2   40[BANK1 ] PTR unsigned char 
  4319 ;;		 -> cactus(8), dinasour(8), ground(8), 
  4320 ;;  mem_pos         1   42[BANK1 ] unsigned char 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  counter         1   43[BANK1 ] unsigned char 
  4323 ;;  ret             1    0        unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      unsigned char 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4333 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;Total ram usage:        8 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 23
  4340 ;; This function calls:
  4341 ;;		_display_char
  4342 ;;		_display_char_at_position
  4343 ;;		_send_command
  4344 ;; This function is called by:
  4345 ;;		_main
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text17
  4350  002EB2                     __ptext17:
  4351                           	callstack 0
  4352  002EB2                     _display_custom_char:
  4353                           	callstack 7
  4354  002EB2                     
  4355                           ;ECU/LCD/lcd.c: 187:     uint8 counter=0;
  4356  002EB2  0E00               	movlw	0
  4357  002EB4  0101               	movlb	1	; () banked
  4358  002EB6  6F2B               	movwf	display_custom_char@counter& (0+255),b
  4359  002EB8                     
  4360                           ; BSR set to: 1
  4361                           ;ECU/LCD/lcd.c: 188:     if(((void*)0)==lcd)
  4362  002EB8  5124               	movf	display_custom_char@lcd& (0+255),w,b
  4363  002EBA  1125               	iorwf	(display_custom_char@lcd+1)& (0+255),w,b
  4364  002EBC  A4D8               	btfss	status,2,c
  4365  002EBE  EF63  F017         	goto	u5311
  4366  002EC2  EF65  F017         	goto	u5310
  4367  002EC6                     u5311:
  4368  002EC6  EF67  F017         	goto	l6459
  4369  002ECA                     u5310:
  4370  002ECA                     
  4371                           ; BSR set to: 1
  4372                           ;ECU/LCD/lcd.c: 191:     }
  4373  002ECA  EF99  F017         	goto	l142
  4374  002ECE                     l6459:
  4375                           
  4376                           ; BSR set to: 1
  4377  002ECE  C124  F113         	movff	display_custom_char@lcd,send_command@lcd
  4378  002ED2  C125  F114         	movff	display_custom_char@lcd+1,send_command@lcd+1
  4379  002ED6  512A               	movf	display_custom_char@mem_pos& (0+255),w,b
  4380  002ED8  0D08               	mullw	8
  4381  002EDA  50F3               	movf	243,w,c
  4382  002EDC  0F40               	addlw	64
  4383  002EDE  6F15               	movwf	send_command@command& (0+255),b
  4384  002EE0  ECDB  F017         	call	_send_command	;wreg free
  4385  002EE4                     
  4386                           ;ECU/LCD/lcd.c: 195:         for(counter=0;counter<=7;counter++)
  4387  002EE4  0E00               	movlw	0
  4388  002EE6  0101               	movlb	1	; () banked
  4389  002EE8  6F2B               	movwf	display_custom_char@counter& (0+255),b
  4390  002EEA                     l6467:
  4391                           
  4392                           ; BSR set to: 1
  4393  002EEA  C124  F113         	movff	display_custom_char@lcd,display_char@lcd
  4394  002EEE  C125  F114         	movff	display_custom_char@lcd+1,display_char@lcd+1
  4395  002EF2  512B               	movf	display_custom_char@counter& (0+255),w,b
  4396  002EF4  2528               	addwf	display_custom_char@data& (0+255),w,b
  4397  002EF6  6ED9               	movwf	fsr2l,c
  4398  002EF8  0E00               	movlw	0
  4399  002EFA  2129               	addwfc	(display_custom_char@data+1)& (0+255),w,b
  4400  002EFC  6EDA               	movwf	fsr2h,c
  4401  002EFE  50DF               	movf	indf2,w,c
  4402  002F00  6F15               	movwf	display_char@data& (0+255),b
  4403  002F02  EC1A  F018         	call	_display_char	;wreg free
  4404  002F06                     
  4405                           ;ECU/LCD/lcd.c: 198:         }
  4406  002F06  0101               	movlb	1	; () banked
  4407  002F08  2B2B               	incf	display_custom_char@counter& (0+255),f,b
  4408  002F0A                     
  4409                           ; BSR set to: 1
  4410  002F0A  0E07               	movlw	7
  4411  002F0C  652B               	cpfsgt	display_custom_char@counter& (0+255),b
  4412  002F0E  EF8B  F017         	goto	u5321
  4413  002F12  EF8D  F017         	goto	u5320
  4414  002F16                     u5321:
  4415  002F16  EF75  F017         	goto	l6467
  4416  002F1A                     u5320:
  4417  002F1A                     
  4418                           ; BSR set to: 1
  4419  002F1A  C124  F11E         	movff	display_custom_char@lcd,display_char_at_position@lcd
  4420  002F1E  C125  F11F         	movff	display_custom_char@lcd+1,display_char_at_position@lcd+1
  4421  002F22  C126  F120         	movff	display_custom_char@row,display_char_at_position@row
  4422  002F26  C127  F121         	movff	display_custom_char@cloumn,display_char_at_position@coloumn
  4423  002F2A  C12A  F122         	movff	display_custom_char@mem_pos,display_char_at_position@data
  4424  002F2E  ECED  F015         	call	_display_char_at_position	;wreg free
  4425  002F32                     l142:
  4426  002F32  0012               	return		;funcret
  4427  002F34                     __end_of_display_custom_char:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _display_char_at_position *****************
  4431 ;; Defined at:
  4432 ;;		line 110 in file "ECU/LCD/lcd.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  lcd             2   30[BANK1 ] PTR const struct .
  4435 ;;		 -> lcd(6), 
  4436 ;;  row             1   32[BANK1 ] unsigned char 
  4437 ;;  coloumn         1   33[BANK1 ] unsigned char 
  4438 ;;  data            1   34[BANK1 ] unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  ret             1   35[BANK1 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      unsigned char 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        6 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 22
  4457 ;; This function calls:
  4458 ;;		_lcd_4_bit_set_cursor
  4459 ;;		_lcd_send_4bits
  4460 ;;		_lcd_send_enable_4bit
  4461 ;;		_pin_write_value
  4462 ;; This function is called by:
  4463 ;;		_display_custom_char
  4464 ;;		_main
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text18
  4469  002BDA                     __ptext18:
  4470                           	callstack 0
  4471  002BDA                     _display_char_at_position:
  4472                           	callstack 7
  4473  002BDA                     
  4474                           ;ECU/LCD/lcd.c: 113:     if(((void*)0)==lcd)
  4475  002BDA  0101               	movlb	1	; () banked
  4476  002BDC  511E               	movf	display_char_at_position@lcd& (0+255),w,b
  4477  002BDE  111F               	iorwf	(display_char_at_position@lcd+1)& (0+255),w,b
  4478  002BE0  A4D8               	btfss	status,2,c
  4479  002BE2  EFF5  F015         	goto	u5041
  4480  002BE6  EFF7  F015         	goto	u5040
  4481  002BEA                     u5041:
  4482  002BEA  EFFB  F015         	goto	l6155
  4483  002BEE                     u5040:
  4484  002BEE                     
  4485                           ; BSR set to: 1
  4486                           ;ECU/LCD/lcd.c: 114:     {;ECU/LCD/lcd.c: 115:         ret=(Std_ReturnType)0x00;
  4487  002BEE  0E00               	movlw	0
  4488  002BF0  6F23               	movwf	display_char_at_position@ret& (0+255),b
  4489                           
  4490                           ;ECU/LCD/lcd.c: 116:     }
  4491  002BF2  EF36  F016         	goto	l6157
  4492  002BF6                     l6155:
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;ECU/LCD/lcd.c: 118:     {;ECU/LCD/lcd.c: 119:         ret=lcd_4_bit_set_cursor(lcd,row,
      +                          coloumn);
  4496  002BF6  C11E  F117         	movff	display_char_at_position@lcd,lcd_4_bit_set_cursor@lcd
  4497  002BFA  C11F  F118         	movff	display_char_at_position@lcd+1,lcd_4_bit_set_cursor@lcd+1
  4498  002BFE  C120  F119         	movff	display_char_at_position@row,lcd_4_bit_set_cursor@row
  4499  002C02  C121  F11A         	movff	display_char_at_position@coloumn,lcd_4_bit_set_cursor@column
  4500  002C06  EC14  F013         	call	_lcd_4_bit_set_cursor	;wreg free
  4501  002C0A  0101               	movlb	1	; () banked
  4502  002C0C  6F23               	movwf	display_char_at_position@ret& (0+255),b
  4503                           
  4504                           ;ECU/LCD/lcd.c: 120:         ret=pin_write_value(&(lcd->rs),1);
  4505  002C0E  C11E  F100         	movff	display_char_at_position@lcd,pin_write_value@pin
  4506  002C12  C11F  F101         	movff	display_char_at_position@lcd+1,pin_write_value@pin+1
  4507  002C16  0E01               	movlw	1
  4508  002C18  6F02               	movwf	pin_write_value@value& (0+255),b
  4509  002C1A  ECEF  F00E         	call	_pin_write_value	;wreg free
  4510  002C1E  0101               	movlb	1	; () banked
  4511  002C20  6F23               	movwf	display_char_at_position@ret& (0+255),b
  4512                           
  4513                           ;ECU/LCD/lcd.c: 121:         ret=lcd_send_4bits(lcd,data>>4);
  4514  002C22  C11E  F10A         	movff	display_char_at_position@lcd,lcd_send_4bits@lcd
  4515  002C26  C11F  F10B         	movff	display_char_at_position@lcd+1,lcd_send_4bits@lcd+1
  4516  002C2A  3922               	swapf	display_char_at_position@data& (0+255),w,b
  4517  002C2C  0B0F               	andlw	15
  4518  002C2E  6F0C               	movwf	lcd_send_4bits@_data_command& (0+255),b
  4519  002C30  EC15  F019         	call	_lcd_send_4bits	;wreg free
  4520  002C34  0101               	movlb	1	; () banked
  4521  002C36  6F23               	movwf	display_char_at_position@ret& (0+255),b
  4522                           
  4523                           ;ECU/LCD/lcd.c: 122:         ret=lcd_send_enable_4bit(lcd);
  4524  002C38  C11E  F10A         	movff	display_char_at_position@lcd,lcd_send_enable_4bit@lcd
  4525  002C3C  C11F  F10B         	movff	display_char_at_position@lcd+1,lcd_send_enable_4bit@lcd+1
  4526  002C40  EC16  F01B         	call	_lcd_send_enable_4bit	;wreg free
  4527  002C44  0101               	movlb	1	; () banked
  4528  002C46  6F23               	movwf	display_char_at_position@ret& (0+255),b
  4529                           
  4530                           ;ECU/LCD/lcd.c: 123:         ret=lcd_send_4bits(lcd,data);
  4531  002C48  C11E  F10A         	movff	display_char_at_position@lcd,lcd_send_4bits@lcd
  4532  002C4C  C11F  F10B         	movff	display_char_at_position@lcd+1,lcd_send_4bits@lcd+1
  4533  002C50  C122  F10C         	movff	display_char_at_position@data,lcd_send_4bits@_data_command
  4534  002C54  EC15  F019         	call	_lcd_send_4bits	;wreg free
  4535  002C58  0101               	movlb	1	; () banked
  4536  002C5A  6F23               	movwf	display_char_at_position@ret& (0+255),b
  4537                           
  4538                           ;ECU/LCD/lcd.c: 124:         ret=lcd_send_enable_4bit(lcd);
  4539  002C5C  C11E  F10A         	movff	display_char_at_position@lcd,lcd_send_enable_4bit@lcd
  4540  002C60  C11F  F10B         	movff	display_char_at_position@lcd+1,lcd_send_enable_4bit@lcd+1
  4541  002C64  EC16  F01B         	call	_lcd_send_enable_4bit	;wreg free
  4542  002C68  0101               	movlb	1	; () banked
  4543  002C6A  6F23               	movwf	display_char_at_position@ret& (0+255),b
  4544  002C6C                     l6157:
  4545                           
  4546                           ; BSR set to: 1
  4547                           ;ECU/LCD/lcd.c: 127:     return ret;
  4548  002C6C  5123               	movf	display_char_at_position@ret& (0+255),w,b
  4549  002C6E                     
  4550                           ; BSR set to: 1
  4551  002C6E  0012               	return		;funcret
  4552  002C70                     __end_of_display_char_at_position:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function _lcd_4_bit_set_cursor *****************
  4556 ;; Defined at:
  4557 ;;		line 558 in file "ECU/LCD/lcd.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  lcd             2   23[BANK1 ] PTR const struct .
  4560 ;;		 -> lcd(6), 
  4561 ;;  row             1   25[BANK1 ] unsigned char 
  4562 ;;  column          1   26[BANK1 ] unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  ret             1   29[BANK1 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      unsigned char 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4574 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;Total ram usage:        7 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 21
  4581 ;; This function calls:
  4582 ;;		_send_command
  4583 ;; This function is called by:
  4584 ;;		_display_char_at_position
  4585 ;;		_display_string_at_position
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text19
  4590  002628                     __ptext19:
  4591                           	callstack 0
  4592  002628                     _lcd_4_bit_set_cursor:
  4593                           	callstack 8
  4594  002628                     
  4595                           ;ECU/LCD/lcd.c: 558:  Std_ReturnType lcd_4_bit_set_cursor(const lcd_4_bit_mode *lcd,uint
      +                          8 row,uint8 column);ECU/LCD/lcd.c: 559: {;ECU/LCD/lcd.c: 561:     Std_ReturnType ret=(St
      +                          d_ReturnType)0x01;
  4596  002628  0E01               	movlw	1
  4597  00262A  0101               	movlb	1	; () banked
  4598  00262C  6F1D               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  4599  00262E                     
  4600                           ; BSR set to: 1
  4601                           ;ECU/LCD/lcd.c: 562:     if(((void*)0)==lcd)
  4602  00262E  5117               	movf	lcd_4_bit_set_cursor@lcd& (0+255),w,b
  4603  002630  1118               	iorwf	(lcd_4_bit_set_cursor@lcd+1)& (0+255),w,b
  4604  002632  A4D8               	btfss	status,2,c
  4605  002634  EF1E  F013         	goto	u4991
  4606  002638  EF20  F013         	goto	u4990
  4607  00263C                     u4991:
  4608  00263C  EF24  F013         	goto	l6083
  4609  002640                     u4990:
  4610  002640                     
  4611                           ; BSR set to: 1
  4612                           ;ECU/LCD/lcd.c: 563:     {;ECU/LCD/lcd.c: 564:         ret=(Std_ReturnType)0x00;
  4613  002640  0E00               	movlw	0
  4614  002642  6F1D               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  4615                           
  4616                           ;ECU/LCD/lcd.c: 565:     }
  4617  002644  EF78  F013         	goto	l6097
  4618  002648                     l6083:
  4619                           
  4620                           ; BSR set to: 1
  4621                           ;ECU/LCD/lcd.c: 567:     {;ECU/LCD/lcd.c: 568:         column--;
  4622  002648  071A               	decf	lcd_4_bit_set_cursor@column& (0+255),f,b
  4623                           
  4624                           ;ECU/LCD/lcd.c: 569:         switch(row)
  4625  00264A  EF5B  F013         	goto	l6095
  4626  00264E                     l6085:
  4627                           
  4628                           ; BSR set to: 1
  4629  00264E  C117  F113         	movff	lcd_4_bit_set_cursor@lcd,send_command@lcd
  4630  002652  C118  F114         	movff	lcd_4_bit_set_cursor@lcd+1,send_command@lcd+1
  4631  002656  511A               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  4632  002658  0F80               	addlw	128
  4633  00265A  6F15               	movwf	send_command@command& (0+255),b
  4634  00265C  ECDB  F017         	call	_send_command	;wreg free
  4635  002660  0101               	movlb	1	; () banked
  4636  002662  6F1D               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  4637  002664  EF78  F013         	goto	l6097
  4638  002668                     l6087:
  4639                           
  4640                           ; BSR set to: 1
  4641  002668  C117  F113         	movff	lcd_4_bit_set_cursor@lcd,send_command@lcd
  4642  00266C  C118  F114         	movff	lcd_4_bit_set_cursor@lcd+1,send_command@lcd+1
  4643  002670  511A               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  4644  002672  0FC0               	addlw	192
  4645  002674  6F15               	movwf	send_command@command& (0+255),b
  4646  002676  ECDB  F017         	call	_send_command	;wreg free
  4647  00267A  0101               	movlb	1	; () banked
  4648  00267C  6F1D               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  4649  00267E  EF78  F013         	goto	l6097
  4650  002682                     l6089:
  4651                           
  4652                           ; BSR set to: 1
  4653  002682  C117  F113         	movff	lcd_4_bit_set_cursor@lcd,send_command@lcd
  4654  002686  C118  F114         	movff	lcd_4_bit_set_cursor@lcd+1,send_command@lcd+1
  4655  00268A  511A               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  4656  00268C  0F94               	addlw	148
  4657  00268E  6F15               	movwf	send_command@command& (0+255),b
  4658  002690  ECDB  F017         	call	_send_command	;wreg free
  4659  002694  0101               	movlb	1	; () banked
  4660  002696  6F1D               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  4661  002698  EF78  F013         	goto	l6097
  4662  00269C                     l6091:
  4663                           
  4664                           ; BSR set to: 1
  4665  00269C  C117  F113         	movff	lcd_4_bit_set_cursor@lcd,send_command@lcd
  4666  0026A0  C118  F114         	movff	lcd_4_bit_set_cursor@lcd+1,send_command@lcd+1
  4667  0026A4  511A               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  4668  0026A6  0FD4               	addlw	212
  4669  0026A8  6F15               	movwf	send_command@command& (0+255),b
  4670  0026AA  ECDB  F017         	call	_send_command	;wreg free
  4671  0026AE  0101               	movlb	1	; () banked
  4672  0026B0  6F1D               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  4673  0026B2  EF78  F013         	goto	l6097
  4674  0026B6                     l6095:
  4675                           
  4676                           ; BSR set to: 1
  4677  0026B6  5119               	movf	lcd_4_bit_set_cursor@row& (0+255),w,b
  4678  0026B8  6F1B               	movwf	??_lcd_4_bit_set_cursor& (0+255),b
  4679  0026BA  6B1C               	clrf	(??_lcd_4_bit_set_cursor+1)& (0+255),b
  4680                           
  4681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4682                           ; Switch size 1, requested type "simple"
  4683                           ; Number of cases is 1, Range of values is 0 to 0
  4684                           ; switch strategies available:
  4685                           ; Name         Instructions Cycles
  4686                           ; simple_byte            4     3 (average)
  4687                           ;	Chosen strategy is simple_byte
  4688  0026BC  511C               	movf	(??_lcd_4_bit_set_cursor+1)& (0+255),w,b
  4689  0026BE  0A00               	xorlw	0	; case 0
  4690  0026C0  B4D8               	btfsc	status,2,c
  4691  0026C2  EF65  F013         	goto	l7421
  4692  0026C6  EF78  F013         	goto	l6097
  4693  0026CA                     l7421:
  4694                           
  4695                           ; BSR set to: 1
  4696                           ; Switch size 1, requested type "simple"
  4697                           ; Number of cases is 4, Range of values is 1 to 4
  4698                           ; switch strategies available:
  4699                           ; Name         Instructions Cycles
  4700                           ; simple_byte           13     7 (average)
  4701                           ;	Chosen strategy is simple_byte
  4702  0026CA  511B               	movf	??_lcd_4_bit_set_cursor& (0+255),w,b
  4703  0026CC  0A01               	xorlw	1	; case 1
  4704  0026CE  B4D8               	btfsc	status,2,c
  4705  0026D0  EF27  F013         	goto	l6085
  4706  0026D4  0A03               	xorlw	3	; case 2
  4707  0026D6  B4D8               	btfsc	status,2,c
  4708  0026D8  EF34  F013         	goto	l6087
  4709  0026DC  0A01               	xorlw	1	; case 3
  4710  0026DE  B4D8               	btfsc	status,2,c
  4711  0026E0  EF41  F013         	goto	l6089
  4712  0026E4  0A07               	xorlw	7	; case 4
  4713  0026E6  B4D8               	btfsc	status,2,c
  4714  0026E8  EF4E  F013         	goto	l6091
  4715  0026EC  EF78  F013         	goto	l6097
  4716  0026F0                     l6097:
  4717                           
  4718                           ; BSR set to: 1
  4719                           ;ECU/LCD/lcd.c: 577:     return ret;
  4720  0026F0  511D               	movf	lcd_4_bit_set_cursor@ret& (0+255),w,b
  4721  0026F2                     
  4722                           ; BSR set to: 1
  4723  0026F2  0012               	return		;funcret
  4724  0026F4                     __end_of_lcd_4_bit_set_cursor:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _send_command *****************
  4728 ;; Defined at:
  4729 ;;		line 56 in file "ECU/LCD/lcd.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  lcd             2   19[BANK1 ] PTR const struct .
  4732 ;;		 -> lcd(6), 
  4733 ;;  command         1   21[BANK1 ] unsigned char 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  ret             1   22[BANK1 ] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      unsigned char 
  4738 ;; Registers used:
  4739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4745 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;Total ram usage:        4 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 20
  4752 ;; This function calls:
  4753 ;;		_lcd_send_4bits
  4754 ;;		_lcd_send_enable_4bit
  4755 ;;		_pin_write_value
  4756 ;; This function is called by:
  4757 ;;		_lcd_4_bit_init
  4758 ;;		_display_custom_char
  4759 ;;		_lcd_4_bit_set_cursor
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text20
  4764  002FB6                     __ptext20:
  4765                           	callstack 0
  4766  002FB6                     _send_command:
  4767                           	callstack 9
  4768  002FB6                     
  4769                           ;ECU/LCD/lcd.c: 59:     if(((void*)0)==lcd)
  4770  002FB6  0101               	movlb	1	; () banked
  4771  002FB8  5113               	movf	send_command@lcd& (0+255),w,b
  4772  002FBA  1114               	iorwf	(send_command@lcd+1)& (0+255),w,b
  4773  002FBC  A4D8               	btfss	status,2,c
  4774  002FBE  EFE3  F017         	goto	u4861
  4775  002FC2  EFE5  F017         	goto	u4860
  4776  002FC6                     u4861:
  4777  002FC6  EFE9  F017         	goto	l5981
  4778  002FCA                     u4860:
  4779  002FCA                     
  4780                           ; BSR set to: 1
  4781                           ;ECU/LCD/lcd.c: 60:     {;ECU/LCD/lcd.c: 61:         ret=(Std_ReturnType)0x00;
  4782  002FCA  0E00               	movlw	0
  4783  002FCC  6F16               	movwf	send_command@ret& (0+255),b
  4784                           
  4785                           ;ECU/LCD/lcd.c: 62:     }
  4786  002FCE  EF18  F018         	goto	l5983
  4787  002FD2                     l5981:
  4788                           
  4789                           ; BSR set to: 1
  4790                           ;ECU/LCD/lcd.c: 64:     {;ECU/LCD/lcd.c: 65:         ret=pin_write_value(&(lcd->rs),0);
  4791  002FD2  C113  F100         	movff	send_command@lcd,pin_write_value@pin
  4792  002FD6  C114  F101         	movff	send_command@lcd+1,pin_write_value@pin+1
  4793  002FDA  0E00               	movlw	0
  4794  002FDC  6F02               	movwf	pin_write_value@value& (0+255),b
  4795  002FDE  ECEF  F00E         	call	_pin_write_value	;wreg free
  4796  002FE2  0101               	movlb	1	; () banked
  4797  002FE4  6F16               	movwf	send_command@ret& (0+255),b
  4798                           
  4799                           ;ECU/LCD/lcd.c: 67:         ret=lcd_send_4bits(lcd,command>>4);
  4800  002FE6  C113  F10A         	movff	send_command@lcd,lcd_send_4bits@lcd
  4801  002FEA  C114  F10B         	movff	send_command@lcd+1,lcd_send_4bits@lcd+1
  4802  002FEE  3915               	swapf	send_command@command& (0+255),w,b
  4803  002FF0  0B0F               	andlw	15
  4804  002FF2  6F0C               	movwf	lcd_send_4bits@_data_command& (0+255),b
  4805  002FF4  EC15  F019         	call	_lcd_send_4bits	;wreg free
  4806  002FF8  0101               	movlb	1	; () banked
  4807  002FFA  6F16               	movwf	send_command@ret& (0+255),b
  4808                           
  4809                           ;ECU/LCD/lcd.c: 68:         ret=lcd_send_enable_4bit(lcd);
  4810  002FFC  C113  F10A         	movff	send_command@lcd,lcd_send_enable_4bit@lcd
  4811  003000  C114  F10B         	movff	send_command@lcd+1,lcd_send_enable_4bit@lcd+1
  4812  003004  EC16  F01B         	call	_lcd_send_enable_4bit	;wreg free
  4813  003008  0101               	movlb	1	; () banked
  4814  00300A  6F16               	movwf	send_command@ret& (0+255),b
  4815                           
  4816                           ;ECU/LCD/lcd.c: 70:         ret=lcd_send_4bits(lcd,command);
  4817  00300C  C113  F10A         	movff	send_command@lcd,lcd_send_4bits@lcd
  4818  003010  C114  F10B         	movff	send_command@lcd+1,lcd_send_4bits@lcd+1
  4819  003014  C115  F10C         	movff	send_command@command,lcd_send_4bits@_data_command
  4820  003018  EC15  F019         	call	_lcd_send_4bits	;wreg free
  4821  00301C  0101               	movlb	1	; () banked
  4822  00301E  6F16               	movwf	send_command@ret& (0+255),b
  4823                           
  4824                           ;ECU/LCD/lcd.c: 71:         ret=lcd_send_enable_4bit(lcd);
  4825  003020  C113  F10A         	movff	send_command@lcd,lcd_send_enable_4bit@lcd
  4826  003024  C114  F10B         	movff	send_command@lcd+1,lcd_send_enable_4bit@lcd+1
  4827  003028  EC16  F01B         	call	_lcd_send_enable_4bit	;wreg free
  4828  00302C  0101               	movlb	1	; () banked
  4829  00302E  6F16               	movwf	send_command@ret& (0+255),b
  4830  003030                     l5983:
  4831                           
  4832                           ; BSR set to: 1
  4833                           ;ECU/LCD/lcd.c: 74:     return ret;
  4834  003030  5116               	movf	send_command@ret& (0+255),w,b
  4835  003032                     
  4836                           ; BSR set to: 1
  4837  003032  0012               	return		;funcret
  4838  003034                     __end_of_send_command:
  4839                           	callstack 0
  4840                           
  4841 ;; *************** function _display_char *****************
  4842 ;; Defined at:
  4843 ;;		line 82 in file "ECU/LCD/lcd.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  lcd             2   19[BANK1 ] PTR const struct .
  4846 ;;		 -> lcd(6), 
  4847 ;;  data            1   21[BANK1 ] unsigned char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  ret             1   22[BANK1 ] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      unsigned char 
  4852 ;; Registers used:
  4853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4859 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;Total ram usage:        4 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 20
  4866 ;; This function calls:
  4867 ;;		_lcd_send_4bits
  4868 ;;		_lcd_send_enable_4bit
  4869 ;;		_pin_write_value
  4870 ;; This function is called by:
  4871 ;;		_display_string_at_position
  4872 ;;		_display_custom_char
  4873 ;;		_display_string
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text21
  4878  003034                     __ptext21:
  4879                           	callstack 0
  4880  003034                     _display_char:
  4881                           	callstack 9
  4882  003034                     
  4883                           ;ECU/LCD/lcd.c: 85:     if(((void*)0)==lcd)
  4884  003034  0101               	movlb	1	; () banked
  4885  003036  5113               	movf	display_char@lcd& (0+255),w,b
  4886  003038  1114               	iorwf	(display_char@lcd+1)& (0+255),w,b
  4887  00303A  A4D8               	btfss	status,2,c
  4888  00303C  EF22  F018         	goto	u5031
  4889  003040  EF24  F018         	goto	u5030
  4890  003044                     u5031:
  4891  003044  EF28  F018         	goto	l6143
  4892  003048                     u5030:
  4893  003048                     
  4894                           ; BSR set to: 1
  4895                           ;ECU/LCD/lcd.c: 86:     {;ECU/LCD/lcd.c: 87:         ret=(Std_ReturnType)0x00;
  4896  003048  0E00               	movlw	0
  4897  00304A  6F16               	movwf	display_char@ret& (0+255),b
  4898                           
  4899                           ;ECU/LCD/lcd.c: 88:     }
  4900  00304C  EF57  F018         	goto	l6145
  4901  003050                     l6143:
  4902                           
  4903                           ; BSR set to: 1
  4904                           ;ECU/LCD/lcd.c: 90:     {;ECU/LCD/lcd.c: 91:         ret=pin_write_value(&(lcd->rs),1);
  4905  003050  C113  F100         	movff	display_char@lcd,pin_write_value@pin
  4906  003054  C114  F101         	movff	display_char@lcd+1,pin_write_value@pin+1
  4907  003058  0E01               	movlw	1
  4908  00305A  6F02               	movwf	pin_write_value@value& (0+255),b
  4909  00305C  ECEF  F00E         	call	_pin_write_value	;wreg free
  4910  003060  0101               	movlb	1	; () banked
  4911  003062  6F16               	movwf	display_char@ret& (0+255),b
  4912                           
  4913                           ;ECU/LCD/lcd.c: 93:         ret=lcd_send_4bits(lcd,data>>4);
  4914  003064  C113  F10A         	movff	display_char@lcd,lcd_send_4bits@lcd
  4915  003068  C114  F10B         	movff	display_char@lcd+1,lcd_send_4bits@lcd+1
  4916  00306C  3915               	swapf	display_char@data& (0+255),w,b
  4917  00306E  0B0F               	andlw	15
  4918  003070  6F0C               	movwf	lcd_send_4bits@_data_command& (0+255),b
  4919  003072  EC15  F019         	call	_lcd_send_4bits	;wreg free
  4920  003076  0101               	movlb	1	; () banked
  4921  003078  6F16               	movwf	display_char@ret& (0+255),b
  4922                           
  4923                           ;ECU/LCD/lcd.c: 94:         ret=lcd_send_enable_4bit(lcd);
  4924  00307A  C113  F10A         	movff	display_char@lcd,lcd_send_enable_4bit@lcd
  4925  00307E  C114  F10B         	movff	display_char@lcd+1,lcd_send_enable_4bit@lcd+1
  4926  003082  EC16  F01B         	call	_lcd_send_enable_4bit	;wreg free
  4927  003086  0101               	movlb	1	; () banked
  4928  003088  6F16               	movwf	display_char@ret& (0+255),b
  4929                           
  4930                           ;ECU/LCD/lcd.c: 96:         ret=lcd_send_4bits(lcd,data);
  4931  00308A  C113  F10A         	movff	display_char@lcd,lcd_send_4bits@lcd
  4932  00308E  C114  F10B         	movff	display_char@lcd+1,lcd_send_4bits@lcd+1
  4933  003092  C115  F10C         	movff	display_char@data,lcd_send_4bits@_data_command
  4934  003096  EC15  F019         	call	_lcd_send_4bits	;wreg free
  4935  00309A  0101               	movlb	1	; () banked
  4936  00309C  6F16               	movwf	display_char@ret& (0+255),b
  4937                           
  4938                           ;ECU/LCD/lcd.c: 97:         ret=lcd_send_enable_4bit(lcd);
  4939  00309E  C113  F10A         	movff	display_char@lcd,lcd_send_enable_4bit@lcd
  4940  0030A2  C114  F10B         	movff	display_char@lcd+1,lcd_send_enable_4bit@lcd+1
  4941  0030A6  EC16  F01B         	call	_lcd_send_enable_4bit	;wreg free
  4942  0030AA  0101               	movlb	1	; () banked
  4943  0030AC  6F16               	movwf	display_char@ret& (0+255),b
  4944  0030AE                     l6145:
  4945                           
  4946                           ; BSR set to: 1
  4947                           ;ECU/LCD/lcd.c: 100:     return ret;
  4948  0030AE  5116               	movf	display_char@ret& (0+255),w,b
  4949  0030B0                     
  4950                           ; BSR set to: 1
  4951  0030B0  0012               	return		;funcret
  4952  0030B2                     __end_of_display_char:
  4953                           	callstack 0
  4954                           
  4955 ;; *************** function _lcd_send_enable_4bit *****************
  4956 ;; Defined at:
  4957 ;;		line 511 in file "ECU/LCD/lcd.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  lcd             2   10[BANK1 ] PTR const struct .
  4960 ;;		 -> lcd(6), 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  ret             1   12[BANK1 ] unsigned char 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      unsigned char 
  4965 ;; Registers used:
  4966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4972 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;Total ram usage:        3 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 19
  4979 ;; This function calls:
  4980 ;;		_pin_write_value
  4981 ;; This function is called by:
  4982 ;;		_send_command
  4983 ;;		_display_char
  4984 ;;		_display_char_at_position
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text22
  4989  00362C                     __ptext22:
  4990                           	callstack 0
  4991  00362C                     _lcd_send_enable_4bit:
  4992                           	callstack 9
  4993  00362C                     
  4994                           ;ECU/LCD/lcd.c: 514:     if(((void*)0)==lcd)
  4995  00362C  0101               	movlb	1	; () banked
  4996  00362E  510A               	movf	lcd_send_enable_4bit@lcd& (0+255),w,b
  4997  003630  110B               	iorwf	(lcd_send_enable_4bit@lcd+1)& (0+255),w,b
  4998  003632  A4D8               	btfss	status,2,c
  4999  003634  EF1E  F01B         	goto	u4691
  5000  003638  EF20  F01B         	goto	u4690
  5001  00363C                     u4691:
  5002  00363C  EF24  F01B         	goto	l5875
  5003  003640                     u4690:
  5004  003640                     
  5005                           ; BSR set to: 1
  5006                           ;ECU/LCD/lcd.c: 515:     {;ECU/LCD/lcd.c: 516:         ret=(Std_ReturnType)0x00;
  5007  003640  0E00               	movlw	0
  5008  003642  6F0C               	movwf	lcd_send_enable_4bit@ret& (0+255),b
  5009                           
  5010                           ;ECU/LCD/lcd.c: 517:     }
  5011  003644  EF3F  F01B         	goto	l5881
  5012  003648                     l5875:
  5013                           
  5014                           ; BSR set to: 1
  5015  003648  0E01               	movlw	1
  5016  00364A  250A               	addwf	lcd_send_enable_4bit@lcd& (0+255),w,b
  5017  00364C  6F00               	movwf	pin_write_value@pin& (0+255),b
  5018  00364E  0E00               	movlw	0
  5019  003650  210B               	addwfc	(lcd_send_enable_4bit@lcd+1)& (0+255),w,b
  5020  003652  6F01               	movwf	(pin_write_value@pin+1)& (0+255),b
  5021  003654  0E01               	movlw	1
  5022  003656  6F02               	movwf	pin_write_value@value& (0+255),b
  5023  003658  ECEF  F00E         	call	_pin_write_value	;wreg free
  5024  00365C                     
  5025                           ;ECU/LCD/lcd.c: 521:         _delay((unsigned long)((10)*(8000000UL/4000000.0)));
  5026  00365C  0E06               	movlw	6
  5027  00365E                     u6177:
  5028  00365E  2EE8               	decfsz	wreg,f,c
  5029  003660  D7FE               	bra	u6177
  5030  003662  D000               	nop2	
  5031  003664                     
  5032                           ;ECU/LCD/lcd.c: 522:         ret=pin_write_value(&(lcd->en),0);
  5033  003664  0E01               	movlw	1
  5034  003666  0101               	movlb	1	; () banked
  5035  003668  250A               	addwf	lcd_send_enable_4bit@lcd& (0+255),w,b
  5036  00366A  6F00               	movwf	pin_write_value@pin& (0+255),b
  5037  00366C  0E00               	movlw	0
  5038  00366E  210B               	addwfc	(lcd_send_enable_4bit@lcd+1)& (0+255),w,b
  5039  003670  6F01               	movwf	(pin_write_value@pin+1)& (0+255),b
  5040  003672  0E00               	movlw	0
  5041  003674  6F02               	movwf	pin_write_value@value& (0+255),b
  5042  003676  ECEF  F00E         	call	_pin_write_value	;wreg free
  5043  00367A  0101               	movlb	1	; () banked
  5044  00367C  6F0C               	movwf	lcd_send_enable_4bit@ret& (0+255),b
  5045  00367E                     l5881:
  5046                           
  5047                           ; BSR set to: 1
  5048                           ;ECU/LCD/lcd.c: 525:     return ret;
  5049  00367E  510C               	movf	lcd_send_enable_4bit@ret& (0+255),w,b
  5050  003680                     
  5051                           ; BSR set to: 1
  5052  003680  0012               	return		;funcret
  5053  003682                     __end_of_lcd_send_enable_4bit:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _lcd_send_4bits *****************
  5057 ;; Defined at:
  5058 ;;		line 489 in file "ECU/LCD/lcd.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  lcd             2   10[BANK1 ] PTR const struct .
  5061 ;;		 -> lcd(6), 
  5062 ;;  _data_comman    1   12[BANK1 ] unsigned char 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  counter         1   18[BANK1 ] unsigned char 
  5065 ;;  ret             1   17[BANK1 ] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      unsigned char 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5075 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;Total ram usage:        9 bytes
  5080 ;; Hardware stack levels used: 1
  5081 ;; Hardware stack levels required when called: 19
  5082 ;; This function calls:
  5083 ;;		_pin_write_value
  5084 ;; This function is called by:
  5085 ;;		_send_command
  5086 ;;		_display_char
  5087 ;;		_display_char_at_position
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text23
  5092  00322A                     __ptext23:
  5093                           	callstack 0
  5094  00322A                     _lcd_send_4bits:
  5095                           	callstack 9
  5096  00322A                     
  5097                           ;ECU/LCD/lcd.c: 492:     Std_ReturnType ret=(Std_ReturnType)0x01;
  5098  00322A  0E01               	movlw	1
  5099  00322C  0101               	movlb	1	; () banked
  5100  00322E  6F11               	movwf	lcd_send_4bits@ret& (0+255),b
  5101  003230                     
  5102                           ; BSR set to: 1
  5103                           ;ECU/LCD/lcd.c: 493:     if(((void*)0)==lcd)
  5104  003230  510A               	movf	lcd_send_4bits@lcd& (0+255),w,b
  5105  003232  110B               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5106  003234  A4D8               	btfss	status,2,c
  5107  003236  EF1F  F019         	goto	u4661
  5108  00323A  EF21  F019         	goto	u4660
  5109  00323E                     u4661:
  5110  00323E  EF25  F019         	goto	l5853
  5111  003242                     u4660:
  5112  003242                     
  5113                           ; BSR set to: 1
  5114                           ;ECU/LCD/lcd.c: 494:     {;ECU/LCD/lcd.c: 495:         ret=(Std_ReturnType)0x00;
  5115  003242  0E00               	movlw	0
  5116  003244  6F11               	movwf	lcd_send_4bits@ret& (0+255),b
  5117                           
  5118                           ;ECU/LCD/lcd.c: 496:     }
  5119  003246  EF50  F019         	goto	l5865
  5120  00324A                     l5853:
  5121                           
  5122                           ; BSR set to: 1
  5123                           ;ECU/LCD/lcd.c: 498:     {;ECU/LCD/lcd.c: 499:         for(counter=0;counter<4;counter++
      +                          )
  5124  00324A  0E00               	movlw	0
  5125  00324C  6F12               	movwf	lcd_send_4bits@counter& (0+255),b
  5126  00324E                     l5859:
  5127                           
  5128                           ; BSR set to: 1
  5129                           ;ECU/LCD/lcd.c: 500:         {;ECU/LCD/lcd.c: 501:             ret=pin_write_value(&(lcd
      +                          ->_4_bit[counter]),(_data_command>>counter)&(uint8)0x01);
  5130  00324E  5112               	movf	lcd_send_4bits@counter& (0+255),w,b
  5131  003250  250A               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5132  003252  6F0D               	movwf	??_lcd_send_4bits& (0+255),b
  5133  003254  0E00               	movlw	0
  5134  003256  210B               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5135  003258  6F0E               	movwf	(??_lcd_send_4bits+1)& (0+255),b
  5136  00325A  0E02               	movlw	2
  5137  00325C  250D               	addwf	??_lcd_send_4bits& (0+255),w,b
  5138  00325E  6F00               	movwf	pin_write_value@pin& (0+255),b
  5139  003260  0E00               	movlw	0
  5140  003262  210E               	addwfc	(??_lcd_send_4bits+1)& (0+255),w,b
  5141  003264  6F01               	movwf	(pin_write_value@pin+1)& (0+255),b
  5142  003266  C112  F10F         	movff	lcd_send_4bits@counter,??_lcd_send_4bits+2
  5143  00326A  C10C  F110         	movff	lcd_send_4bits@_data_command,??_lcd_send_4bits+3
  5144  00326E  2B0F               	incf	(??_lcd_send_4bits+2)& (0+255),f,b
  5145  003270  EF3C  F019         	goto	u4674
  5146  003274                     u4675:
  5147  003274  90D8               	bcf	status,0,c
  5148  003276  3310               	rrcf	(??_lcd_send_4bits+3)& (0+255),f,b
  5149  003278                     u4674:
  5150  003278  2F0F               	decfsz	(??_lcd_send_4bits+2)& (0+255),f,b
  5151  00327A  EF3A  F019         	goto	u4675
  5152  00327E  0101               	movlb	1	; () banked
  5153  003280  5110               	movf	(??_lcd_send_4bits+3)& (0+255),w,b
  5154  003282  0B01               	andlw	1
  5155  003284  6F02               	movwf	pin_write_value@value& (0+255),b
  5156  003286  ECEF  F00E         	call	_pin_write_value	;wreg free
  5157  00328A  0101               	movlb	1	; () banked
  5158  00328C  6F11               	movwf	lcd_send_4bits@ret& (0+255),b
  5159  00328E                     
  5160                           ; BSR set to: 1
  5161                           ;ECU/LCD/lcd.c: 502:         }
  5162  00328E  2B12               	incf	lcd_send_4bits@counter& (0+255),f,b
  5163  003290                     
  5164                           ; BSR set to: 1
  5165  003290  0E03               	movlw	3
  5166  003292  6512               	cpfsgt	lcd_send_4bits@counter& (0+255),b
  5167  003294  EF4E  F019         	goto	u4681
  5168  003298  EF50  F019         	goto	u4680
  5169  00329C                     u4681:
  5170  00329C  EF27  F019         	goto	l5859
  5171  0032A0                     u4680:
  5172  0032A0                     l5865:
  5173                           
  5174                           ; BSR set to: 1
  5175                           ;ECU/LCD/lcd.c: 504:     return ret;
  5176  0032A0  5111               	movf	lcd_send_4bits@ret& (0+255),w,b
  5177  0032A2                     
  5178                           ; BSR set to: 1
  5179  0032A2  0012               	return		;funcret
  5180  0032A4                     __end_of_lcd_send_4bits:
  5181                           	callstack 0
  5182                           
  5183 ;; *************** function _pin_write_value *****************
  5184 ;; Defined at:
  5185 ;;		line 61 in file "MCAL/GPIO/gpio.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  pin             2    0[BANK1 ] PTR const struct .
  5188 ;;		 -> lcd._4_bit(4), lcd(6), relay_off@relay_status(1), relay_on@relay_status(1), 
  5189 ;;		 -> led_turn_off@led_x(1), led_turn_on@led_x(1), 
  5190 ;;  value           1    2[BANK1 ] unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  ret             1    9[BANK1 ] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      unsigned char 
  5195 ;; Registers used:
  5196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5202 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;Total ram usage:       10 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 18
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_send_command
  5213 ;;		_display_char
  5214 ;;		_display_char_at_position
  5215 ;;		_lcd_send_4bits
  5216 ;;		_lcd_send_enable_4bit
  5217 ;;		_segment_write
  5218 ;;		_motor_right
  5219 ;;		_motor_left
  5220 ;;		_motor_off
  5221 ;;		_keypad_read
  5222 ;;		_send_command_8
  5223 ;;		_display_char_8
  5224 ;;		_display_char_at_position_8
  5225 ;;		_lcd_send_enable_8bit
  5226 ;;		_led_turn_on
  5227 ;;		_led_turn_off
  5228 ;;		_relay_on
  5229 ;;		_relay_off
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text24
  5234  001DDE                     __ptext24:
  5235                           	callstack 0
  5236  001DDE                     _pin_write_value:
  5237                           	callstack 10
  5238  001DDE                     
  5239                           ;MCAL/GPIO/gpio.c: 61: Std_ReturnType pin_write_value(const pin_config *pin,uint8 value)
      +                          ;MCAL/GPIO/gpio.c: 62: {;MCAL/GPIO/gpio.c: 63:     Std_ReturnType ret = (Std_ReturnType)
      +                          0x01;
  5240  001DDE  0E01               	movlw	1
  5241  001DE0  0101               	movlb	1	; () banked
  5242  001DE2  6F09               	movwf	pin_write_value@ret& (0+255),b
  5243  001DE4                     
  5244                           ; BSR set to: 1
  5245                           ;MCAL/GPIO/gpio.c: 64:     if(((void*)0) == pin || pin->pin > 8 -1){
  5246  001DE4  5100               	movf	pin_write_value@pin& (0+255),w,b
  5247  001DE6  1101               	iorwf	(pin_write_value@pin+1)& (0+255),w,b
  5248  001DE8  B4D8               	btfsc	status,2,c
  5249  001DEA  EFF9  F00E         	goto	u4431
  5250  001DEE  EFFB  F00E         	goto	u4430
  5251  001DF2                     u4431:
  5252  001DF2  EF0C  F00F         	goto	l5711
  5253  001DF6                     u4430:
  5254  001DF6                     
  5255                           ; BSR set to: 1
  5256  001DF6  C100  FFD9         	movff	pin_write_value@pin,fsr2l
  5257  001DFA  C101  FFDA         	movff	pin_write_value@pin+1,fsr2h
  5258  001DFE  30DF               	rrcf	223,w,c
  5259  001E00  32E8               	rrcf	wreg,f,c
  5260  001E02  32E8               	rrcf	wreg,f,c
  5261  001E04  0B07               	andlw	7
  5262  001E06  6F03               	movwf	??_pin_write_value& (0+255),b
  5263  001E08  0E07               	movlw	7
  5264  001E0A  6503               	cpfsgt	??_pin_write_value& (0+255),b
  5265  001E0C  EF0A  F00F         	goto	u4441
  5266  001E10  EF0C  F00F         	goto	u4440
  5267  001E14                     u4441:
  5268  001E14  EF71  F00F         	goto	l5719
  5269  001E18                     u4440:
  5270  001E18                     l5711:
  5271                           
  5272                           ; BSR set to: 1
  5273                           ;MCAL/GPIO/gpio.c: 65:         ret = (Std_ReturnType)0x00;
  5274  001E18  0E00               	movlw	0
  5275  001E1A  6F09               	movwf	pin_write_value@ret& (0+255),b
  5276                           
  5277                           ;MCAL/GPIO/gpio.c: 66:     }
  5278  001E1C  EF86  F00F         	goto	l5721
  5279  001E20                     l5713:
  5280                           
  5281                           ; BSR set to: 1
  5282  001E20  C100  FFD9         	movff	pin_write_value@pin,fsr2l
  5283  001E24  C101  FFDA         	movff	pin_write_value@pin+1,fsr2h
  5284  001E28  30DF               	rrcf	223,w,c
  5285  001E2A  32E8               	rrcf	wreg,f,c
  5286  001E2C  32E8               	rrcf	wreg,f,c
  5287  001E2E  0B07               	andlw	7
  5288  001E30  6F03               	movwf	??_pin_write_value& (0+255),b
  5289  001E32  0E01               	movlw	1
  5290  001E34  6F04               	movwf	(??_pin_write_value+1)& (0+255),b
  5291  001E36  2B03               	incf	??_pin_write_value& (0+255),f,b
  5292  001E38  EF20  F00F         	goto	u4454
  5293  001E3C                     u4455:
  5294  001E3C  90D8               	bcf	status,0,c
  5295  001E3E  3704               	rlcf	(??_pin_write_value+1)& (0+255),f,b
  5296  001E40                     u4454:
  5297  001E40  2F03               	decfsz	??_pin_write_value& (0+255),f,b
  5298  001E42  EF1E  F00F         	goto	u4455
  5299  001E46  C100  FFD9         	movff	pin_write_value@pin,fsr2l
  5300  001E4A  C101  FFDA         	movff	pin_write_value@pin+1,fsr2h
  5301  001E4E  50DF               	movf	223,w,c
  5302  001E50  0B07               	andlw	7
  5303  001E52  0101               	movlb	1	; () banked
  5304  001E54  6F05               	movwf	(??_pin_write_value+2)& (0+255),b
  5305  001E56  5105               	movf	(??_pin_write_value+2)& (0+255),w,b
  5306  001E58  0D02               	mullw	2
  5307  001E5A  0EB4               	movlw	low _LAT_array
  5308  001E5C  24F3               	addwf	243,w,c
  5309  001E5E  6ED9               	movwf	fsr2l,c
  5310  001E60  0E00               	movlw	high _LAT_array
  5311  001E62  20F4               	addwfc	prodh,w,c
  5312  001E64  6EDA               	movwf	fsr2h,c
  5313  001E66  CFDE F106          	movff	postinc2,??_pin_write_value+3
  5314  001E6A  CFDD F107          	movff	postdec2,??_pin_write_value+4
  5315  001E6E  C106  FFD9         	movff	??_pin_write_value+3,fsr2l
  5316  001E72  C107  FFDA         	movff	??_pin_write_value+4,fsr2h
  5317  001E76  5104               	movf	(??_pin_write_value+1)& (0+255),w,b
  5318  001E78  12DF               	iorwf	indf2,f,c
  5319  001E7A  EF86  F00F         	goto	l5721
  5320  001E7E                     l5715:
  5321                           
  5322                           ; BSR set to: 1
  5323  001E7E  C100  FFD9         	movff	pin_write_value@pin,fsr2l
  5324  001E82  C101  FFDA         	movff	pin_write_value@pin+1,fsr2h
  5325  001E86  30DF               	rrcf	223,w,c
  5326  001E88  32E8               	rrcf	wreg,f,c
  5327  001E8A  32E8               	rrcf	wreg,f,c
  5328  001E8C  0B07               	andlw	7
  5329  001E8E  6F03               	movwf	??_pin_write_value& (0+255),b
  5330  001E90  0E01               	movlw	1
  5331  001E92  6F04               	movwf	(??_pin_write_value+1)& (0+255),b
  5332  001E94  2B03               	incf	??_pin_write_value& (0+255),f,b
  5333  001E96  EF4F  F00F         	goto	u4464
  5334  001E9A                     u4465:
  5335  001E9A  90D8               	bcf	status,0,c
  5336  001E9C  3704               	rlcf	(??_pin_write_value+1)& (0+255),f,b
  5337  001E9E                     u4464:
  5338  001E9E  2F03               	decfsz	??_pin_write_value& (0+255),f,b
  5339  001EA0  EF4D  F00F         	goto	u4465
  5340  001EA4  0101               	movlb	1	; () banked
  5341  001EA6  5104               	movf	(??_pin_write_value+1)& (0+255),w,b
  5342  001EA8  0AFF               	xorlw	255
  5343  001EAA  6F05               	movwf	(??_pin_write_value+2)& (0+255),b
  5344  001EAC  C100  FFD9         	movff	pin_write_value@pin,fsr2l
  5345  001EB0  C101  FFDA         	movff	pin_write_value@pin+1,fsr2h
  5346  001EB4  50DF               	movf	223,w,c
  5347  001EB6  0B07               	andlw	7
  5348  001EB8  6F06               	movwf	(??_pin_write_value+3)& (0+255),b
  5349  001EBA  5106               	movf	(??_pin_write_value+3)& (0+255),w,b
  5350  001EBC  0D02               	mullw	2
  5351  001EBE  0EB4               	movlw	low _LAT_array
  5352  001EC0  24F3               	addwf	243,w,c
  5353  001EC2  6ED9               	movwf	fsr2l,c
  5354  001EC4  0E00               	movlw	high _LAT_array
  5355  001EC6  20F4               	addwfc	prodh,w,c
  5356  001EC8  6EDA               	movwf	fsr2h,c
  5357  001ECA  CFDE F107          	movff	postinc2,??_pin_write_value+4
  5358  001ECE  CFDD F108          	movff	postdec2,??_pin_write_value+5
  5359  001ED2  C107  FFD9         	movff	??_pin_write_value+4,fsr2l
  5360  001ED6  C108  FFDA         	movff	??_pin_write_value+5,fsr2h
  5361  001EDA  5105               	movf	(??_pin_write_value+2)& (0+255),w,b
  5362  001EDC  16DF               	andwf	indf2,f,c
  5363  001EDE  EF86  F00F         	goto	l5721
  5364  001EE2                     l5719:
  5365                           
  5366                           ; BSR set to: 1
  5367  001EE2  5102               	movf	pin_write_value@value& (0+255),w,b
  5368  001EE4  6F03               	movwf	??_pin_write_value& (0+255),b
  5369  001EE6  6B04               	clrf	(??_pin_write_value+1)& (0+255),b
  5370                           
  5371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5372                           ; Switch size 1, requested type "simple"
  5373                           ; Number of cases is 1, Range of values is 0 to 0
  5374                           ; switch strategies available:
  5375                           ; Name         Instructions Cycles
  5376                           ; simple_byte            4     3 (average)
  5377                           ;	Chosen strategy is simple_byte
  5378  001EE8  5104               	movf	(??_pin_write_value+1)& (0+255),w,b
  5379  001EEA  0A00               	xorlw	0	; case 0
  5380  001EEC  B4D8               	btfsc	status,2,c
  5381  001EEE  EF7B  F00F         	goto	l7423
  5382  001EF2  EF0C  F00F         	goto	l5711
  5383  001EF6                     l7423:
  5384                           
  5385                           ; BSR set to: 1
  5386                           ; Switch size 1, requested type "simple"
  5387                           ; Number of cases is 2, Range of values is 0 to 1
  5388                           ; switch strategies available:
  5389                           ; Name         Instructions Cycles
  5390                           ; simple_byte            7     4 (average)
  5391                           ;	Chosen strategy is simple_byte
  5392  001EF6  5103               	movf	??_pin_write_value& (0+255),w,b
  5393  001EF8  0A00               	xorlw	0	; case 0
  5394  001EFA  B4D8               	btfsc	status,2,c
  5395  001EFC  EF3F  F00F         	goto	l5715
  5396  001F00  0A01               	xorlw	1	; case 1
  5397  001F02  B4D8               	btfsc	status,2,c
  5398  001F04  EF10  F00F         	goto	l5713
  5399  001F08  EF0C  F00F         	goto	l5711
  5400  001F0C                     l5721:
  5401                           
  5402                           ; BSR set to: 1
  5403                           ;MCAL/GPIO/gpio.c: 76:     return ret;
  5404  001F0C  5109               	movf	pin_write_value@ret& (0+255),w,b
  5405  001F0E                     
  5406                           ; BSR set to: 1
  5407  001F0E  0012               	return		;funcret
  5408  001F10                     __end_of_pin_write_value:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _Timer1_init *****************
  5412 ;; Defined at:
  5413 ;;		line 4 in file "MCAL/temp_timer1/timer1.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 18
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_main
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text25
  5442  0039A2                     __ptext25:
  5443                           	callstack 0
  5444  0039A2                     _Timer1_init:
  5445                           	callstack 12
  5446  0039A2                     
  5447                           ;MCAL/temp_timer1/timer1.c: 6:     OSCCON=0x72;
  5448  0039A2  0E72               	movlw	114
  5449  0039A4  6ED3               	movwf	211,c	;volatile
  5450  0039A6  0012               	return		;funcret
  5451  0039A8                     __end_of_Timer1_init:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function _Interrupt_INTx_Init *****************
  5455 ;; Defined at:
  5456 ;;		line 23 in file "MCAL/INTERRUPT/external_interrupt.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  int_obj         2   14[BANK1 ] PTR const struct .
  5459 ;;		 -> int_t(6), 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  ret             1   16[BANK1 ] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      unsigned char 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        3 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 20
  5478 ;; This function calls:
  5479 ;;		_INTX_clear_flag
  5480 ;;		_INTX_disable
  5481 ;;		_INTX_enable
  5482 ;;		_INTX_interrupt_handle
  5483 ;;		_INTX_pin_init
  5484 ;;		_INTX_select_edge
  5485 ;; This function is called by:
  5486 ;;		_main
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text26
  5491  00355E                     __ptext26:
  5492                           	callstack 0
  5493  00355E                     _Interrupt_INTx_Init:
  5494                           	callstack 10
  5495  00355E                     
  5496                           ;MCAL/INTERRUPT/external_interrupt.c: 26:     if(((void*)0)== int_obj)
  5497  00355E  0101               	movlb	1	; () banked
  5498  003560  510E               	movf	Interrupt_INTx_Init@int_obj& (0+255),w,b
  5499  003562  110F               	iorwf	(Interrupt_INTx_Init@int_obj+1)& (0+255),w,b
  5500  003564  A4D8               	btfss	status,2,c
  5501  003566  EFB7  F01A         	goto	u5451
  5502  00356A  EFB9  F01A         	goto	u5450
  5503  00356E                     u5451:
  5504  00356E  EFBB  F01A         	goto	l6583
  5505  003572                     u5450:
  5506  003572                     
  5507                           ; BSR set to: 1
  5508                           ;MCAL/INTERRUPT/external_interrupt.c: 29:     }
  5509  003572  EFE3  F01A         	goto	l450
  5510  003576                     l6583:
  5511                           
  5512                           ; BSR set to: 1
  5513                           ;MCAL/INTERRUPT/external_interrupt.c: 31:     {;MCAL/INTERRUPT/external_interrupt.c: 32:
      +                                   ret=INTX_disable(int_obj);
  5514  003576  C10E  F100         	movff	Interrupt_INTx_Init@int_obj,INTX_disable@int_obj
  5515  00357A  C10F  F101         	movff	Interrupt_INTx_Init@int_obj+1,INTX_disable@int_obj+1
  5516  00357E  EC8F  F019         	call	_INTX_disable	;wreg free
  5517  003582  0101               	movlb	1	; () banked
  5518  003584  6F10               	movwf	Interrupt_INTx_Init@ret& (0+255),b
  5519                           
  5520                           ;MCAL/INTERRUPT/external_interrupt.c: 33:         ret=INTX_select_edge(int_obj);
  5521  003586  C10E  F100         	movff	Interrupt_INTx_Init@int_obj,INTX_select_edge@int_obj
  5522  00358A  C10F  F101         	movff	Interrupt_INTx_Init@int_obj+1,INTX_select_edge@int_obj+1
  5523  00358E  ECDB  F011         	call	_INTX_select_edge	;wreg free
  5524  003592  0101               	movlb	1	; () banked
  5525  003594  6F10               	movwf	Interrupt_INTx_Init@ret& (0+255),b
  5526  003596                     
  5527                           ; BSR set to: 1
  5528  003596  C10E  F109         	movff	Interrupt_INTx_Init@int_obj,INTX_pin_init@int_obj
  5529  00359A  C10F  F10A         	movff	Interrupt_INTx_Init@int_obj+1,INTX_pin_init@int_obj+1
  5530  00359E  EC00  F015         	call	_INTX_pin_init	;wreg free
  5531  0035A2  C10E  F100         	movff	Interrupt_INTx_Init@int_obj,INTX_clear_flag@int_obj
  5532  0035A6  C10F  F101         	movff	Interrupt_INTx_Init@int_obj+1,INTX_clear_flag@int_obj+1
  5533  0035AA  ECC9  F019         	call	_INTX_clear_flag	;wreg free
  5534  0035AE  C10E  F100         	movff	Interrupt_INTx_Init@int_obj,INTX_interrupt_handle@int_obj
  5535  0035B2  C10F  F101         	movff	Interrupt_INTx_Init@int_obj+1,INTX_interrupt_handle@int_obj+1
  5536  0035B6  EC50  F015         	call	_INTX_interrupt_handle	;wreg free
  5537  0035BA  C10E  F100         	movff	Interrupt_INTx_Init@int_obj,INTX_enable@int_obj
  5538  0035BE  C10F  F101         	movff	Interrupt_INTx_Init@int_obj+1,INTX_enable@int_obj+1
  5539  0035C2  ECE0  F013         	call	_INTX_enable	;wreg free
  5540  0035C6                     l450:
  5541  0035C6  0012               	return		;funcret
  5542  0035C8                     __end_of_Interrupt_INTx_Init:
  5543                           	callstack 0
  5544                           
  5545 ;; *************** function _INTX_select_edge *****************
  5546 ;; Defined at:
  5547 ;;		line 151 in file "MCAL/INTERRUPT/external_interrupt.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  int_obj         2    0[BANK1 ] PTR const struct .
  5550 ;;		 -> int_t(6), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  ret             1    4[BANK1 ] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      unsigned char 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5562 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;Total ram usage:        5 bytes
  5567 ;; Hardware stack levels used: 1
  5568 ;; Hardware stack levels required when called: 18
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_Interrupt_INTx_Init
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text27
  5577  0023B6                     __ptext27:
  5578                           	callstack 0
  5579  0023B6                     _INTX_select_edge:
  5580                           	callstack 11
  5581  0023B6                     
  5582                           ;MCAL/INTERRUPT/external_interrupt.c: 151: static Std_ReturnType INTX_select_edge(const 
      +                          INTX_config *int_obj);MCAL/INTERRUPT/external_interrupt.c: 152: {;MCAL/INTERRUPT/externa
      +                          l_interrupt.c: 153:     Std_ReturnType ret=(Std_ReturnType)0x01;
  5583  0023B6  0E01               	movlw	1
  5584  0023B8  0101               	movlb	1	; () banked
  5585  0023BA  6F04               	movwf	INTX_select_edge@ret& (0+255),b
  5586  0023BC                     
  5587                           ; BSR set to: 1
  5588                           ;MCAL/INTERRUPT/external_interrupt.c: 154:     if(((void*)0)== int_obj)
  5589  0023BC  5100               	movf	INTX_select_edge@int_obj& (0+255),w,b
  5590  0023BE  1101               	iorwf	(INTX_select_edge@int_obj+1)& (0+255),w,b
  5591  0023C0  A4D8               	btfss	status,2,c
  5592  0023C2  EFE5  F011         	goto	u5121
  5593  0023C6  EFE7  F011         	goto	u5120
  5594  0023CA                     u5121:
  5595  0023CA  EF27  F012         	goto	l6261
  5596  0023CE                     u5120:
  5597  0023CE                     
  5598                           ; BSR set to: 1
  5599                           ;MCAL/INTERRUPT/external_interrupt.c: 155:     {;MCAL/INTERRUPT/external_interrupt.c: 15
      +                          6:         ret=(Std_ReturnType)0x00;
  5600  0023CE  0E00               	movlw	0
  5601  0023D0  6F04               	movwf	INTX_select_edge@ret& (0+255),b
  5602                           
  5603                           ;MCAL/INTERRUPT/external_interrupt.c: 157:     }
  5604  0023D2  EF46  F012         	goto	l6263
  5605  0023D6                     l6247:
  5606                           
  5607                           ; BSR set to: 1
  5608                           ;MCAL/INTERRUPT/external_interrupt.c: 163:                 if(int_obj->edge==RISING_EDGE
      +                          )
  5609  0023D6  EE20 F003          	lfsr	2,3
  5610  0023DA  5100               	movf	INTX_select_edge@int_obj& (0+255),w,b
  5611  0023DC  26D9               	addwf	fsr2l,f,c
  5612  0023DE  5101               	movf	(INTX_select_edge@int_obj+1)& (0+255),w,b
  5613  0023E0  22DA               	addwfc	fsr2h,f,c
  5614  0023E2  04DE               	decf	postinc2,w,c
  5615  0023E4  A4D8               	btfss	status,2,c
  5616  0023E6  EFF7  F011         	goto	u5131
  5617  0023EA  EFF9  F011         	goto	u5130
  5618  0023EE                     u5131:
  5619  0023EE  EFFC  F011         	goto	l481
  5620  0023F2                     u5130:
  5621  0023F2                     
  5622                           ; BSR set to: 1
  5623                           ;MCAL/INTERRUPT/external_interrupt.c: 164:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 165:                     INTCON2bits.INTEDG0=1;
  5624  0023F2  8CF1               	bsf	241,6,c	;volatile
  5625                           
  5626                           ;MCAL/INTERRUPT/external_interrupt.c: 166:                 }
  5627  0023F4  EF46  F012         	goto	l6263
  5628  0023F8                     l481:
  5629                           
  5630                           ; BSR set to: 1
  5631                           ;MCAL/INTERRUPT/external_interrupt.c: 168:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 169:                     INTCON2bits.INTEDG0=0;
  5632  0023F8  9CF1               	bcf	241,6,c	;volatile
  5633  0023FA  EF46  F012         	goto	l6263
  5634  0023FE                     l6251:
  5635                           
  5636                           ; BSR set to: 1
  5637                           ;MCAL/INTERRUPT/external_interrupt.c: 173:                 if(int_obj->edge==RISING_EDGE
      +                          )
  5638  0023FE  EE20 F003          	lfsr	2,3
  5639  002402  5100               	movf	INTX_select_edge@int_obj& (0+255),w,b
  5640  002404  26D9               	addwf	fsr2l,f,c
  5641  002406  5101               	movf	(INTX_select_edge@int_obj+1)& (0+255),w,b
  5642  002408  22DA               	addwfc	fsr2h,f,c
  5643  00240A  04DE               	decf	postinc2,w,c
  5644  00240C  A4D8               	btfss	status,2,c
  5645  00240E  EF0B  F012         	goto	u5141
  5646  002412  EF0D  F012         	goto	u5140
  5647  002416                     u5141:
  5648  002416  EF10  F012         	goto	l485
  5649  00241A                     u5140:
  5650  00241A                     
  5651                           ; BSR set to: 1
  5652                           ;MCAL/INTERRUPT/external_interrupt.c: 174:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 175:                     INTCON2bits.INTEDG1=1;
  5653  00241A  8AF1               	bsf	241,5,c	;volatile
  5654                           
  5655                           ;MCAL/INTERRUPT/external_interrupt.c: 176:                 }
  5656  00241C  EF46  F012         	goto	l6263
  5657  002420                     l485:
  5658                           
  5659                           ; BSR set to: 1
  5660                           ;MCAL/INTERRUPT/external_interrupt.c: 178:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 179:                     INTCON2bits.INTEDG1=0;
  5661  002420  9AF1               	bcf	241,5,c	;volatile
  5662  002422  EF46  F012         	goto	l6263
  5663  002426                     l6255:
  5664                           
  5665                           ; BSR set to: 1
  5666                           ;MCAL/INTERRUPT/external_interrupt.c: 183:                 if(int_obj->edge==RISING_EDGE
      +                          )
  5667  002426  EE20 F003          	lfsr	2,3
  5668  00242A  5100               	movf	INTX_select_edge@int_obj& (0+255),w,b
  5669  00242C  26D9               	addwf	fsr2l,f,c
  5670  00242E  5101               	movf	(INTX_select_edge@int_obj+1)& (0+255),w,b
  5671  002430  22DA               	addwfc	fsr2h,f,c
  5672  002432  04DE               	decf	postinc2,w,c
  5673  002434  A4D8               	btfss	status,2,c
  5674  002436  EF1F  F012         	goto	u5151
  5675  00243A  EF21  F012         	goto	u5150
  5676  00243E                     u5151:
  5677  00243E  EF24  F012         	goto	l488
  5678  002442                     u5150:
  5679  002442                     
  5680                           ; BSR set to: 1
  5681                           ;MCAL/INTERRUPT/external_interrupt.c: 184:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 185:                     INTCON2bits.INTEDG2=1;
  5682  002442  88F1               	bsf	241,4,c	;volatile
  5683                           
  5684                           ;MCAL/INTERRUPT/external_interrupt.c: 186:                 }
  5685  002444  EF46  F012         	goto	l6263
  5686  002448                     l488:
  5687                           
  5688                           ; BSR set to: 1
  5689                           ;MCAL/INTERRUPT/external_interrupt.c: 188:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 189:                     INTCON2bits.INTEDG2=0;
  5690  002448  98F1               	bcf	241,4,c	;volatile
  5691  00244A  EF46  F012         	goto	l6263
  5692  00244E                     l6261:
  5693                           
  5694                           ; BSR set to: 1
  5695  00244E  EE20 F004          	lfsr	2,4
  5696  002452  5100               	movf	INTX_select_edge@int_obj& (0+255),w,b
  5697  002454  26D9               	addwf	fsr2l,f,c
  5698  002456  5101               	movf	(INTX_select_edge@int_obj+1)& (0+255),w,b
  5699  002458  22DA               	addwfc	fsr2h,f,c
  5700  00245A  50DF               	movf	indf2,w,c
  5701  00245C  6F02               	movwf	??_INTX_select_edge& (0+255),b
  5702  00245E  6B03               	clrf	(??_INTX_select_edge+1)& (0+255),b
  5703                           
  5704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5705                           ; Switch size 1, requested type "simple"
  5706                           ; Number of cases is 1, Range of values is 0 to 0
  5707                           ; switch strategies available:
  5708                           ; Name         Instructions Cycles
  5709                           ; simple_byte            4     3 (average)
  5710                           ;	Chosen strategy is simple_byte
  5711  002460  5103               	movf	(??_INTX_select_edge+1)& (0+255),w,b
  5712  002462  0A00               	xorlw	0	; case 0
  5713  002464  B4D8               	btfsc	status,2,c
  5714  002466  EF37  F012         	goto	l7425
  5715  00246A  EF46  F012         	goto	l6263
  5716  00246E                     l7425:
  5717                           
  5718                           ; BSR set to: 1
  5719                           ; Switch size 1, requested type "simple"
  5720                           ; Number of cases is 3, Range of values is 0 to 2
  5721                           ; switch strategies available:
  5722                           ; Name         Instructions Cycles
  5723                           ; simple_byte           10     6 (average)
  5724                           ;	Chosen strategy is simple_byte
  5725  00246E  5102               	movf	??_INTX_select_edge& (0+255),w,b
  5726  002470  0A00               	xorlw	0	; case 0
  5727  002472  B4D8               	btfsc	status,2,c
  5728  002474  EFEB  F011         	goto	l6247
  5729  002478  0A01               	xorlw	1	; case 1
  5730  00247A  B4D8               	btfsc	status,2,c
  5731  00247C  EFFF  F011         	goto	l6251
  5732  002480  0A03               	xorlw	3	; case 2
  5733  002482  B4D8               	btfsc	status,2,c
  5734  002484  EF13  F012         	goto	l6255
  5735  002488  EF46  F012         	goto	l6263
  5736  00248C                     l6263:
  5737                           
  5738                           ; BSR set to: 1
  5739                           ;MCAL/INTERRUPT/external_interrupt.c: 194:     return ret;
  5740  00248C  5104               	movf	INTX_select_edge@ret& (0+255),w,b
  5741  00248E                     
  5742                           ; BSR set to: 1
  5743  00248E  0012               	return		;funcret
  5744  002490                     __end_of_INTX_select_edge:
  5745                           	callstack 0
  5746                           
  5747 ;; *************** function _INTX_pin_init *****************
  5748 ;; Defined at:
  5749 ;;		line 230 in file "MCAL/INTERRUPT/external_interrupt.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  int_obj         2    9[BANK1 ] PTR const struct .
  5752 ;;		 -> int_t(6), 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  ret             1   13[BANK1 ] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      unsigned char 
  5757 ;; Registers used:
  5758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5764 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;Total ram usage:        5 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 19
  5771 ;; This function calls:
  5772 ;;		_pin_directoin_intialize
  5773 ;; This function is called by:
  5774 ;;		_Interrupt_INTx_Init
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text28
  5779  002A00                     __ptext28:
  5780                           	callstack 0
  5781  002A00                     _INTX_pin_init:
  5782                           	callstack 10
  5783  002A00                     
  5784                           ;MCAL/INTERRUPT/external_interrupt.c: 230: static Std_ReturnType INTX_pin_init(const INT
      +                          X_config *int_obj);MCAL/INTERRUPT/external_interrupt.c: 231: {;MCAL/INTERRUPT/external_i
      +                          nterrupt.c: 232:     Std_ReturnType ret=(Std_ReturnType)0x01;
  5785  002A00  0E01               	movlw	1
  5786  002A02  0101               	movlb	1	; () banked
  5787  002A04  6F0D               	movwf	INTX_pin_init@ret& (0+255),b
  5788  002A06                     
  5789                           ; BSR set to: 1
  5790                           ;MCAL/INTERRUPT/external_interrupt.c: 233:     if(((void*)0)== int_obj)
  5791  002A06  5109               	movf	INTX_pin_init@int_obj& (0+255),w,b
  5792  002A08  110A               	iorwf	(INTX_pin_init@int_obj+1)& (0+255),w,b
  5793  002A0A  A4D8               	btfss	status,2,c
  5794  002A0C  EF0A  F015         	goto	u5161
  5795  002A10  EF0C  F015         	goto	u5160
  5796  002A14                     u5161:
  5797  002A14  EF2E  F015         	goto	l6285
  5798  002A18                     u5160:
  5799  002A18                     
  5800                           ; BSR set to: 1
  5801                           ;MCAL/INTERRUPT/external_interrupt.c: 234:     {;MCAL/INTERRUPT/external_interrupt.c: 23
      +                          5:         ret=(Std_ReturnType)0x00;
  5802  002A18  0E00               	movlw	0
  5803  002A1A  6F0D               	movwf	INTX_pin_init@ret& (0+255),b
  5804                           
  5805                           ;MCAL/INTERRUPT/external_interrupt.c: 236:     }
  5806  002A1C  EF4D  F015         	goto	l6287
  5807  002A20                     l6277:
  5808                           
  5809                           ; BSR set to: 1
  5810                           ;MCAL/INTERRUPT/external_interrupt.c: 242:               pin_directoin_intialize(&(int_o
      +                          bj->pin));
  5811  002A20  0E05               	movlw	5
  5812  002A22  2509               	addwf	INTX_pin_init@int_obj& (0+255),w,b
  5813  002A24  6F00               	movwf	pin_directoin_intialize@pin& (0+255),b
  5814  002A26  0E00               	movlw	0
  5815  002A28  210A               	addwfc	(INTX_pin_init@int_obj+1)& (0+255),w,b
  5816  002A2A  6F01               	movwf	(pin_directoin_intialize@pin+1)& (0+255),b
  5817  002A2C  ECA9  F00D         	call	_pin_directoin_intialize	;wreg free
  5818                           
  5819                           ;MCAL/INTERRUPT/external_interrupt.c: 243:                break;
  5820  002A30  EF4D  F015         	goto	l6287
  5821  002A34                     l6279:
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;MCAL/INTERRUPT/external_interrupt.c: 245:                pin_directoin_intialize(&(int_
      +                          obj->pin));
  5825  002A34  0E05               	movlw	5
  5826  002A36  2509               	addwf	INTX_pin_init@int_obj& (0+255),w,b
  5827  002A38  6F00               	movwf	pin_directoin_intialize@pin& (0+255),b
  5828  002A3A  0E00               	movlw	0
  5829  002A3C  210A               	addwfc	(INTX_pin_init@int_obj+1)& (0+255),w,b
  5830  002A3E  6F01               	movwf	(pin_directoin_intialize@pin+1)& (0+255),b
  5831  002A40  ECA9  F00D         	call	_pin_directoin_intialize	;wreg free
  5832                           
  5833                           ;MCAL/INTERRUPT/external_interrupt.c: 246:                break;
  5834  002A44  EF4D  F015         	goto	l6287
  5835  002A48                     l6281:
  5836                           
  5837                           ; BSR set to: 1
  5838                           ;MCAL/INTERRUPT/external_interrupt.c: 248:                 pin_directoin_intialize(&(int
      +                          _obj->pin));
  5839  002A48  0E05               	movlw	5
  5840  002A4A  2509               	addwf	INTX_pin_init@int_obj& (0+255),w,b
  5841  002A4C  6F00               	movwf	pin_directoin_intialize@pin& (0+255),b
  5842  002A4E  0E00               	movlw	0
  5843  002A50  210A               	addwfc	(INTX_pin_init@int_obj+1)& (0+255),w,b
  5844  002A52  6F01               	movwf	(pin_directoin_intialize@pin+1)& (0+255),b
  5845  002A54  ECA9  F00D         	call	_pin_directoin_intialize	;wreg free
  5846                           
  5847                           ;MCAL/INTERRUPT/external_interrupt.c: 249:                break;
  5848  002A58  EF4D  F015         	goto	l6287
  5849  002A5C                     l6285:
  5850                           
  5851                           ; BSR set to: 1
  5852  002A5C  EE20 F004          	lfsr	2,4
  5853  002A60  5109               	movf	INTX_pin_init@int_obj& (0+255),w,b
  5854  002A62  26D9               	addwf	fsr2l,f,c
  5855  002A64  510A               	movf	(INTX_pin_init@int_obj+1)& (0+255),w,b
  5856  002A66  22DA               	addwfc	fsr2h,f,c
  5857  002A68  50DF               	movf	indf2,w,c
  5858  002A6A  6F0B               	movwf	??_INTX_pin_init& (0+255),b
  5859  002A6C  6B0C               	clrf	(??_INTX_pin_init+1)& (0+255),b
  5860                           
  5861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5862                           ; Switch size 1, requested type "simple"
  5863                           ; Number of cases is 1, Range of values is 0 to 0
  5864                           ; switch strategies available:
  5865                           ; Name         Instructions Cycles
  5866                           ; simple_byte            4     3 (average)
  5867                           ;	Chosen strategy is simple_byte
  5868  002A6E  510C               	movf	(??_INTX_pin_init+1)& (0+255),w,b
  5869  002A70  0A00               	xorlw	0	; case 0
  5870  002A72  B4D8               	btfsc	status,2,c
  5871  002A74  EF3E  F015         	goto	l7427
  5872  002A78  EF4D  F015         	goto	l6287
  5873  002A7C                     l7427:
  5874                           
  5875                           ; BSR set to: 1
  5876                           ; Switch size 1, requested type "simple"
  5877                           ; Number of cases is 3, Range of values is 0 to 2
  5878                           ; switch strategies available:
  5879                           ; Name         Instructions Cycles
  5880                           ; simple_byte           10     6 (average)
  5881                           ;	Chosen strategy is simple_byte
  5882  002A7C  510B               	movf	??_INTX_pin_init& (0+255),w,b
  5883  002A7E  0A00               	xorlw	0	; case 0
  5884  002A80  B4D8               	btfsc	status,2,c
  5885  002A82  EF10  F015         	goto	l6277
  5886  002A86  0A01               	xorlw	1	; case 1
  5887  002A88  B4D8               	btfsc	status,2,c
  5888  002A8A  EF1A  F015         	goto	l6279
  5889  002A8E  0A03               	xorlw	3	; case 2
  5890  002A90  B4D8               	btfsc	status,2,c
  5891  002A92  EF24  F015         	goto	l6281
  5892  002A96  EF4D  F015         	goto	l6287
  5893  002A9A                     l6287:
  5894                           
  5895                           ;MCAL/INTERRUPT/external_interrupt.c: 253:     return ret;
  5896  002A9A  0101               	movlb	1	; () banked
  5897  002A9C  510D               	movf	INTX_pin_init@ret& (0+255),w,b
  5898  002A9E                     
  5899                           ; BSR set to: 1
  5900  002A9E  0012               	return		;funcret
  5901  002AA0                     __end_of_INTX_pin_init:
  5902                           	callstack 0
  5903                           
  5904 ;; *************** function _pin_directoin_intialize *****************
  5905 ;; Defined at:
  5906 ;;		line 15 in file "MCAL/GPIO/gpio.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  pin             2    0[BANK1 ] PTR const struct .
  5909 ;;		 -> lcd._4_bit(4), lcd(6), int_t(6), relay_init@relay_status(1), 
  5910 ;;		 -> led_init@led_x(1), 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  ret             1    8[BANK1 ] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      unsigned char 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5922 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;Total ram usage:        9 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 18
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_lcd_4_bit_init
  5933 ;;		_INTX_pin_init
  5934 ;;		_segment_init
  5935 ;;		_motor_init
  5936 ;;		_keypad_init
  5937 ;;		_lcd_8_bit_init
  5938 ;;		_led_init
  5939 ;;		_relay_init
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text29
  5944  001B52                     __ptext29:
  5945                           	callstack 0
  5946  001B52                     _pin_directoin_intialize:
  5947                           	callstack 11
  5948  001B52                     
  5949                           ;MCAL/GPIO/gpio.c: 15: Std_ReturnType pin_directoin_intialize(const pin_config *pin);MCA
      +                          L/GPIO/gpio.c: 16: {;MCAL/GPIO/gpio.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x01
      +                          ;
  5950  001B52  0E01               	movlw	1
  5951  001B54  0101               	movlb	1	; () banked
  5952  001B56  6F08               	movwf	pin_directoin_intialize@ret& (0+255),b
  5953  001B58                     
  5954                           ; BSR set to: 1
  5955                           ;MCAL/GPIO/gpio.c: 18:     if(((void*)0) == pin || pin->pin > 8 -1){
  5956  001B58  5100               	movf	pin_directoin_intialize@pin& (0+255),w,b
  5957  001B5A  1101               	iorwf	(pin_directoin_intialize@pin+1)& (0+255),w,b
  5958  001B5C  B4D8               	btfsc	status,2,c
  5959  001B5E  EFB3  F00D         	goto	u4931
  5960  001B62  EFB5  F00D         	goto	u4930
  5961  001B66                     u4931:
  5962  001B66  EFC6  F00D         	goto	l6059
  5963  001B6A                     u4930:
  5964  001B6A                     
  5965                           ; BSR set to: 1
  5966  001B6A  C100  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
  5967  001B6E  C101  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
  5968  001B72  30DF               	rrcf	223,w,c
  5969  001B74  32E8               	rrcf	wreg,f,c
  5970  001B76  32E8               	rrcf	wreg,f,c
  5971  001B78  0B07               	andlw	7
  5972  001B7A  6F02               	movwf	??_pin_directoin_intialize& (0+255),b
  5973  001B7C  0E07               	movlw	7
  5974  001B7E  6502               	cpfsgt	??_pin_directoin_intialize& (0+255),b
  5975  001B80  EFC4  F00D         	goto	u4941
  5976  001B84  EFC6  F00D         	goto	u4940
  5977  001B88                     u4941:
  5978  001B88  EF2B  F00E         	goto	l6067
  5979  001B8C                     u4940:
  5980  001B8C                     l6059:
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;MCAL/GPIO/gpio.c: 19:         ret = (Std_ReturnType)0x00;
  5984  001B8C  0E00               	movlw	0
  5985  001B8E  6F08               	movwf	pin_directoin_intialize@ret& (0+255),b
  5986                           
  5987                           ;MCAL/GPIO/gpio.c: 20:     }
  5988  001B90  EF4C  F00E         	goto	l6069
  5989  001B94                     l6061:
  5990                           
  5991                           ; BSR set to: 1
  5992  001B94  C100  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
  5993  001B98  C101  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
  5994  001B9C  30DF               	rrcf	223,w,c
  5995  001B9E  32E8               	rrcf	wreg,f,c
  5996  001BA0  32E8               	rrcf	wreg,f,c
  5997  001BA2  0B07               	andlw	7
  5998  001BA4  6F02               	movwf	??_pin_directoin_intialize& (0+255),b
  5999  001BA6  0E01               	movlw	1
  6000  001BA8  6F03               	movwf	(??_pin_directoin_intialize+1)& (0+255),b
  6001  001BAA  2B02               	incf	??_pin_directoin_intialize& (0+255),f,b
  6002  001BAC  EFDA  F00D         	goto	u4954
  6003  001BB0                     u4955:
  6004  001BB0  90D8               	bcf	status,0,c
  6005  001BB2  3703               	rlcf	(??_pin_directoin_intialize+1)& (0+255),f,b
  6006  001BB4                     u4954:
  6007  001BB4  2F02               	decfsz	??_pin_directoin_intialize& (0+255),f,b
  6008  001BB6  EFD8  F00D         	goto	u4955
  6009  001BBA  C100  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
  6010  001BBE  C101  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
  6011  001BC2  50DF               	movf	223,w,c
  6012  001BC4  0B07               	andlw	7
  6013  001BC6  0101               	movlb	1	; () banked
  6014  001BC8  6F04               	movwf	(??_pin_directoin_intialize+2)& (0+255),b
  6015  001BCA  5104               	movf	(??_pin_directoin_intialize+2)& (0+255),w,b
  6016  001BCC  0D02               	mullw	2
  6017  001BCE  0EBE               	movlw	low _TRIS_array
  6018  001BD0  24F3               	addwf	243,w,c
  6019  001BD2  6ED9               	movwf	fsr2l,c
  6020  001BD4  0E00               	movlw	high _TRIS_array
  6021  001BD6  20F4               	addwfc	prodh,w,c
  6022  001BD8  6EDA               	movwf	fsr2h,c
  6023  001BDA  CFDE F105          	movff	postinc2,??_pin_directoin_intialize+3
  6024  001BDE  CFDD F106          	movff	postdec2,??_pin_directoin_intialize+4
  6025  001BE2  C105  FFD9         	movff	??_pin_directoin_intialize+3,fsr2l
  6026  001BE6  C106  FFDA         	movff	??_pin_directoin_intialize+4,fsr2h
  6027  001BEA  5103               	movf	(??_pin_directoin_intialize+1)& (0+255),w,b
  6028  001BEC  12DF               	iorwf	indf2,f,c
  6029  001BEE  EF4C  F00E         	goto	l6069
  6030  001BF2                     l6063:
  6031                           
  6032                           ; BSR set to: 1
  6033  001BF2  C100  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
  6034  001BF6  C101  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
  6035  001BFA  30DF               	rrcf	223,w,c
  6036  001BFC  32E8               	rrcf	wreg,f,c
  6037  001BFE  32E8               	rrcf	wreg,f,c
  6038  001C00  0B07               	andlw	7
  6039  001C02  6F02               	movwf	??_pin_directoin_intialize& (0+255),b
  6040  001C04  0E01               	movlw	1
  6041  001C06  6F03               	movwf	(??_pin_directoin_intialize+1)& (0+255),b
  6042  001C08  2B02               	incf	??_pin_directoin_intialize& (0+255),f,b
  6043  001C0A  EF09  F00E         	goto	u4964
  6044  001C0E                     u4965:
  6045  001C0E  90D8               	bcf	status,0,c
  6046  001C10  3703               	rlcf	(??_pin_directoin_intialize+1)& (0+255),f,b
  6047  001C12                     u4964:
  6048  001C12  2F02               	decfsz	??_pin_directoin_intialize& (0+255),f,b
  6049  001C14  EF07  F00E         	goto	u4965
  6050  001C18  0101               	movlb	1	; () banked
  6051  001C1A  5103               	movf	(??_pin_directoin_intialize+1)& (0+255),w,b
  6052  001C1C  0AFF               	xorlw	255
  6053  001C1E  6F04               	movwf	(??_pin_directoin_intialize+2)& (0+255),b
  6054  001C20  C100  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
  6055  001C24  C101  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
  6056  001C28  50DF               	movf	223,w,c
  6057  001C2A  0B07               	andlw	7
  6058  001C2C  6F05               	movwf	(??_pin_directoin_intialize+3)& (0+255),b
  6059  001C2E  5105               	movf	(??_pin_directoin_intialize+3)& (0+255),w,b
  6060  001C30  0D02               	mullw	2
  6061  001C32  0EBE               	movlw	low _TRIS_array
  6062  001C34  24F3               	addwf	243,w,c
  6063  001C36  6ED9               	movwf	fsr2l,c
  6064  001C38  0E00               	movlw	high _TRIS_array
  6065  001C3A  20F4               	addwfc	prodh,w,c
  6066  001C3C  6EDA               	movwf	fsr2h,c
  6067  001C3E  CFDE F106          	movff	postinc2,??_pin_directoin_intialize+4
  6068  001C42  CFDD F107          	movff	postdec2,??_pin_directoin_intialize+5
  6069  001C46  C106  FFD9         	movff	??_pin_directoin_intialize+4,fsr2l
  6070  001C4A  C107  FFDA         	movff	??_pin_directoin_intialize+5,fsr2h
  6071  001C4E  5104               	movf	(??_pin_directoin_intialize+2)& (0+255),w,b
  6072  001C50  16DF               	andwf	indf2,f,c
  6073  001C52  EF4C  F00E         	goto	l6069
  6074  001C56                     l6067:
  6075                           
  6076                           ; BSR set to: 1
  6077  001C56  C100  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
  6078  001C5A  C101  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
  6079  001C5E  BCDF               	btfsc	indf2,6,c
  6080  001C60  EF34  F00E         	goto	u4971
  6081  001C64  EF37  F00E         	goto	u4970
  6082  001C68                     u4971:
  6083  001C68  0E01               	movlw	1
  6084  001C6A  EF38  F00E         	goto	u4980
  6085  001C6E                     u4970:
  6086  001C6E  0E00               	movlw	0
  6087  001C70                     u4980:
  6088  001C70  6F02               	movwf	??_pin_directoin_intialize& (0+255),b
  6089  001C72  6B03               	clrf	(??_pin_directoin_intialize+1)& (0+255),b
  6090                           
  6091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6092                           ; Switch size 1, requested type "simple"
  6093                           ; Number of cases is 1, Range of values is 0 to 0
  6094                           ; switch strategies available:
  6095                           ; Name         Instructions Cycles
  6096                           ; simple_byte            4     3 (average)
  6097                           ;	Chosen strategy is simple_byte
  6098  001C74  5103               	movf	(??_pin_directoin_intialize+1)& (0+255),w,b
  6099  001C76  0A00               	xorlw	0	; case 0
  6100  001C78  B4D8               	btfsc	status,2,c
  6101  001C7A  EF41  F00E         	goto	l7429
  6102  001C7E  EFC6  F00D         	goto	l6059
  6103  001C82                     l7429:
  6104                           
  6105                           ; BSR set to: 1
  6106                           ; Switch size 1, requested type "simple"
  6107                           ; Number of cases is 2, Range of values is 0 to 1
  6108                           ; switch strategies available:
  6109                           ; Name         Instructions Cycles
  6110                           ; simple_byte            7     4 (average)
  6111                           ;	Chosen strategy is simple_byte
  6112  001C82  5102               	movf	??_pin_directoin_intialize& (0+255),w,b
  6113  001C84  0A00               	xorlw	0	; case 0
  6114  001C86  B4D8               	btfsc	status,2,c
  6115  001C88  EFF9  F00D         	goto	l6063
  6116  001C8C  0A01               	xorlw	1	; case 1
  6117  001C8E  B4D8               	btfsc	status,2,c
  6118  001C90  EFCA  F00D         	goto	l6061
  6119  001C94  EFC6  F00D         	goto	l6059
  6120  001C98                     l6069:
  6121                           
  6122                           ; BSR set to: 1
  6123                           ;MCAL/GPIO/gpio.c: 30:     return ret;
  6124  001C98  5108               	movf	pin_directoin_intialize@ret& (0+255),w,b
  6125  001C9A                     
  6126                           ; BSR set to: 1
  6127  001C9A  0012               	return		;funcret
  6128  001C9C                     __end_of_pin_directoin_intialize:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _INTX_interrupt_handle *****************
  6132 ;; Defined at:
  6133 ;;		line 289 in file "MCAL/INTERRUPT/external_interrupt.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  int_obj         2    0[BANK1 ] PTR const struct .
  6136 ;;		 -> int_t(6), 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  ret             1    4[BANK1 ] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      unsigned char 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6148 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;Total ram usage:        5 bytes
  6153 ;; Hardware stack levels used: 1
  6154 ;; Hardware stack levels required when called: 18
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_Interrupt_INTx_Init
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text30
  6163  002AA0                     __ptext30:
  6164                           	callstack 0
  6165  002AA0                     _INTX_interrupt_handle:
  6166                           	callstack 11
  6167  002AA0                     
  6168                           ;MCAL/INTERRUPT/external_interrupt.c: 289: static Std_ReturnType INTX_interrupt_handle(c
      +                          onst INTX_config *int_obj);MCAL/INTERRUPT/external_interrupt.c: 290: {;MCAL/INTERRUPT/ex
      +                          ternal_interrupt.c: 291:     Std_ReturnType ret=(Std_ReturnType)0x01;
  6169  002AA0  0E01               	movlw	1
  6170  002AA2  0101               	movlb	1	; () banked
  6171  002AA4  6F04               	movwf	INTX_interrupt_handle@ret& (0+255),b
  6172  002AA6                     
  6173                           ; BSR set to: 1
  6174                           ;MCAL/INTERRUPT/external_interrupt.c: 292:     if(((void*)0)== int_obj)
  6175  002AA6  5100               	movf	INTX_interrupt_handle@int_obj& (0+255),w,b
  6176  002AA8  1101               	iorwf	(INTX_interrupt_handle@int_obj+1)& (0+255),w,b
  6177  002AAA  A4D8               	btfss	status,2,c
  6178  002AAC  EF5A  F015         	goto	u5181
  6179  002AB0  EF5C  F015         	goto	u5180
  6180  002AB4                     u5181:
  6181  002AB4  EF7E  F015         	goto	l6331
  6182  002AB8                     u5180:
  6183  002AB8                     
  6184                           ; BSR set to: 1
  6185                           ;MCAL/INTERRUPT/external_interrupt.c: 293:     {;MCAL/INTERRUPT/external_interrupt.c: 29
      +                          4:         ret=(Std_ReturnType)0x00;
  6186  002AB8  0E00               	movlw	0
  6187  002ABA  6F04               	movwf	INTX_interrupt_handle@ret& (0+255),b
  6188                           
  6189                           ;MCAL/INTERRUPT/external_interrupt.c: 295:     }
  6190  002ABC  EF9D  F015         	goto	l6333
  6191  002AC0                     l6323:
  6192                           
  6193                           ; BSR set to: 1
  6194                           ;MCAL/INTERRUPT/external_interrupt.c: 301:                 int0_handler=int_obj->interru
      +                          pt_handler;
  6195  002AC0  C100  FFD9         	movff	INTX_interrupt_handle@int_obj,fsr2l
  6196  002AC4  C101  FFDA         	movff	INTX_interrupt_handle@int_obj+1,fsr2h
  6197  002AC8  CFDE F0D2          	movff	postinc2,_int0_handler
  6198  002ACC  CFDD F0D3          	movff	postdec2,_int0_handler+1
  6199                           
  6200                           ;MCAL/INTERRUPT/external_interrupt.c: 302:                 break;
  6201  002AD0  EF9D  F015         	goto	l6333
  6202  002AD4                     l6325:
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;MCAL/INTERRUPT/external_interrupt.c: 304:                 int1_handler=int_obj->interru
      +                          pt_handler;
  6206  002AD4  C100  FFD9         	movff	INTX_interrupt_handle@int_obj,fsr2l
  6207  002AD8  C101  FFDA         	movff	INTX_interrupt_handle@int_obj+1,fsr2h
  6208  002ADC  CFDE F0D0          	movff	postinc2,_int1_handler
  6209  002AE0  CFDD F0D1          	movff	postdec2,_int1_handler+1
  6210                           
  6211                           ;MCAL/INTERRUPT/external_interrupt.c: 305:                 break;
  6212  002AE4  EF9D  F015         	goto	l6333
  6213  002AE8                     l6327:
  6214                           
  6215                           ; BSR set to: 1
  6216                           ;MCAL/INTERRUPT/external_interrupt.c: 307:                 int2_handler=int_obj->interru
      +                          pt_handler;
  6217  002AE8  C100  FFD9         	movff	INTX_interrupt_handle@int_obj,fsr2l
  6218  002AEC  C101  FFDA         	movff	INTX_interrupt_handle@int_obj+1,fsr2h
  6219  002AF0  CFDE F0CE          	movff	postinc2,_int2_handler
  6220  002AF4  CFDD F0CF          	movff	postdec2,_int2_handler+1
  6221                           
  6222                           ;MCAL/INTERRUPT/external_interrupt.c: 308:                 break;
  6223  002AF8  EF9D  F015         	goto	l6333
  6224  002AFC                     l6331:
  6225                           
  6226                           ; BSR set to: 1
  6227  002AFC  EE20 F004          	lfsr	2,4
  6228  002B00  5100               	movf	INTX_interrupt_handle@int_obj& (0+255),w,b
  6229  002B02  26D9               	addwf	fsr2l,f,c
  6230  002B04  5101               	movf	(INTX_interrupt_handle@int_obj+1)& (0+255),w,b
  6231  002B06  22DA               	addwfc	fsr2h,f,c
  6232  002B08  50DF               	movf	indf2,w,c
  6233  002B0A  6F02               	movwf	??_INTX_interrupt_handle& (0+255),b
  6234  002B0C  6B03               	clrf	(??_INTX_interrupt_handle+1)& (0+255),b
  6235                           
  6236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6237                           ; Switch size 1, requested type "simple"
  6238                           ; Number of cases is 1, Range of values is 0 to 0
  6239                           ; switch strategies available:
  6240                           ; Name         Instructions Cycles
  6241                           ; simple_byte            4     3 (average)
  6242                           ;	Chosen strategy is simple_byte
  6243  002B0E  5103               	movf	(??_INTX_interrupt_handle+1)& (0+255),w,b
  6244  002B10  0A00               	xorlw	0	; case 0
  6245  002B12  B4D8               	btfsc	status,2,c
  6246  002B14  EF8E  F015         	goto	l7431
  6247  002B18  EF9D  F015         	goto	l6333
  6248  002B1C                     l7431:
  6249                           
  6250                           ; BSR set to: 1
  6251                           ; Switch size 1, requested type "simple"
  6252                           ; Number of cases is 3, Range of values is 0 to 2
  6253                           ; switch strategies available:
  6254                           ; Name         Instructions Cycles
  6255                           ; simple_byte           10     6 (average)
  6256                           ;	Chosen strategy is simple_byte
  6257  002B1C  5102               	movf	??_INTX_interrupt_handle& (0+255),w,b
  6258  002B1E  0A00               	xorlw	0	; case 0
  6259  002B20  B4D8               	btfsc	status,2,c
  6260  002B22  EF60  F015         	goto	l6323
  6261  002B26  0A01               	xorlw	1	; case 1
  6262  002B28  B4D8               	btfsc	status,2,c
  6263  002B2A  EF6A  F015         	goto	l6325
  6264  002B2E  0A03               	xorlw	3	; case 2
  6265  002B30  B4D8               	btfsc	status,2,c
  6266  002B32  EF74  F015         	goto	l6327
  6267  002B36  EF9D  F015         	goto	l6333
  6268  002B3A                     l6333:
  6269                           
  6270                           ; BSR set to: 1
  6271                           ;MCAL/INTERRUPT/external_interrupt.c: 311:     return ret;
  6272  002B3A  5104               	movf	INTX_interrupt_handle@ret& (0+255),w,b
  6273  002B3C                     
  6274                           ; BSR set to: 1
  6275  002B3C  0012               	return		;funcret
  6276  002B3E                     __end_of_INTX_interrupt_handle:
  6277                           	callstack 0
  6278                           
  6279 ;; *************** function _INTX_enable *****************
  6280 ;; Defined at:
  6281 ;;		line 77 in file "MCAL/INTERRUPT/external_interrupt.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  int_obj         2    0[BANK1 ] PTR const struct .
  6284 ;;		 -> int_t(6), 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  ret             1    4[BANK1 ] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      unsigned char 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6296 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;Total ram usage:        5 bytes
  6301 ;; Hardware stack levels used: 1
  6302 ;; Hardware stack levels required when called: 18
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_Interrupt_INTx_Init
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text31
  6311  0027C0                     __ptext31:
  6312                           	callstack 0
  6313  0027C0                     _INTX_enable:
  6314                           	callstack 11
  6315  0027C0                     
  6316                           ;MCAL/INTERRUPT/external_interrupt.c: 77: static Std_ReturnType INTX_enable(const INTX_c
      +                          onfig *int_obj);MCAL/INTERRUPT/external_interrupt.c: 78: {;MCAL/INTERRUPT/external_inter
      +                          rupt.c: 79:     Std_ReturnType ret=(Std_ReturnType)0x01;
  6317  0027C0  0E01               	movlw	1
  6318  0027C2  0101               	movlb	1	; () banked
  6319  0027C4  6F04               	movwf	INTX_enable@ret& (0+255),b
  6320  0027C6                     
  6321                           ; BSR set to: 1
  6322                           ;MCAL/INTERRUPT/external_interrupt.c: 80:     if(((void*)0)== int_obj)
  6323  0027C6  5100               	movf	INTX_enable@int_obj& (0+255),w,b
  6324  0027C8  1101               	iorwf	(INTX_enable@int_obj+1)& (0+255),w,b
  6325  0027CA  A4D8               	btfss	status,2,c
  6326  0027CC  EFEA  F013         	goto	u5191
  6327  0027D0  EFEC  F013         	goto	u5190
  6328  0027D4                     u5191:
  6329  0027D4  EF24  F014         	goto	l6359
  6330  0027D8                     u5190:
  6331  0027D8                     
  6332                           ; BSR set to: 1
  6333                           ;MCAL/INTERRUPT/external_interrupt.c: 81:     {;MCAL/INTERRUPT/external_interrupt.c: 82:
      +                                   ret=(Std_ReturnType)0x00;
  6334  0027D8  0E00               	movlw	0
  6335  0027DA  6F04               	movwf	INTX_enable@ret& (0+255),b
  6336                           
  6337                           ;MCAL/INTERRUPT/external_interrupt.c: 83:     }
  6338  0027DC  EF43  F014         	goto	l6361
  6339  0027E0                     l466:
  6340                           
  6341                           ; BSR set to: 1
  6342                           ;MCAL/INTERRUPT/external_interrupt.c: 90:                 RCONbits.IPEN=1 ;
  6343  0027E0  8ED0               	bsf	208,7,c	;volatile
  6344                           
  6345                           ;MCAL/INTERRUPT/external_interrupt.c: 95:                 INTCONbits.INT0IE=1 ;
  6346  0027E2  88F2               	bsf	242,4,c	;volatile
  6347                           
  6348                           ;MCAL/INTERRUPT/external_interrupt.c: 96:                 break;
  6349  0027E4  EF43  F014         	goto	l6361
  6350  0027E8                     l468:
  6351                           
  6352                           ; BSR set to: 1
  6353                           ;MCAL/INTERRUPT/external_interrupt.c: 100:                 RCONbits.IPEN=1;
  6354  0027E8  8ED0               	bsf	208,7,c	;volatile
  6355  0027EA                     
  6356                           ; BSR set to: 1
  6357                           ;MCAL/INTERRUPT/external_interrupt.c: 101:                 if(int_obj->Priority==HIGH_PR
      +                          IORITY)
  6358  0027EA  EE20 F002          	lfsr	2,2
  6359  0027EE  5100               	movf	INTX_enable@int_obj& (0+255),w,b
  6360  0027F0  26D9               	addwf	fsr2l,f,c
  6361  0027F2  5101               	movf	(INTX_enable@int_obj+1)& (0+255),w,b
  6362  0027F4  22DA               	addwfc	fsr2h,f,c
  6363  0027F6  04DE               	decf	postinc2,w,c
  6364  0027F8  A4D8               	btfss	status,2,c
  6365  0027FA  EF01  F014         	goto	u5201
  6366  0027FE  EF03  F014         	goto	u5200
  6367  002802                     u5201:
  6368  002802  EF07  F014         	goto	l469
  6369  002806                     u5200:
  6370  002806                     
  6371                           ; BSR set to: 1
  6372                           ;MCAL/INTERRUPT/external_interrupt.c: 102:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 104:                     INTCONbits.GIEH=1;
  6373  002806  8EF2               	bsf	242,7,c	;volatile
  6374                           
  6375                           ;MCAL/INTERRUPT/external_interrupt.c: 105:                     INTCON3bits.INT1IP=1;
  6376  002808  8CF0               	bsf	240,6,c	;volatile
  6377                           
  6378                           ;MCAL/INTERRUPT/external_interrupt.c: 106:                 }
  6379  00280A  EF09  F014         	goto	l470
  6380  00280E                     l469:
  6381                           
  6382                           ; BSR set to: 1
  6383                           ;MCAL/INTERRUPT/external_interrupt.c: 109:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 110:                     INTCONbits.GIEL=1;
  6384  00280E  8CF2               	bsf	242,6,c	;volatile
  6385                           
  6386                           ;MCAL/INTERRUPT/external_interrupt.c: 111:                     INTCON3bits.INT1IP=0;
  6387  002810  9CF0               	bcf	240,6,c	;volatile
  6388  002812                     l470:
  6389                           
  6390                           ; BSR set to: 1
  6391                           ;MCAL/INTERRUPT/external_interrupt.c: 117:                 INTCON3bits.INT1IE=1 ;
  6392  002812  86F0               	bsf	240,3,c	;volatile
  6393                           
  6394                           ;MCAL/INTERRUPT/external_interrupt.c: 118:                 break;
  6395  002814  EF43  F014         	goto	l6361
  6396  002818                     l471:
  6397                           
  6398                           ; BSR set to: 1
  6399                           ;MCAL/INTERRUPT/external_interrupt.c: 122:                 RCONbits.IPEN=1;
  6400  002818  8ED0               	bsf	208,7,c	;volatile
  6401  00281A                     
  6402                           ; BSR set to: 1
  6403                           ;MCAL/INTERRUPT/external_interrupt.c: 123:                 if(int_obj->Priority==HIGH_PR
      +                          IORITY)
  6404  00281A  EE20 F002          	lfsr	2,2
  6405  00281E  5100               	movf	INTX_enable@int_obj& (0+255),w,b
  6406  002820  26D9               	addwf	fsr2l,f,c
  6407  002822  5101               	movf	(INTX_enable@int_obj+1)& (0+255),w,b
  6408  002824  22DA               	addwfc	fsr2h,f,c
  6409  002826  04DE               	decf	postinc2,w,c
  6410  002828  A4D8               	btfss	status,2,c
  6411  00282A  EF19  F014         	goto	u5211
  6412  00282E  EF1B  F014         	goto	u5210
  6413  002832                     u5211:
  6414  002832  EF1F  F014         	goto	l472
  6415  002836                     u5210:
  6416  002836                     
  6417                           ; BSR set to: 1
  6418                           ;MCAL/INTERRUPT/external_interrupt.c: 124:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 125:                     INTCONbits.GIEH=1;
  6419  002836  8EF2               	bsf	242,7,c	;volatile
  6420                           
  6421                           ;MCAL/INTERRUPT/external_interrupt.c: 126:                     INTCON3bits.INT2IP=1;
  6422  002838  8EF0               	bsf	240,7,c	;volatile
  6423                           
  6424                           ;MCAL/INTERRUPT/external_interrupt.c: 127:                 }
  6425  00283A  EF21  F014         	goto	l473
  6426  00283E                     l472:
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;MCAL/INTERRUPT/external_interrupt.c: 130:                 {;MCAL/INTERRUPT/external_int
      +                          errupt.c: 131:                     INTCONbits.GIEL=1;
  6430  00283E  8CF2               	bsf	242,6,c	;volatile
  6431                           
  6432                           ;MCAL/INTERRUPT/external_interrupt.c: 132:                     INTCON3bits.INT2IP=0;
  6433  002840  9EF0               	bcf	240,7,c	;volatile
  6434  002842                     l473:
  6435                           
  6436                           ; BSR set to: 1
  6437                           ;MCAL/INTERRUPT/external_interrupt.c: 138:                 INTCON3bits.INT2IE=1 ;
  6438  002842  88F0               	bsf	240,4,c	;volatile
  6439                           
  6440                           ;MCAL/INTERRUPT/external_interrupt.c: 139:                 break;
  6441  002844  EF43  F014         	goto	l6361
  6442  002848                     l6359:
  6443                           
  6444                           ; BSR set to: 1
  6445  002848  EE20 F004          	lfsr	2,4
  6446  00284C  5100               	movf	INTX_enable@int_obj& (0+255),w,b
  6447  00284E  26D9               	addwf	fsr2l,f,c
  6448  002850  5101               	movf	(INTX_enable@int_obj+1)& (0+255),w,b
  6449  002852  22DA               	addwfc	fsr2h,f,c
  6450  002854  50DF               	movf	indf2,w,c
  6451  002856  6F02               	movwf	??_INTX_enable& (0+255),b
  6452  002858  6B03               	clrf	(??_INTX_enable+1)& (0+255),b
  6453                           
  6454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6455                           ; Switch size 1, requested type "simple"
  6456                           ; Number of cases is 1, Range of values is 0 to 0
  6457                           ; switch strategies available:
  6458                           ; Name         Instructions Cycles
  6459                           ; simple_byte            4     3 (average)
  6460                           ;	Chosen strategy is simple_byte
  6461  00285A  5103               	movf	(??_INTX_enable+1)& (0+255),w,b
  6462  00285C  0A00               	xorlw	0	; case 0
  6463  00285E  B4D8               	btfsc	status,2,c
  6464  002860  EF34  F014         	goto	l7433
  6465  002864  EF43  F014         	goto	l6361
  6466  002868                     l7433:
  6467                           
  6468                           ; BSR set to: 1
  6469                           ; Switch size 1, requested type "simple"
  6470                           ; Number of cases is 3, Range of values is 0 to 2
  6471                           ; switch strategies available:
  6472                           ; Name         Instructions Cycles
  6473                           ; simple_byte           10     6 (average)
  6474                           ;	Chosen strategy is simple_byte
  6475  002868  5102               	movf	??_INTX_enable& (0+255),w,b
  6476  00286A  0A00               	xorlw	0	; case 0
  6477  00286C  B4D8               	btfsc	status,2,c
  6478  00286E  EFF0  F013         	goto	l466
  6479  002872  0A01               	xorlw	1	; case 1
  6480  002874  B4D8               	btfsc	status,2,c
  6481  002876  EFF4  F013         	goto	l468
  6482  00287A  0A03               	xorlw	3	; case 2
  6483  00287C  B4D8               	btfsc	status,2,c
  6484  00287E  EF0C  F014         	goto	l471
  6485  002882  EF43  F014         	goto	l6361
  6486  002886                     l6361:
  6487                           
  6488                           ; BSR set to: 1
  6489                           ;MCAL/INTERRUPT/external_interrupt.c: 144:     return ret;
  6490  002886  5104               	movf	INTX_enable@ret& (0+255),w,b
  6491  002888                     
  6492                           ; BSR set to: 1
  6493  002888  0012               	return		;funcret
  6494  00288A                     __end_of_INTX_enable:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function _INTX_disable *****************
  6498 ;; Defined at:
  6499 ;;		line 201 in file "MCAL/INTERRUPT/external_interrupt.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  int_obj         2    0[BANK1 ] PTR const struct .
  6502 ;;		 -> int_t(6), 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  ret             1    4[BANK1 ] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      unsigned char 
  6507 ;; Registers used:
  6508 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6514 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;Total ram usage:        5 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; Hardware stack levels required when called: 18
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_Interrupt_INTx_Init
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text32
  6529  00331E                     __ptext32:
  6530                           	callstack 0
  6531  00331E                     _INTX_disable:
  6532                           	callstack 11
  6533  00331E                     
  6534                           ;MCAL/INTERRUPT/external_interrupt.c: 201: static Std_ReturnType INTX_disable(const INTX
      +                          _config *int_obj);MCAL/INTERRUPT/external_interrupt.c: 202: {;MCAL/INTERRUPT/external_in
      +                          terrupt.c: 203:     Std_ReturnType ret=(Std_ReturnType)0x01;
  6535  00331E  0E01               	movlw	1
  6536  003320  0101               	movlb	1	; () banked
  6537  003322  6F04               	movwf	INTX_disable@ret& (0+255),b
  6538  003324                     
  6539                           ; BSR set to: 1
  6540                           ;MCAL/INTERRUPT/external_interrupt.c: 204:     if(((void*)0)== int_obj)
  6541  003324  5100               	movf	INTX_disable@int_obj& (0+255),w,b
  6542  003326  1101               	iorwf	(INTX_disable@int_obj+1)& (0+255),w,b
  6543  003328  A4D8               	btfss	status,2,c
  6544  00332A  EF99  F019         	goto	u5111
  6545  00332E  EF9B  F019         	goto	u5110
  6546  003332                     u5111:
  6547  003332  EFA8  F019         	goto	l6229
  6548  003336                     u5110:
  6549  003336                     
  6550                           ; BSR set to: 1
  6551                           ;MCAL/INTERRUPT/external_interrupt.c: 205:     {;MCAL/INTERRUPT/external_interrupt.c: 20
      +                          6:         ret=(Std_ReturnType)0x00;
  6552  003336  0E00               	movlw	0
  6553  003338  6F04               	movwf	INTX_disable@ret& (0+255),b
  6554                           
  6555                           ;MCAL/INTERRUPT/external_interrupt.c: 207:     }
  6556  00333A  EFC7  F019         	goto	l6231
  6557  00333E                     l496:
  6558                           
  6559                           ; BSR set to: 1
  6560                           ;MCAL/INTERRUPT/external_interrupt.c: 213:                INTCONbits.INT0IE=0;
  6561  00333E  98F2               	bcf	242,4,c	;volatile
  6562                           
  6563                           ;MCAL/INTERRUPT/external_interrupt.c: 214:                break;
  6564  003340  EFC7  F019         	goto	l6231
  6565  003344                     l498:
  6566                           
  6567                           ; BSR set to: 1
  6568                           ;MCAL/INTERRUPT/external_interrupt.c: 216:                INTCON3bits.INT1E=0;
  6569  003344  96F0               	bcf	240,3,c	;volatile
  6570                           
  6571                           ;MCAL/INTERRUPT/external_interrupt.c: 217:                break;
  6572  003346  EFC7  F019         	goto	l6231
  6573  00334A                     l499:
  6574                           
  6575                           ; BSR set to: 1
  6576                           ;MCAL/INTERRUPT/external_interrupt.c: 219:                INTCON3bits.INT2IE=0;
  6577  00334A  98F0               	bcf	240,4,c	;volatile
  6578                           
  6579                           ;MCAL/INTERRUPT/external_interrupt.c: 220:                break;
  6580  00334C  EFC7  F019         	goto	l6231
  6581  003350                     l6229:
  6582                           
  6583                           ; BSR set to: 1
  6584  003350  EE20 F004          	lfsr	2,4
  6585  003354  5100               	movf	INTX_disable@int_obj& (0+255),w,b
  6586  003356  26D9               	addwf	fsr2l,f,c
  6587  003358  5101               	movf	(INTX_disable@int_obj+1)& (0+255),w,b
  6588  00335A  22DA               	addwfc	fsr2h,f,c
  6589  00335C  50DF               	movf	indf2,w,c
  6590  00335E  6F02               	movwf	??_INTX_disable& (0+255),b
  6591  003360  6B03               	clrf	(??_INTX_disable+1)& (0+255),b
  6592                           
  6593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6594                           ; Switch size 1, requested type "simple"
  6595                           ; Number of cases is 1, Range of values is 0 to 0
  6596                           ; switch strategies available:
  6597                           ; Name         Instructions Cycles
  6598                           ; simple_byte            4     3 (average)
  6599                           ;	Chosen strategy is simple_byte
  6600  003362  5103               	movf	(??_INTX_disable+1)& (0+255),w,b
  6601  003364  0A00               	xorlw	0	; case 0
  6602  003366  B4D8               	btfsc	status,2,c
  6603  003368  EFB8  F019         	goto	l7435
  6604  00336C  EFC7  F019         	goto	l6231
  6605  003370                     l7435:
  6606                           
  6607                           ; BSR set to: 1
  6608                           ; Switch size 1, requested type "simple"
  6609                           ; Number of cases is 3, Range of values is 0 to 2
  6610                           ; switch strategies available:
  6611                           ; Name         Instructions Cycles
  6612                           ; simple_byte           10     6 (average)
  6613                           ;	Chosen strategy is simple_byte
  6614  003370  5102               	movf	??_INTX_disable& (0+255),w,b
  6615  003372  0A00               	xorlw	0	; case 0
  6616  003374  B4D8               	btfsc	status,2,c
  6617  003376  EF9F  F019         	goto	l496
  6618  00337A  0A01               	xorlw	1	; case 1
  6619  00337C  B4D8               	btfsc	status,2,c
  6620  00337E  EFA2  F019         	goto	l498
  6621  003382  0A03               	xorlw	3	; case 2
  6622  003384  B4D8               	btfsc	status,2,c
  6623  003386  EFA5  F019         	goto	l499
  6624  00338A  EFC7  F019         	goto	l6231
  6625  00338E                     l6231:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;MCAL/INTERRUPT/external_interrupt.c: 223:     return ret;
  6629  00338E  5104               	movf	INTX_disable@ret& (0+255),w,b
  6630  003390                     
  6631                           ; BSR set to: 1
  6632  003390  0012               	return		;funcret
  6633  003392                     __end_of_INTX_disable:
  6634                           	callstack 0
  6635                           
  6636 ;; *************** function _INTX_clear_flag *****************
  6637 ;; Defined at:
  6638 ;;		line 260 in file "MCAL/INTERRUPT/external_interrupt.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  int_obj         2    0[BANK1 ] PTR const struct .
  6641 ;;		 -> int_t(6), 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  ret             1    4[BANK1 ] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      unsigned char 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6653 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;Total ram usage:        5 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 18
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_Interrupt_INTx_Init
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text33
  6668  003392                     __ptext33:
  6669                           	callstack 0
  6670  003392                     _INTX_clear_flag:
  6671                           	callstack 11
  6672  003392                     
  6673                           ;MCAL/INTERRUPT/external_interrupt.c: 260: static Std_ReturnType INTX_clear_flag(const I
      +                          NTX_config *int_obj);MCAL/INTERRUPT/external_interrupt.c: 261: {;MCAL/INTERRUPT/external
      +                          _interrupt.c: 262:     Std_ReturnType ret=(Std_ReturnType)0x01;
  6674  003392  0E01               	movlw	1
  6675  003394  0101               	movlb	1	; () banked
  6676  003396  6F04               	movwf	INTX_clear_flag@ret& (0+255),b
  6677  003398                     
  6678                           ; BSR set to: 1
  6679                           ;MCAL/INTERRUPT/external_interrupt.c: 263:     if(((void*)0)== int_obj)
  6680  003398  5100               	movf	INTX_clear_flag@int_obj& (0+255),w,b
  6681  00339A  1101               	iorwf	(INTX_clear_flag@int_obj+1)& (0+255),w,b
  6682  00339C  A4D8               	btfss	status,2,c
  6683  00339E  EFD3  F019         	goto	u5171
  6684  0033A2  EFD5  F019         	goto	u5170
  6685  0033A6                     u5171:
  6686  0033A6  EFE2  F019         	goto	l6305
  6687  0033AA                     u5170:
  6688  0033AA                     
  6689                           ; BSR set to: 1
  6690                           ;MCAL/INTERRUPT/external_interrupt.c: 264:     {;MCAL/INTERRUPT/external_interrupt.c: 26
      +                          5:         ret=(Std_ReturnType)0x00;
  6691  0033AA  0E00               	movlw	0
  6692  0033AC  6F04               	movwf	INTX_clear_flag@ret& (0+255),b
  6693                           
  6694                           ;MCAL/INTERRUPT/external_interrupt.c: 266:     }
  6695  0033AE  EF01  F01A         	goto	l6307
  6696  0033B2                     l516:
  6697                           
  6698                           ; BSR set to: 1
  6699                           ;MCAL/INTERRUPT/external_interrupt.c: 272:                 INTCONbits.INT0IF=0;
  6700  0033B2  92F2               	bcf	242,1,c	;volatile
  6701                           
  6702                           ;MCAL/INTERRUPT/external_interrupt.c: 273:                 break;
  6703  0033B4  EF01  F01A         	goto	l6307
  6704  0033B8                     l518:
  6705                           
  6706                           ; BSR set to: 1
  6707                           ;MCAL/INTERRUPT/external_interrupt.c: 275:                 INTCON3bits.INT1IF=0;
  6708  0033B8  90F0               	bcf	240,0,c	;volatile
  6709                           
  6710                           ;MCAL/INTERRUPT/external_interrupt.c: 276:                 break;
  6711  0033BA  EF01  F01A         	goto	l6307
  6712  0033BE                     l519:
  6713                           
  6714                           ; BSR set to: 1
  6715                           ;MCAL/INTERRUPT/external_interrupt.c: 278:                 INTCON3bits.INT2IF=0;
  6716  0033BE  92F0               	bcf	240,1,c	;volatile
  6717                           
  6718                           ;MCAL/INTERRUPT/external_interrupt.c: 279:                 break;
  6719  0033C0  EF01  F01A         	goto	l6307
  6720  0033C4                     l6305:
  6721                           
  6722                           ; BSR set to: 1
  6723  0033C4  EE20 F004          	lfsr	2,4
  6724  0033C8  5100               	movf	INTX_clear_flag@int_obj& (0+255),w,b
  6725  0033CA  26D9               	addwf	fsr2l,f,c
  6726  0033CC  5101               	movf	(INTX_clear_flag@int_obj+1)& (0+255),w,b
  6727  0033CE  22DA               	addwfc	fsr2h,f,c
  6728  0033D0  50DF               	movf	indf2,w,c
  6729  0033D2  6F02               	movwf	??_INTX_clear_flag& (0+255),b
  6730  0033D4  6B03               	clrf	(??_INTX_clear_flag+1)& (0+255),b
  6731                           
  6732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6733                           ; Switch size 1, requested type "simple"
  6734                           ; Number of cases is 1, Range of values is 0 to 0
  6735                           ; switch strategies available:
  6736                           ; Name         Instructions Cycles
  6737                           ; simple_byte            4     3 (average)
  6738                           ;	Chosen strategy is simple_byte
  6739  0033D6  5103               	movf	(??_INTX_clear_flag+1)& (0+255),w,b
  6740  0033D8  0A00               	xorlw	0	; case 0
  6741  0033DA  B4D8               	btfsc	status,2,c
  6742  0033DC  EFF2  F019         	goto	l7437
  6743  0033E0  EF01  F01A         	goto	l6307
  6744  0033E4                     l7437:
  6745                           
  6746                           ; BSR set to: 1
  6747                           ; Switch size 1, requested type "simple"
  6748                           ; Number of cases is 3, Range of values is 0 to 2
  6749                           ; switch strategies available:
  6750                           ; Name         Instructions Cycles
  6751                           ; simple_byte           10     6 (average)
  6752                           ;	Chosen strategy is simple_byte
  6753  0033E4  5102               	movf	??_INTX_clear_flag& (0+255),w,b
  6754  0033E6  0A00               	xorlw	0	; case 0
  6755  0033E8  B4D8               	btfsc	status,2,c
  6756  0033EA  EFD9  F019         	goto	l516
  6757  0033EE  0A01               	xorlw	1	; case 1
  6758  0033F0  B4D8               	btfsc	status,2,c
  6759  0033F2  EFDC  F019         	goto	l518
  6760  0033F6  0A03               	xorlw	3	; case 2
  6761  0033F8  B4D8               	btfsc	status,2,c
  6762  0033FA  EFDF  F019         	goto	l519
  6763  0033FE  EF01  F01A         	goto	l6307
  6764  003402                     l6307:
  6765                           
  6766                           ; BSR set to: 1
  6767                           ;MCAL/INTERRUPT/external_interrupt.c: 282:     return ret;
  6768  003402  5104               	movf	INTX_clear_flag@ret& (0+255),w,b
  6769  003404                     
  6770                           ; BSR set to: 1
  6771  003404  0012               	return		;funcret
  6772  003406                     __end_of_INTX_clear_flag:
  6773                           	callstack 0
  6774                           
  6775 ;; *************** function _InterruptManagerLow *****************
  6776 ;; Defined at:
  6777 ;;		line 31 in file "MCAL/INTERRUPT/interrupt_manager.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;		None
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;		None
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  1    wreg      void 
  6784 ;; Registers used:
  6785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;Total ram usage:        9 bytes
  6796 ;; Hardware stack levels used: 1
  6797 ;; Hardware stack levels required when called: 17
  6798 ;; This function calls:
  6799 ;;		_INT_0_ISR
  6800 ;;		_INT_1_ISR
  6801 ;;		_INT_2_ISR
  6802 ;; This function is called by:
  6803 ;;		Interrupt level 1
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	intcodelo
  6808  000018                     __pintcodelo:
  6809                           	callstack 0
  6810  000018                     _InterruptManagerLow:
  6811                           	callstack 4
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;incstack = 0
  6815  000018  804B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6816  00001A  CFD8 F0AB          	movff	status,??_InterruptManagerLow
  6817  00001E  CFE8 F0AC          	movff	wreg,??_InterruptManagerLow+1
  6818  000022  CFE0 F0AD          	movff	bsr,??_InterruptManagerLow+2
  6819  000026  CFFA F0AE          	movff	pclath,??_InterruptManagerLow+3
  6820  00002A  CFFB F0AF          	movff	pclatu,??_InterruptManagerLow+4
  6821  00002E  CFD9 F0B0          	movff	fsr2l,??_InterruptManagerLow+5
  6822  000032  CFDA F0B1          	movff	fsr2h,??_InterruptManagerLow+6
  6823  000036  CFF3 F0B2          	movff	prodl,??_InterruptManagerLow+7
  6824  00003A  CFF4 F0B3          	movff	prodh,??_InterruptManagerLow+8
  6825  00003E                     
  6826                           ;MCAL/INTERRUPT/interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (1 == INTCON
      +                          bits.INT0IF)){
  6827  00003E  A8F2               	btfss	242,4,c	;volatile
  6828  000040  EF24  F000         	goto	i1u602_21
  6829  000044  EF26  F000         	goto	i1u602_20
  6830  000048                     i1u602_21:
  6831  000048  EF2F  F000         	goto	i1l569
  6832  00004C                     i1u602_20:
  6833  00004C  A2F2               	btfss	242,1,c	;volatile
  6834  00004E  EF2B  F000         	goto	i1u603_21
  6835  000052  EF2D  F000         	goto	i1u603_20
  6836  000056                     i1u603_21:
  6837  000056  EF2F  F000         	goto	i1l569
  6838  00005A                     i1u603_20:
  6839  00005A                     
  6840                           ;MCAL/INTERRUPT/interrupt_manager.c: 35:         INT_0_ISR();
  6841  00005A  EC4F  F01C         	call	_INT_0_ISR	;wreg free
  6842  00005E                     i1l569:
  6843                           
  6844                           ;MCAL/INTERRUPT/interrupt_manager.c: 39:     if((1 == INTCON3bits.INT1IE) && (1 == INTCO
      +                          N3bits.INT1IE)){
  6845  00005E  A6F0               	btfss	240,3,c	;volatile
  6846  000060  EF34  F000         	goto	i1u604_21
  6847  000064  EF36  F000         	goto	i1u604_20
  6848  000068                     i1u604_21:
  6849  000068  EF3F  F000         	goto	i1l571
  6850  00006C                     i1u604_20:
  6851  00006C  A6F0               	btfss	240,3,c	;volatile
  6852  00006E  EF3B  F000         	goto	i1u605_21
  6853  000072  EF3D  F000         	goto	i1u605_20
  6854  000076                     i1u605_21:
  6855  000076  EF3F  F000         	goto	i1l571
  6856  00007A                     i1u605_20:
  6857  00007A                     
  6858                           ;MCAL/INTERRUPT/interrupt_manager.c: 40:         INT_1_ISR();
  6859  00007A  EC37  F01C         	call	_INT_1_ISR	;wreg free
  6860  00007E                     i1l571:
  6861                           
  6862                           ;MCAL/INTERRUPT/interrupt_manager.c: 44:      if((1 == INTCON3bits.INT2IE) && (1 == INTC
      +                          ON3bits.INT2IF)){
  6863  00007E  A8F0               	btfss	240,4,c	;volatile
  6864  000080  EF44  F000         	goto	i1u606_21
  6865  000084  EF46  F000         	goto	i1u606_20
  6866  000088                     i1u606_21:
  6867  000088  EF4F  F000         	goto	i1l574
  6868  00008C                     i1u606_20:
  6869  00008C  A2F0               	btfss	240,1,c	;volatile
  6870  00008E  EF4B  F000         	goto	i1u607_21
  6871  000092  EF4D  F000         	goto	i1u607_20
  6872  000096                     i1u607_21:
  6873  000096  EF4F  F000         	goto	i1l574
  6874  00009A                     i1u607_20:
  6875  00009A                     
  6876                           ;MCAL/INTERRUPT/interrupt_manager.c: 45:         INT_2_ISR();
  6877  00009A  EC1F  F01C         	call	_INT_2_ISR	;wreg free
  6878  00009E                     i1l574:
  6879  00009E  C0B3  FFF4         	movff	??_InterruptManagerLow+8,prodh
  6880  0000A2  C0B2  FFF3         	movff	??_InterruptManagerLow+7,prodl
  6881  0000A6  C0B1  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
  6882  0000AA  C0B0  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
  6883  0000AE  C0AF  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  6884  0000B2  C0AE  FFFA         	movff	??_InterruptManagerLow+3,pclath
  6885  0000B6  C0AD  FFE0         	movff	??_InterruptManagerLow+2,bsr
  6886  0000BA  C0AC  FFE8         	movff	??_InterruptManagerLow+1,wreg
  6887  0000BE  C0AB  FFD8         	movff	??_InterruptManagerLow,status
  6888  0000C2  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6889  0000C4  0010               	retfie	
  6890  0000C6                     __end_of_InterruptManagerLow:
  6891                           	callstack 0
  6892                           
  6893 ;; *************** function _INT_2_ISR *****************
  6894 ;; Defined at:
  6895 ;;		line 332 in file "MCAL/INTERRUPT/external_interrupt.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;		None
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;Total ram usage:        0 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 16
  6916 ;; This function calls:
  6917 ;;		Absolute function
  6918 ;;		_int_1_handler
  6919 ;; This function is called by:
  6920 ;;		_InterruptManagerLow
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text35
  6925  00383E                     __ptext35:
  6926                           	callstack 0
  6927  00383E                     _INT_2_ISR:
  6928                           	callstack 4
  6929  00383E                     
  6930                           ;MCAL/INTERRUPT/external_interrupt.c: 334:     INTCON3bits.INT2IF=0;
  6931  00383E  92F0               	bcf	240,1,c	;volatile
  6932  003840                     
  6933                           ;MCAL/INTERRUPT/external_interrupt.c: 335:     if(int2_handler) int2_handler();
  6934  003840  0100               	movlb	0	; () banked
  6935  003842  51CE               	movf	_int2_handler& (0+255),w,b
  6936  003844  11CF               	iorwf	(_int2_handler+1)& (0+255),w,b
  6937  003846  B4D8               	btfsc	status,2,c
  6938  003848  EF28  F01C         	goto	i1u550_21
  6939  00384C  EF2A  F01C         	goto	i1u550_20
  6940  003850                     i1u550_21:
  6941  003850  EF36  F01C         	goto	i1l542
  6942  003854                     i1u550_20:
  6943  003854                     
  6944                           ; BSR set to: 0
  6945  003854  D802               	call	i1u551_28
  6946  003856  EF36  F01C         	goto	i1u551_29
  6947  00385A                     i1u551_28:
  6948  00385A  0005               	push	
  6949  00385C  6EFA               	movwf	pclath,c
  6950  00385E  51CE               	movf	_int2_handler& (0+255),w,b
  6951  003860  6EFD               	movwf	tosl,c
  6952  003862  51CF               	movf	(_int2_handler+1)& (0+255),w,b
  6953  003864  6EFE               	movwf	tosh,c
  6954  003866  6AFF               	clrf	tosu,c
  6955  003868  50FA               	movf	pclath,w,c
  6956  00386A  0012               	return		;indir
  6957  00386C                     i1u551_29:
  6958  00386C                     i1l542:
  6959  00386C  0012               	return		;funcret
  6960  00386E                     __end_of_INT_2_ISR:
  6961                           	callstack 0
  6962                           
  6963 ;; *************** function _INT_1_ISR *****************
  6964 ;; Defined at:
  6965 ;;		line 326 in file "MCAL/INTERRUPT/external_interrupt.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;Total ram usage:        0 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 16
  6986 ;; This function calls:
  6987 ;;		Absolute function
  6988 ;;		_int_1_handler
  6989 ;; This function is called by:
  6990 ;;		_InterruptManagerLow
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text36
  6995  00386E                     __ptext36:
  6996                           	callstack 0
  6997  00386E                     _INT_1_ISR:
  6998                           	callstack 4
  6999  00386E                     
  7000                           ;MCAL/INTERRUPT/external_interrupt.c: 328:       INTCON3bits.INT1IF=0;
  7001  00386E  90F0               	bcf	240,0,c	;volatile
  7002  003870                     
  7003                           ;MCAL/INTERRUPT/external_interrupt.c: 329:       if(int1_handler) int1_handler();
  7004  003870  0100               	movlb	0	; () banked
  7005  003872  51D0               	movf	_int1_handler& (0+255),w,b
  7006  003874  11D1               	iorwf	(_int1_handler+1)& (0+255),w,b
  7007  003876  B4D8               	btfsc	status,2,c
  7008  003878  EF40  F01C         	goto	i1u548_21
  7009  00387C  EF42  F01C         	goto	i1u548_20
  7010  003880                     i1u548_21:
  7011  003880  EF4E  F01C         	goto	i1l538
  7012  003884                     i1u548_20:
  7013  003884                     
  7014                           ; BSR set to: 0
  7015  003884  D802               	call	i1u549_28
  7016  003886  EF4E  F01C         	goto	i1u549_29
  7017  00388A                     i1u549_28:
  7018  00388A  0005               	push	
  7019  00388C  6EFA               	movwf	pclath,c
  7020  00388E  51D0               	movf	_int1_handler& (0+255),w,b
  7021  003890  6EFD               	movwf	tosl,c
  7022  003892  51D1               	movf	(_int1_handler+1)& (0+255),w,b
  7023  003894  6EFE               	movwf	tosh,c
  7024  003896  6AFF               	clrf	tosu,c
  7025  003898  50FA               	movf	pclath,w,c
  7026  00389A  0012               	return		;indir
  7027  00389C                     i1u549_29:
  7028  00389C                     i1l538:
  7029  00389C  0012               	return		;funcret
  7030  00389E                     __end_of_INT_1_ISR:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _INT_0_ISR *****************
  7034 ;; Defined at:
  7035 ;;		line 320 in file "MCAL/INTERRUPT/external_interrupt.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;Total ram usage:        0 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 16
  7056 ;; This function calls:
  7057 ;;		Absolute function
  7058 ;;		_int_1_handler
  7059 ;; This function is called by:
  7060 ;;		_InterruptManagerLow
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text37
  7065  00389E                     __ptext37:
  7066                           	callstack 0
  7067  00389E                     _INT_0_ISR:
  7068                           	callstack 4
  7069  00389E                     
  7070                           ;MCAL/INTERRUPT/external_interrupt.c: 322:     INTCONbits.INT0IF=0;
  7071  00389E  92F2               	bcf	242,1,c	;volatile
  7072  0038A0                     
  7073                           ;MCAL/INTERRUPT/external_interrupt.c: 323:       if(int0_handler) int0_handler();
  7074  0038A0  0100               	movlb	0	; () banked
  7075  0038A2  51D2               	movf	_int0_handler& (0+255),w,b
  7076  0038A4  11D3               	iorwf	(_int0_handler+1)& (0+255),w,b
  7077  0038A6  B4D8               	btfsc	status,2,c
  7078  0038A8  EF58  F01C         	goto	i1u546_21
  7079  0038AC  EF5A  F01C         	goto	i1u546_20
  7080  0038B0                     i1u546_21:
  7081  0038B0  EF66  F01C         	goto	i1l534
  7082  0038B4                     i1u546_20:
  7083  0038B4                     
  7084                           ; BSR set to: 0
  7085  0038B4  D802               	call	i1u547_28
  7086  0038B6  EF66  F01C         	goto	i1u547_29
  7087  0038BA                     i1u547_28:
  7088  0038BA  0005               	push	
  7089  0038BC  6EFA               	movwf	pclath,c
  7090  0038BE  51D2               	movf	_int0_handler& (0+255),w,b
  7091  0038C0  6EFD               	movwf	tosl,c
  7092  0038C2  51D3               	movf	(_int0_handler+1)& (0+255),w,b
  7093  0038C4  6EFE               	movwf	tosh,c
  7094  0038C6  6AFF               	clrf	tosu,c
  7095  0038C8  50FA               	movf	pclath,w,c
  7096  0038CA  0012               	return		;indir
  7097  0038CC                     i1u547_29:
  7098  0038CC                     i1l534:
  7099  0038CC  0012               	return		;funcret
  7100  0038CE                     __end_of_INT_0_ISR:
  7101                           	callstack 0
  7102                           
  7103 ;; *************** function _int_1_handler *****************
  7104 ;; Defined at:
  7105 ;;		line 89 in file "main.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;		None
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      void 
  7112 ;; Registers used:
  7113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;Total ram usage:        2 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 15
  7126 ;; This function calls:
  7127 ;;		i1_display_char_at_position
  7128 ;;		i1_display_custom_char
  7129 ;; This function is called by:
  7130 ;;		_INT_0_ISR
  7131 ;;		_INT_1_ISR
  7132 ;;		_INT_2_ISR
  7133 ;;		i2_INT_0_ISR
  7134 ;;		i2_INT_1_ISR
  7135 ;;		i2_INT_2_ISR
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text38
  7140  001F10                     __ptext38:
  7141                           	callstack 0
  7142  001F10                     _int_1_handler:
  7143                           	callstack 0
  7144                           
  7145                           ;Skip over the trampoline to the duplicate function for level 2
  7146  001F10  A24B               	btfss	int$flags,1,c
  7147  001F12  EF8D  F00F         	goto	_int_1_handler$intlevel1
  7148  001F16  EF50  F011         	goto	i2_int_1_handler
  7149  001F1A                     _int_1_handler$intlevel1:
  7150                           	callstack 4
  7151  001F1A                     
  7152                           ;main.c: 92:       display_char_at_position(&lcd,3,4,'\0');
  7153  001F1A  0EC1               	movlw	low _lcd
  7154  001F1C  0100               	movlb	0	; () banked
  7155  001F1E  6F9B               	movwf	i1display_char_at_position@lcd& (0+255),b
  7156  001F20  0E01               	movlw	high _lcd
  7157  001F22  6F9C               	movwf	(i1display_char_at_position@lcd+1)& (0+255),b
  7158  001F24  0E03               	movlw	3
  7159  001F26  6F9D               	movwf	i1display_char_at_position@row& (0+255),b
  7160  001F28  0E04               	movlw	4
  7161  001F2A  6F9E               	movwf	i1display_char_at_position@coloumn& (0+255),b
  7162  001F2C  0E00               	movlw	0
  7163  001F2E  6F9F               	movwf	i1display_char_at_position@data& (0+255),b
  7164  001F30  EC38  F016         	call	i1_display_char_at_position	;wreg free
  7165                           
  7166                           ;main.c: 93:       display_custom_char(&lcd,1,4,dinasour,1);
  7167  001F34  0EC1               	movlw	low _lcd
  7168  001F36  0100               	movlb	0	; () banked
  7169  001F38  6FA1               	movwf	i1display_custom_char@lcd& (0+255),b
  7170  001F3A  0E01               	movlw	high _lcd
  7171  001F3C  6FA2               	movwf	(i1display_custom_char@lcd+1)& (0+255),b
  7172  001F3E  0E01               	movlw	1
  7173  001F40  6FA3               	movwf	i1display_custom_char@row& (0+255),b
  7174  001F42  0E04               	movlw	4
  7175  001F44  6FA4               	movwf	i1display_custom_char@cloumn& (0+255),b
  7176  001F46  0EB9               	movlw	low _dinasour
  7177  001F48  6FA5               	movwf	i1display_custom_char@data& (0+255),b
  7178  001F4A  0E01               	movlw	high _dinasour
  7179  001F4C  6FA6               	movwf	(i1display_custom_char@data+1)& (0+255),b
  7180  001F4E  0E01               	movlw	1
  7181  001F50  6FA7               	movwf	i1display_custom_char@mem_pos& (0+255),b
  7182  001F52  EC9A  F017         	call	i1_display_custom_char	;wreg free
  7183  001F56                     
  7184                           ;main.c: 96:       if(x==5||x==6){
  7185  001F56  0E05               	movlw	5
  7186  001F58  0101               	movlb	1	; () banked
  7187  001F5A  1981               	xorwf	_x& (0+255),w,b
  7188  001F5C  B4D8               	btfsc	status,2,c
  7189  001F5E  EFB3  F00F         	goto	i1u522_21
  7190  001F62  EFB5  F00F         	goto	i1u522_20
  7191  001F66                     i1u522_21:
  7192  001F66  EFEB  F00F         	goto	i1l6383
  7193  001F6A                     i1u522_20:
  7194  001F6A                     
  7195                           ; BSR set to: 1
  7196  001F6A  0E06               	movlw	6
  7197  001F6C  1981               	xorwf	_x& (0+255),w,b
  7198  001F6E  A4D8               	btfss	status,2,c
  7199  001F70  EFBC  F00F         	goto	i1u523_21
  7200  001F74  EFBE  F00F         	goto	i1u523_20
  7201  001F78                     i1u523_21:
  7202  001F78  EFF6  F00F         	goto	i1l6389
  7203  001F7C                     i1u523_20:
  7204  001F7C  EFEB  F00F         	goto	i1l6383
  7205  001F80                     i1l6377:
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;main.c: 98:         {;main.c: 99:              display_custom_char(&lcd,3,x,cactus,4);
  7209  001F80  0EC1               	movlw	low _lcd
  7210  001F82  0100               	movlb	0	; () banked
  7211  001F84  6FA1               	movwf	i1display_custom_char@lcd& (0+255),b
  7212  001F86  0E01               	movlw	high _lcd
  7213  001F88  6FA2               	movwf	(i1display_custom_char@lcd+1)& (0+255),b
  7214  001F8A  0E03               	movlw	3
  7215  001F8C  6FA3               	movwf	i1display_custom_char@row& (0+255),b
  7216  001F8E  C181  F0A4         	movff	_x,i1display_custom_char@cloumn
  7217  001F92  0EB1               	movlw	low _cactus
  7218  001F94  6FA5               	movwf	i1display_custom_char@data& (0+255),b
  7219  001F96  0E01               	movlw	high _cactus
  7220  001F98  6FA6               	movwf	(i1display_custom_char@data+1)& (0+255),b
  7221  001F9A  0E04               	movlw	4
  7222  001F9C  6FA7               	movwf	i1display_custom_char@mem_pos& (0+255),b
  7223  001F9E  EC9A  F017         	call	i1_display_custom_char	;wreg free
  7224                           
  7225                           ;main.c: 100:              display_char_at_position(&lcd,3,x+1,'\0');
  7226  001FA2  0EC1               	movlw	low _lcd
  7227  001FA4  0100               	movlb	0	; () banked
  7228  001FA6  6F9B               	movwf	i1display_char_at_position@lcd& (0+255),b
  7229  001FA8  0E01               	movlw	high _lcd
  7230  001FAA  6F9C               	movwf	(i1display_char_at_position@lcd+1)& (0+255),b
  7231  001FAC  0E03               	movlw	3
  7232  001FAE  6F9D               	movwf	i1display_char_at_position@row& (0+255),b
  7233  001FB0  0101               	movlb	1	; () banked
  7234  001FB2  2981               	incf	_x& (0+255),w,b
  7235  001FB4  0100               	movlb	0	; () banked
  7236  001FB6  6F9E               	movwf	i1display_char_at_position@coloumn& (0+255),b
  7237  001FB8  0E00               	movlw	0
  7238  001FBA  6F9F               	movwf	i1display_char_at_position@data& (0+255),b
  7239  001FBC  EC38  F016         	call	i1_display_char_at_position	;wreg free
  7240  001FC0                     
  7241                           ;main.c: 101:              _delay((unsigned long)((80)*(8000000UL/4000.0)));
  7242  001FC0  0ED0               	movlw	208
  7243  001FC2  0100               	movlb	0	; () banked
  7244  001FC4  6FA9               	movwf	??_int_1_handler& (0+255),b
  7245  001FC6  0EC9               	movlw	201
  7246  001FC8                     i1u618_27:
  7247  001FC8  2EE8               	decfsz	wreg,f,c
  7248  001FCA  D7FE               	bra	i1u618_27
  7249  001FCC  2FA9               	decfsz	??_int_1_handler& (0+255),f,b
  7250  001FCE  D7FC               	bra	i1u618_27
  7251  001FD0  D000               	nop2	
  7252  001FD2                     
  7253                           ;main.c: 102:              x--;
  7254  001FD2  0101               	movlb	1	; () banked
  7255  001FD4  0781               	decf	_x& (0+255),f,b
  7256  001FD6                     i1l6383:
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;main.c: 97:         while(x>=3)
  7260  001FD6  0E03               	movlw	3
  7261  001FD8  6181               	cpfslt	_x& (0+255),b
  7262  001FDA  EFF1  F00F         	goto	i1u524_21
  7263  001FDE  EFF3  F00F         	goto	i1u524_20
  7264  001FE2                     i1u524_21:
  7265  001FE2  EFC0  F00F         	goto	i1l6377
  7266  001FE6                     i1u524_20:
  7267  001FE6                     
  7268                           ; BSR set to: 1
  7269                           ;main.c: 104:         counter++;
  7270  001FE6  2B7F               	incf	_counter& (0+255),f,b
  7271  001FE8                     
  7272                           ; BSR set to: 1
  7273                           ;main.c: 105:         x=3;
  7274  001FE8  0E03               	movlw	3
  7275  001FEA  6F81               	movwf	_x& (0+255),b
  7276  001FEC                     i1l6389:
  7277                           
  7278                           ; BSR set to: 1
  7279                           ;main.c: 108:         _delay((unsigned long)((200)*(8000000UL/4000.0)));
  7280  001FEC  0E03               	movlw	3
  7281  001FEE  0100               	movlb	0	; () banked
  7282  001FF0  6FAA               	movwf	(??_int_1_handler+1)& (0+255),b
  7283  001FF2  0E08               	movlw	8
  7284  001FF4  6FA9               	movwf	??_int_1_handler& (0+255),b
  7285  001FF6  0E77               	movlw	119
  7286  001FF8                     i1u619_27:
  7287  001FF8  2EE8               	decfsz	wreg,f,c
  7288  001FFA  D7FE               	bra	i1u619_27
  7289  001FFC  2FA9               	decfsz	??_int_1_handler& (0+255),f,b
  7290  001FFE  D7FC               	bra	i1u619_27
  7291  002000  2FAA               	decfsz	(??_int_1_handler+1)& (0+255),f,b
  7292  002002  D7FA               	bra	i1u619_27
  7293  002004                     
  7294                           ;main.c: 109:      display_char_at_position(&lcd,1,4,'\0');
  7295  002004  0EC1               	movlw	low _lcd
  7296  002006  0100               	movlb	0	; () banked
  7297  002008  6F9B               	movwf	i1display_char_at_position@lcd& (0+255),b
  7298  00200A  0E01               	movlw	high _lcd
  7299  00200C  6F9C               	movwf	(i1display_char_at_position@lcd+1)& (0+255),b
  7300  00200E  0E01               	movlw	1
  7301  002010  6F9D               	movwf	i1display_char_at_position@row& (0+255),b
  7302  002012  0E04               	movlw	4
  7303  002014  6F9E               	movwf	i1display_char_at_position@coloumn& (0+255),b
  7304  002016  0E00               	movlw	0
  7305  002018  6F9F               	movwf	i1display_char_at_position@data& (0+255),b
  7306  00201A  EC38  F016         	call	i1_display_char_at_position	;wreg free
  7307  00201E                     
  7308                           ;main.c: 110:      display_custom_char(&lcd,3,4,dinasour,1);
  7309  00201E  0EC1               	movlw	low _lcd
  7310  002020  0100               	movlb	0	; () banked
  7311  002022  6FA1               	movwf	i1display_custom_char@lcd& (0+255),b
  7312  002024  0E01               	movlw	high _lcd
  7313  002026  6FA2               	movwf	(i1display_custom_char@lcd+1)& (0+255),b
  7314  002028  0E03               	movlw	3
  7315  00202A  6FA3               	movwf	i1display_custom_char@row& (0+255),b
  7316  00202C  0E04               	movlw	4
  7317  00202E  6FA4               	movwf	i1display_custom_char@cloumn& (0+255),b
  7318  002030  0EB9               	movlw	low _dinasour
  7319  002032  6FA5               	movwf	i1display_custom_char@data& (0+255),b
  7320  002034  0E01               	movlw	high _dinasour
  7321  002036  6FA6               	movwf	(i1display_custom_char@data+1)& (0+255),b
  7322  002038  0E01               	movlw	1
  7323  00203A  6FA7               	movwf	i1display_custom_char@mem_pos& (0+255),b
  7324  00203C  EC9A  F017         	call	i1_display_custom_char	;wreg free
  7325  002040  0012               	return		;funcret
  7326  002042                     __end_of_int_1_handler:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function i1_display_custom_char *****************
  7330 ;; Defined at:
  7331 ;;		line 184 in file "ECU/LCD/lcd.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  lcd             2   33[BANK0 ] PTR const struct .
  7334 ;;		 -> lcd(6), 
  7335 ;;  row             1   35[BANK0 ] unsigned char 
  7336 ;;  cloumn          1   36[BANK0 ] unsigned char 
  7337 ;;  data            2   37[BANK0 ] PTR unsigned char 
  7338 ;;		 -> cactus(8), dinasour(8), ground(8), 
  7339 ;;  mem_pos         1   39[BANK0 ] unsigned char 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  counter         1   40[BANK0 ] unsigned char 
  7342 ;;  ret             1    0        unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7352 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;Total ram usage:        8 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 14
  7359 ;; This function calls:
  7360 ;;		i1_display_char
  7361 ;;		i1_display_char_at_position
  7362 ;;		i1_send_command
  7363 ;; This function is called by:
  7364 ;;		_int_1_handler
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text39
  7369  002F34                     __ptext39:
  7370                           	callstack 0
  7371  002F34                     i1_display_custom_char:
  7372                           	callstack 4
  7373  002F34                     
  7374                           ;ECU/LCD/lcd.c: 187:     uint8 counter=0;
  7375  002F34  0E00               	movlw	0
  7376  002F36  0100               	movlb	0	; () banked
  7377  002F38  6FA8               	movwf	i1display_custom_char@counter& (0+255),b
  7378  002F3A                     
  7379                           ; BSR set to: 0
  7380                           ;ECU/LCD/lcd.c: 188:     if(((void*)0)==lcd)
  7381  002F3A  51A1               	movf	i1display_custom_char@lcd& (0+255),w,b
  7382  002F3C  11A2               	iorwf	(i1display_custom_char@lcd+1)& (0+255),w,b
  7383  002F3E  A4D8               	btfss	status,2,c
  7384  002F40  EFA4  F017         	goto	i1u501_21
  7385  002F44  EFA6  F017         	goto	i1u501_20
  7386  002F48                     i1u501_21:
  7387  002F48  EFA8  F017         	goto	i1l6119
  7388  002F4C                     i1u501_20:
  7389  002F4C                     
  7390                           ; BSR set to: 0
  7391                           ;ECU/LCD/lcd.c: 191:     }
  7392  002F4C  EFDA  F017         	goto	i1l142
  7393  002F50                     i1l6119:
  7394                           
  7395                           ; BSR set to: 0
  7396  002F50  C0A1  F090         	movff	i1display_custom_char@lcd,i1send_command@lcd
  7397  002F54  C0A2  F091         	movff	i1display_custom_char@lcd+1,i1send_command@lcd+1
  7398  002F58  51A7               	movf	i1display_custom_char@mem_pos& (0+255),w,b
  7399  002F5A  0D08               	mullw	8
  7400  002F5C  50F3               	movf	243,w,c
  7401  002F5E  0F40               	addlw	64
  7402  002F60  6F92               	movwf	i1send_command@command& (0+255),b
  7403  002F62  EC59  F018         	call	i1_send_command	;wreg free
  7404  002F66                     
  7405                           ;ECU/LCD/lcd.c: 195:         for(counter=0;counter<=7;counter++)
  7406  002F66  0E00               	movlw	0
  7407  002F68  0100               	movlb	0	; () banked
  7408  002F6A  6FA8               	movwf	i1display_custom_char@counter& (0+255),b
  7409  002F6C                     i1l6127:
  7410                           
  7411                           ; BSR set to: 0
  7412  002F6C  C0A1  F090         	movff	i1display_custom_char@lcd,i1display_char@lcd
  7413  002F70  C0A2  F091         	movff	i1display_custom_char@lcd+1,i1display_char@lcd+1
  7414  002F74  51A8               	movf	i1display_custom_char@counter& (0+255),w,b
  7415  002F76  25A5               	addwf	i1display_custom_char@data& (0+255),w,b
  7416  002F78  6ED9               	movwf	fsr2l,c
  7417  002F7A  0E00               	movlw	0
  7418  002F7C  21A6               	addwfc	(i1display_custom_char@data+1)& (0+255),w,b
  7419  002F7E  6EDA               	movwf	fsr2h,c
  7420  002F80  50DF               	movf	indf2,w,c
  7421  002F82  6F92               	movwf	i1display_char@data& (0+255),b
  7422  002F84  EC98  F018         	call	i1_display_char	;wreg free
  7423  002F88                     
  7424                           ;ECU/LCD/lcd.c: 198:         }
  7425  002F88  0100               	movlb	0	; () banked
  7426  002F8A  2BA8               	incf	i1display_custom_char@counter& (0+255),f,b
  7427  002F8C                     
  7428                           ; BSR set to: 0
  7429  002F8C  0E07               	movlw	7
  7430  002F8E  65A8               	cpfsgt	i1display_custom_char@counter& (0+255),b
  7431  002F90  EFCC  F017         	goto	i1u502_21
  7432  002F94  EFCE  F017         	goto	i1u502_20
  7433  002F98                     i1u502_21:
  7434  002F98  EFB6  F017         	goto	i1l6127
  7435  002F9C                     i1u502_20:
  7436  002F9C                     
  7437                           ; BSR set to: 0
  7438  002F9C  C0A1  F09B         	movff	i1display_custom_char@lcd,i1display_char_at_position@lcd
  7439  002FA0  C0A2  F09C         	movff	i1display_custom_char@lcd+1,i1display_char_at_position@lcd+1
  7440  002FA4  C0A3  F09D         	movff	i1display_custom_char@row,i1display_char_at_position@row
  7441  002FA8  C0A4  F09E         	movff	i1display_custom_char@cloumn,i1display_char_at_position@coloumn
  7442  002FAC  C0A7  F09F         	movff	i1display_custom_char@mem_pos,i1display_char_at_position@data
  7443  002FB0  EC38  F016         	call	i1_display_char_at_position	;wreg free
  7444  002FB4                     i1l142:
  7445  002FB4  0012               	return		;funcret
  7446  002FB6                     __end_ofi1_display_custom_char:
  7447                           	callstack 0
  7448                           
  7449 ;; *************** function i1_display_char_at_position *****************
  7450 ;; Defined at:
  7451 ;;		line 110 in file "ECU/LCD/lcd.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  lcd             2   27[BANK0 ] PTR const struct .
  7454 ;;		 -> lcd(6), 
  7455 ;;  row             1   29[BANK0 ] unsigned char 
  7456 ;;  coloumn         1   30[BANK0 ] unsigned char 
  7457 ;;  data            1   31[BANK0 ] unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  ret             1   32[BANK0 ] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      unsigned char 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7469 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;Total ram usage:        6 bytes
  7474 ;; Hardware stack levels used: 1
  7475 ;; Hardware stack levels required when called: 13
  7476 ;; This function calls:
  7477 ;;		i1_lcd_4_bit_set_cursor
  7478 ;;		i1_lcd_send_4bits
  7479 ;;		i1_lcd_send_enable_4bit
  7480 ;;		i1_pin_write_value
  7481 ;; This function is called by:
  7482 ;;		_int_1_handler
  7483 ;;		i1_display_custom_char
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text40
  7488  002C70                     __ptext40:
  7489                           	callstack 0
  7490  002C70                     i1_display_char_at_position:
  7491                           	callstack 4
  7492  002C70                     
  7493                           ;ECU/LCD/lcd.c: 113:     if(((void*)0)==lcd)
  7494  002C70  0100               	movlb	0	; () banked
  7495  002C72  519B               	movf	i1display_char_at_position@lcd& (0+255),w,b
  7496  002C74  119C               	iorwf	(i1display_char_at_position@lcd+1)& (0+255),w,b
  7497  002C76  A4D8               	btfss	status,2,c
  7498  002C78  EF40  F016         	goto	i1u492_21
  7499  002C7C  EF42  F016         	goto	i1u492_20
  7500  002C80                     i1u492_21:
  7501  002C80  EF46  F016         	goto	i1l6047
  7502  002C84                     i1u492_20:
  7503  002C84                     
  7504                           ; BSR set to: 0
  7505                           ;ECU/LCD/lcd.c: 114:     {;ECU/LCD/lcd.c: 115:         ret=(Std_ReturnType)0x00;
  7506  002C84  0E00               	movlw	0
  7507  002C86  6FA0               	movwf	i1display_char_at_position@ret& (0+255),b
  7508                           
  7509                           ;ECU/LCD/lcd.c: 116:     }
  7510  002C88  EF81  F016         	goto	i1l6049
  7511  002C8C                     i1l6047:
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;ECU/LCD/lcd.c: 118:     {;ECU/LCD/lcd.c: 119:         ret=lcd_4_bit_set_cursor(lcd,row,
      +                          coloumn);
  7515  002C8C  C09B  F094         	movff	i1display_char_at_position@lcd,i1lcd_4_bit_set_cursor@lcd
  7516  002C90  C09C  F095         	movff	i1display_char_at_position@lcd+1,i1lcd_4_bit_set_cursor@lcd+1
  7517  002C94  C09D  F096         	movff	i1display_char_at_position@row,i1lcd_4_bit_set_cursor@row
  7518  002C98  C09E  F097         	movff	i1display_char_at_position@coloumn,i1lcd_4_bit_set_cursor@column
  7519  002C9C  EC7A  F013         	call	i1_lcd_4_bit_set_cursor	;wreg free
  7520  002CA0  0100               	movlb	0	; () banked
  7521  002CA2  6FA0               	movwf	i1display_char_at_position@ret& (0+255),b
  7522                           
  7523                           ;ECU/LCD/lcd.c: 120:         ret=pin_write_value(&(lcd->rs),1);
  7524  002CA4  C09B  F035         	movff	i1display_char_at_position@lcd,i1pin_write_value@pin
  7525  002CA8  C09C  F036         	movff	i1display_char_at_position@lcd+1,i1pin_write_value@pin+1
  7526  002CAC  0E01               	movlw	1
  7527  002CAE  6E37               	movwf	i1pin_write_value@value^0,c
  7528  002CB0  EC21  F010         	call	i1_pin_write_value	;wreg free
  7529  002CB4  0100               	movlb	0	; () banked
  7530  002CB6  6FA0               	movwf	i1display_char_at_position@ret& (0+255),b
  7531                           
  7532                           ;ECU/LCD/lcd.c: 121:         ret=lcd_send_4bits(lcd,data>>4);
  7533  002CB8  C09B  F087         	movff	i1display_char_at_position@lcd,i1lcd_send_4bits@lcd
  7534  002CBC  C09C  F088         	movff	i1display_char_at_position@lcd+1,i1lcd_send_4bits@lcd+1
  7535  002CC0  399F               	swapf	i1display_char_at_position@data& (0+255),w,b
  7536  002CC2  0B0F               	andlw	15
  7537  002CC4  6F89               	movwf	i1lcd_send_4bits@_data_command& (0+255),b
  7538  002CC6  EC52  F019         	call	i1_lcd_send_4bits	;wreg free
  7539  002CCA  0100               	movlb	0	; () banked
  7540  002CCC  6FA0               	movwf	i1display_char_at_position@ret& (0+255),b
  7541                           
  7542                           ;ECU/LCD/lcd.c: 122:         ret=lcd_send_enable_4bit(lcd);
  7543  002CCE  C09B  F087         	movff	i1display_char_at_position@lcd,i1lcd_send_enable_4bit@lcd
  7544  002CD2  C09C  F088         	movff	i1display_char_at_position@lcd+1,i1lcd_send_enable_4bit@lcd+1
  7545  002CD6  EC41  F01B         	call	i1_lcd_send_enable_4bit	;wreg free
  7546  002CDA  0100               	movlb	0	; () banked
  7547  002CDC  6FA0               	movwf	i1display_char_at_position@ret& (0+255),b
  7548                           
  7549                           ;ECU/LCD/lcd.c: 123:         ret=lcd_send_4bits(lcd,data);
  7550  002CDE  C09B  F087         	movff	i1display_char_at_position@lcd,i1lcd_send_4bits@lcd
  7551  002CE2  C09C  F088         	movff	i1display_char_at_position@lcd+1,i1lcd_send_4bits@lcd+1
  7552  002CE6  C09F  F089         	movff	i1display_char_at_position@data,i1lcd_send_4bits@_data_command
  7553  002CEA  EC52  F019         	call	i1_lcd_send_4bits	;wreg free
  7554  002CEE  0100               	movlb	0	; () banked
  7555  002CF0  6FA0               	movwf	i1display_char_at_position@ret& (0+255),b
  7556                           
  7557                           ;ECU/LCD/lcd.c: 124:         ret=lcd_send_enable_4bit(lcd);
  7558  002CF2  C09B  F087         	movff	i1display_char_at_position@lcd,i1lcd_send_enable_4bit@lcd
  7559  002CF6  C09C  F088         	movff	i1display_char_at_position@lcd+1,i1lcd_send_enable_4bit@lcd+1
  7560  002CFA  EC41  F01B         	call	i1_lcd_send_enable_4bit	;wreg free
  7561  002CFE  0100               	movlb	0	; () banked
  7562  002D00  6FA0               	movwf	i1display_char_at_position@ret& (0+255),b
  7563  002D02                     i1l6049:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;ECU/LCD/lcd.c: 127:     return ret;
  7567  002D02  51A0               	movf	i1display_char_at_position@ret& (0+255),w,b
  7568  002D04                     
  7569                           ; BSR set to: 0
  7570  002D04  0012               	return		;funcret
  7571  002D06                     __end_ofi1_display_char_at_position:
  7572                           	callstack 0
  7573                           
  7574 ;; *************** function i1_lcd_4_bit_set_cursor *****************
  7575 ;; Defined at:
  7576 ;;		line 558 in file "ECU/LCD/lcd.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  lcd             2   20[BANK0 ] PTR const struct .
  7579 ;;		 -> lcd(6), 
  7580 ;;  row             1   22[BANK0 ] unsigned char 
  7581 ;;  column          1   23[BANK0 ] unsigned char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  ret             1   26[BANK0 ] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      unsigned char 
  7586 ;; Registers used:
  7587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;Total ram usage:        7 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 12
  7600 ;; This function calls:
  7601 ;;		i1_send_command
  7602 ;; This function is called by:
  7603 ;;		i1_display_char_at_position
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text41
  7608  0026F4                     __ptext41:
  7609                           	callstack 0
  7610  0026F4                     i1_lcd_4_bit_set_cursor:
  7611                           	callstack 4
  7612  0026F4                     
  7613                           ;ECU/LCD/lcd.c: 558:  Std_ReturnType lcd_4_bit_set_cursor(const lcd_4_bit_mode *lcd,uint
      +                          8 row,uint8 column);ECU/LCD/lcd.c: 559: {;ECU/LCD/lcd.c: 561:     Std_ReturnType ret=(St
      +                          d_ReturnType)0x01;
  7614  0026F4  0E01               	movlw	1
  7615  0026F6  0100               	movlb	0	; () banked
  7616  0026F8  6F9A               	movwf	i1lcd_4_bit_set_cursor@ret& (0+255),b
  7617  0026FA                     
  7618                           ; BSR set to: 0
  7619                           ;ECU/LCD/lcd.c: 562:     if(((void*)0)==lcd)
  7620  0026FA  5194               	movf	i1lcd_4_bit_set_cursor@lcd& (0+255),w,b
  7621  0026FC  1195               	iorwf	(i1lcd_4_bit_set_cursor@lcd+1)& (0+255),w,b
  7622  0026FE  A4D8               	btfss	status,2,c
  7623  002700  EF84  F013         	goto	i1u485_21
  7624  002704  EF86  F013         	goto	i1u485_20
  7625  002708                     i1u485_21:
  7626  002708  EF8A  F013         	goto	i1l5953
  7627  00270C                     i1u485_20:
  7628  00270C                     
  7629                           ; BSR set to: 0
  7630                           ;ECU/LCD/lcd.c: 563:     {;ECU/LCD/lcd.c: 564:         ret=(Std_ReturnType)0x00;
  7631  00270C  0E00               	movlw	0
  7632  00270E  6F9A               	movwf	i1lcd_4_bit_set_cursor@ret& (0+255),b
  7633                           
  7634                           ;ECU/LCD/lcd.c: 565:     }
  7635  002710  EFDE  F013         	goto	i1l5967
  7636  002714                     i1l5953:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;ECU/LCD/lcd.c: 567:     {;ECU/LCD/lcd.c: 568:         column--;
  7640  002714  0797               	decf	i1lcd_4_bit_set_cursor@column& (0+255),f,b
  7641                           
  7642                           ;ECU/LCD/lcd.c: 569:         switch(row)
  7643  002716  EFC1  F013         	goto	i1l5965
  7644  00271A                     i1l5955:
  7645                           
  7646                           ; BSR set to: 0
  7647  00271A  C094  F090         	movff	i1lcd_4_bit_set_cursor@lcd,i1send_command@lcd
  7648  00271E  C095  F091         	movff	i1lcd_4_bit_set_cursor@lcd+1,i1send_command@lcd+1
  7649  002722  5197               	movf	i1lcd_4_bit_set_cursor@column& (0+255),w,b
  7650  002724  0F80               	addlw	128
  7651  002726  6F92               	movwf	i1send_command@command& (0+255),b
  7652  002728  EC59  F018         	call	i1_send_command	;wreg free
  7653  00272C  0100               	movlb	0	; () banked
  7654  00272E  6F9A               	movwf	i1lcd_4_bit_set_cursor@ret& (0+255),b
  7655  002730  EFDE  F013         	goto	i1l5967
  7656  002734                     i1l5957:
  7657                           
  7658                           ; BSR set to: 0
  7659  002734  C094  F090         	movff	i1lcd_4_bit_set_cursor@lcd,i1send_command@lcd
  7660  002738  C095  F091         	movff	i1lcd_4_bit_set_cursor@lcd+1,i1send_command@lcd+1
  7661  00273C  5197               	movf	i1lcd_4_bit_set_cursor@column& (0+255),w,b
  7662  00273E  0FC0               	addlw	192
  7663  002740  6F92               	movwf	i1send_command@command& (0+255),b
  7664  002742  EC59  F018         	call	i1_send_command	;wreg free
  7665  002746  0100               	movlb	0	; () banked
  7666  002748  6F9A               	movwf	i1lcd_4_bit_set_cursor@ret& (0+255),b
  7667  00274A  EFDE  F013         	goto	i1l5967
  7668  00274E                     i1l5959:
  7669                           
  7670                           ; BSR set to: 0
  7671  00274E  C094  F090         	movff	i1lcd_4_bit_set_cursor@lcd,i1send_command@lcd
  7672  002752  C095  F091         	movff	i1lcd_4_bit_set_cursor@lcd+1,i1send_command@lcd+1
  7673  002756  5197               	movf	i1lcd_4_bit_set_cursor@column& (0+255),w,b
  7674  002758  0F94               	addlw	148
  7675  00275A  6F92               	movwf	i1send_command@command& (0+255),b
  7676  00275C  EC59  F018         	call	i1_send_command	;wreg free
  7677  002760  0100               	movlb	0	; () banked
  7678  002762  6F9A               	movwf	i1lcd_4_bit_set_cursor@ret& (0+255),b
  7679  002764  EFDE  F013         	goto	i1l5967
  7680  002768                     i1l5961:
  7681                           
  7682                           ; BSR set to: 0
  7683  002768  C094  F090         	movff	i1lcd_4_bit_set_cursor@lcd,i1send_command@lcd
  7684  00276C  C095  F091         	movff	i1lcd_4_bit_set_cursor@lcd+1,i1send_command@lcd+1
  7685  002770  5197               	movf	i1lcd_4_bit_set_cursor@column& (0+255),w,b
  7686  002772  0FD4               	addlw	212
  7687  002774  6F92               	movwf	i1send_command@command& (0+255),b
  7688  002776  EC59  F018         	call	i1_send_command	;wreg free
  7689  00277A  0100               	movlb	0	; () banked
  7690  00277C  6F9A               	movwf	i1lcd_4_bit_set_cursor@ret& (0+255),b
  7691  00277E  EFDE  F013         	goto	i1l5967
  7692  002782                     i1l5965:
  7693                           
  7694                           ; BSR set to: 0
  7695  002782  5196               	movf	i1lcd_4_bit_set_cursor@row& (0+255),w,b
  7696  002784  6F98               	movwf	??i1_lcd_4_bit_set_cursor& (0+255),b
  7697  002786  6B99               	clrf	(??i1_lcd_4_bit_set_cursor+1)& (0+255),b
  7698                           
  7699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7700                           ; Switch size 1, requested type "simple"
  7701                           ; Number of cases is 1, Range of values is 0 to 0
  7702                           ; switch strategies available:
  7703                           ; Name         Instructions Cycles
  7704                           ; simple_byte            4     3 (average)
  7705                           ;	Chosen strategy is simple_byte
  7706  002788  5199               	movf	(??i1_lcd_4_bit_set_cursor+1)& (0+255),w,b
  7707  00278A  0A00               	xorlw	0	; case 0
  7708  00278C  B4D8               	btfsc	status,2,c
  7709  00278E  EFCB  F013         	goto	i1l7439
  7710  002792  EFDE  F013         	goto	i1l5967
  7711  002796                     i1l7439:
  7712                           
  7713                           ; BSR set to: 0
  7714                           ; Switch size 1, requested type "simple"
  7715                           ; Number of cases is 4, Range of values is 1 to 4
  7716                           ; switch strategies available:
  7717                           ; Name         Instructions Cycles
  7718                           ; simple_byte           13     7 (average)
  7719                           ;	Chosen strategy is simple_byte
  7720  002796  5198               	movf	??i1_lcd_4_bit_set_cursor& (0+255),w,b
  7721  002798  0A01               	xorlw	1	; case 1
  7722  00279A  B4D8               	btfsc	status,2,c
  7723  00279C  EF8D  F013         	goto	i1l5955
  7724  0027A0  0A03               	xorlw	3	; case 2
  7725  0027A2  B4D8               	btfsc	status,2,c
  7726  0027A4  EF9A  F013         	goto	i1l5957
  7727  0027A8  0A01               	xorlw	1	; case 3
  7728  0027AA  B4D8               	btfsc	status,2,c
  7729  0027AC  EFA7  F013         	goto	i1l5959
  7730  0027B0  0A07               	xorlw	7	; case 4
  7731  0027B2  B4D8               	btfsc	status,2,c
  7732  0027B4  EFB4  F013         	goto	i1l5961
  7733  0027B8  EFDE  F013         	goto	i1l5967
  7734  0027BC                     i1l5967:
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;ECU/LCD/lcd.c: 577:     return ret;
  7738  0027BC  519A               	movf	i1lcd_4_bit_set_cursor@ret& (0+255),w,b
  7739  0027BE                     
  7740                           ; BSR set to: 0
  7741  0027BE  0012               	return		;funcret
  7742  0027C0                     __end_ofi1_lcd_4_bit_set_cursor:
  7743                           	callstack 0
  7744                           
  7745 ;; *************** function i1_send_command *****************
  7746 ;; Defined at:
  7747 ;;		line 56 in file "ECU/LCD/lcd.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  lcd             2   16[BANK0 ] PTR const struct .
  7750 ;;		 -> lcd(6), 
  7751 ;;  command         1   18[BANK0 ] unsigned char 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  ret             1   19[BANK0 ] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      unsigned char 
  7756 ;; Registers used:
  7757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7763 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;Total ram usage:        4 bytes
  7768 ;; Hardware stack levels used: 1
  7769 ;; Hardware stack levels required when called: 11
  7770 ;; This function calls:
  7771 ;;		i1_lcd_send_4bits
  7772 ;;		i1_lcd_send_enable_4bit
  7773 ;;		i1_pin_write_value
  7774 ;; This function is called by:
  7775 ;;		i1_display_custom_char
  7776 ;;		i1_lcd_4_bit_set_cursor
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text42
  7781  0030B2                     __ptext42:
  7782                           	callstack 0
  7783  0030B2                     i1_send_command:
  7784                           	callstack 6
  7785  0030B2                     
  7786                           ;ECU/LCD/lcd.c: 59:     if(((void*)0)==lcd)
  7787  0030B2  0100               	movlb	0	; () banked
  7788  0030B4  5190               	movf	i1send_command@lcd& (0+255),w,b
  7789  0030B6  1191               	iorwf	(i1send_command@lcd+1)& (0+255),w,b
  7790  0030B8  A4D8               	btfss	status,2,c
  7791  0030BA  EF61  F018         	goto	i1u465_21
  7792  0030BE  EF63  F018         	goto	i1u465_20
  7793  0030C2                     i1u465_21:
  7794  0030C2  EF67  F018         	goto	i1l5841
  7795  0030C6                     i1u465_20:
  7796  0030C6                     
  7797                           ; BSR set to: 0
  7798                           ;ECU/LCD/lcd.c: 60:     {;ECU/LCD/lcd.c: 61:         ret=(Std_ReturnType)0x00;
  7799  0030C6  0E00               	movlw	0
  7800  0030C8  6F93               	movwf	i1send_command@ret& (0+255),b
  7801                           
  7802                           ;ECU/LCD/lcd.c: 62:     }
  7803  0030CA  EF96  F018         	goto	i1l5843
  7804  0030CE                     i1l5841:
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;ECU/LCD/lcd.c: 64:     {;ECU/LCD/lcd.c: 65:         ret=pin_write_value(&(lcd->rs),0);
  7808  0030CE  C090  F035         	movff	i1send_command@lcd,i1pin_write_value@pin
  7809  0030D2  C091  F036         	movff	i1send_command@lcd+1,i1pin_write_value@pin+1
  7810  0030D6  0E00               	movlw	0
  7811  0030D8  6E37               	movwf	i1pin_write_value@value^0,c
  7812  0030DA  EC21  F010         	call	i1_pin_write_value	;wreg free
  7813  0030DE  0100               	movlb	0	; () banked
  7814  0030E0  6F93               	movwf	i1send_command@ret& (0+255),b
  7815                           
  7816                           ;ECU/LCD/lcd.c: 67:         ret=lcd_send_4bits(lcd,command>>4);
  7817  0030E2  C090  F087         	movff	i1send_command@lcd,i1lcd_send_4bits@lcd
  7818  0030E6  C091  F088         	movff	i1send_command@lcd+1,i1lcd_send_4bits@lcd+1
  7819  0030EA  3992               	swapf	i1send_command@command& (0+255),w,b
  7820  0030EC  0B0F               	andlw	15
  7821  0030EE  6F89               	movwf	i1lcd_send_4bits@_data_command& (0+255),b
  7822  0030F0  EC52  F019         	call	i1_lcd_send_4bits	;wreg free
  7823  0030F4  0100               	movlb	0	; () banked
  7824  0030F6  6F93               	movwf	i1send_command@ret& (0+255),b
  7825                           
  7826                           ;ECU/LCD/lcd.c: 68:         ret=lcd_send_enable_4bit(lcd);
  7827  0030F8  C090  F087         	movff	i1send_command@lcd,i1lcd_send_enable_4bit@lcd
  7828  0030FC  C091  F088         	movff	i1send_command@lcd+1,i1lcd_send_enable_4bit@lcd+1
  7829  003100  EC41  F01B         	call	i1_lcd_send_enable_4bit	;wreg free
  7830  003104  0100               	movlb	0	; () banked
  7831  003106  6F93               	movwf	i1send_command@ret& (0+255),b
  7832                           
  7833                           ;ECU/LCD/lcd.c: 70:         ret=lcd_send_4bits(lcd,command);
  7834  003108  C090  F087         	movff	i1send_command@lcd,i1lcd_send_4bits@lcd
  7835  00310C  C091  F088         	movff	i1send_command@lcd+1,i1lcd_send_4bits@lcd+1
  7836  003110  C092  F089         	movff	i1send_command@command,i1lcd_send_4bits@_data_command
  7837  003114  EC52  F019         	call	i1_lcd_send_4bits	;wreg free
  7838  003118  0100               	movlb	0	; () banked
  7839  00311A  6F93               	movwf	i1send_command@ret& (0+255),b
  7840                           
  7841                           ;ECU/LCD/lcd.c: 71:         ret=lcd_send_enable_4bit(lcd);
  7842  00311C  C090  F087         	movff	i1send_command@lcd,i1lcd_send_enable_4bit@lcd
  7843  003120  C091  F088         	movff	i1send_command@lcd+1,i1lcd_send_enable_4bit@lcd+1
  7844  003124  EC41  F01B         	call	i1_lcd_send_enable_4bit	;wreg free
  7845  003128  0100               	movlb	0	; () banked
  7846  00312A  6F93               	movwf	i1send_command@ret& (0+255),b
  7847  00312C                     i1l5843:
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;ECU/LCD/lcd.c: 74:     return ret;
  7851  00312C  5193               	movf	i1send_command@ret& (0+255),w,b
  7852  00312E                     
  7853                           ; BSR set to: 0
  7854  00312E  0012               	return		;funcret
  7855  003130                     __end_ofi1_send_command:
  7856                           	callstack 0
  7857                           
  7858 ;; *************** function i1_display_char *****************
  7859 ;; Defined at:
  7860 ;;		line 82 in file "ECU/LCD/lcd.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  lcd             2   16[BANK0 ] PTR const struct .
  7863 ;;		 -> lcd(6), 
  7864 ;;  data            1   18[BANK0 ] unsigned char 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  ret             1   19[BANK0 ] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      unsigned char 
  7869 ;; Registers used:
  7870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7876 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;Total ram usage:        4 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; Hardware stack levels required when called: 11
  7883 ;; This function calls:
  7884 ;;		i1_lcd_send_4bits
  7885 ;;		i1_lcd_send_enable_4bit
  7886 ;;		i1_pin_write_value
  7887 ;; This function is called by:
  7888 ;;		i1_display_custom_char
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text43
  7893  003130                     __ptext43:
  7894                           	callstack 0
  7895  003130                     i1_display_char:
  7896                           	callstack 6
  7897  003130                     
  7898                           ;ECU/LCD/lcd.c: 85:     if(((void*)0)==lcd)
  7899  003130  0100               	movlb	0	; () banked
  7900  003132  5190               	movf	i1display_char@lcd& (0+255),w,b
  7901  003134  1191               	iorwf	(i1display_char@lcd+1)& (0+255),w,b
  7902  003136  A4D8               	btfss	status,2,c
  7903  003138  EFA0  F018         	goto	i1u491_21
  7904  00313C  EFA2  F018         	goto	i1u491_20
  7905  003140                     i1u491_21:
  7906  003140  EFA6  F018         	goto	i1l6035
  7907  003144                     i1u491_20:
  7908  003144                     
  7909                           ; BSR set to: 0
  7910                           ;ECU/LCD/lcd.c: 86:     {;ECU/LCD/lcd.c: 87:         ret=(Std_ReturnType)0x00;
  7911  003144  0E00               	movlw	0
  7912  003146  6F93               	movwf	i1display_char@ret& (0+255),b
  7913                           
  7914                           ;ECU/LCD/lcd.c: 88:     }
  7915  003148  EFD5  F018         	goto	i1l6037
  7916  00314C                     i1l6035:
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;ECU/LCD/lcd.c: 90:     {;ECU/LCD/lcd.c: 91:         ret=pin_write_value(&(lcd->rs),1);
  7920  00314C  C090  F035         	movff	i1display_char@lcd,i1pin_write_value@pin
  7921  003150  C091  F036         	movff	i1display_char@lcd+1,i1pin_write_value@pin+1
  7922  003154  0E01               	movlw	1
  7923  003156  6E37               	movwf	i1pin_write_value@value^0,c
  7924  003158  EC21  F010         	call	i1_pin_write_value	;wreg free
  7925  00315C  0100               	movlb	0	; () banked
  7926  00315E  6F93               	movwf	i1display_char@ret& (0+255),b
  7927                           
  7928                           ;ECU/LCD/lcd.c: 93:         ret=lcd_send_4bits(lcd,data>>4);
  7929  003160  C090  F087         	movff	i1display_char@lcd,i1lcd_send_4bits@lcd
  7930  003164  C091  F088         	movff	i1display_char@lcd+1,i1lcd_send_4bits@lcd+1
  7931  003168  3992               	swapf	i1display_char@data& (0+255),w,b
  7932  00316A  0B0F               	andlw	15
  7933  00316C  6F89               	movwf	i1lcd_send_4bits@_data_command& (0+255),b
  7934  00316E  EC52  F019         	call	i1_lcd_send_4bits	;wreg free
  7935  003172  0100               	movlb	0	; () banked
  7936  003174  6F93               	movwf	i1display_char@ret& (0+255),b
  7937                           
  7938                           ;ECU/LCD/lcd.c: 94:         ret=lcd_send_enable_4bit(lcd);
  7939  003176  C090  F087         	movff	i1display_char@lcd,i1lcd_send_enable_4bit@lcd
  7940  00317A  C091  F088         	movff	i1display_char@lcd+1,i1lcd_send_enable_4bit@lcd+1
  7941  00317E  EC41  F01B         	call	i1_lcd_send_enable_4bit	;wreg free
  7942  003182  0100               	movlb	0	; () banked
  7943  003184  6F93               	movwf	i1display_char@ret& (0+255),b
  7944                           
  7945                           ;ECU/LCD/lcd.c: 96:         ret=lcd_send_4bits(lcd,data);
  7946  003186  C090  F087         	movff	i1display_char@lcd,i1lcd_send_4bits@lcd
  7947  00318A  C091  F088         	movff	i1display_char@lcd+1,i1lcd_send_4bits@lcd+1
  7948  00318E  C092  F089         	movff	i1display_char@data,i1lcd_send_4bits@_data_command
  7949  003192  EC52  F019         	call	i1_lcd_send_4bits	;wreg free
  7950  003196  0100               	movlb	0	; () banked
  7951  003198  6F93               	movwf	i1display_char@ret& (0+255),b
  7952                           
  7953                           ;ECU/LCD/lcd.c: 97:         ret=lcd_send_enable_4bit(lcd);
  7954  00319A  C090  F087         	movff	i1display_char@lcd,i1lcd_send_enable_4bit@lcd
  7955  00319E  C091  F088         	movff	i1display_char@lcd+1,i1lcd_send_enable_4bit@lcd+1
  7956  0031A2  EC41  F01B         	call	i1_lcd_send_enable_4bit	;wreg free
  7957  0031A6  0100               	movlb	0	; () banked
  7958  0031A8  6F93               	movwf	i1display_char@ret& (0+255),b
  7959  0031AA                     i1l6037:
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;ECU/LCD/lcd.c: 100:     return ret;
  7963  0031AA  5193               	movf	i1display_char@ret& (0+255),w,b
  7964  0031AC                     
  7965                           ; BSR set to: 0
  7966  0031AC  0012               	return		;funcret
  7967  0031AE                     __end_ofi1_display_char:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function i1_lcd_send_enable_4bit *****************
  7971 ;; Defined at:
  7972 ;;		line 511 in file "ECU/LCD/lcd.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  lcd             2    7[BANK0 ] PTR const struct .
  7975 ;;		 -> lcd(6), 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  ret             1    9[BANK0 ] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      unsigned char 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;Total ram usage:        3 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; Hardware stack levels required when called: 10
  7994 ;; This function calls:
  7995 ;;		i1_pin_write_value
  7996 ;; This function is called by:
  7997 ;;		i1_send_command
  7998 ;;		i1_display_char
  7999 ;;		i1_display_char_at_position
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text44
  8004  003682                     __ptext44:
  8005                           	callstack 0
  8006  003682                     i1_lcd_send_enable_4bit:
  8007                           	callstack 6
  8008  003682                     
  8009                           ;ECU/LCD/lcd.c: 514:     if(((void*)0)==lcd)
  8010  003682  0100               	movlb	0	; () banked
  8011  003684  5187               	movf	i1lcd_send_enable_4bit@lcd& (0+255),w,b
  8012  003686  1188               	iorwf	(i1lcd_send_enable_4bit@lcd+1)& (0+255),w,b
  8013  003688  A4D8               	btfss	status,2,c
  8014  00368A  EF49  F01B         	goto	i1u442_21
  8015  00368E  EF4B  F01B         	goto	i1u442_20
  8016  003692                     i1u442_21:
  8017  003692  EF4F  F01B         	goto	i1l5695
  8018  003696                     i1u442_20:
  8019  003696                     
  8020                           ; BSR set to: 0
  8021                           ;ECU/LCD/lcd.c: 515:     {;ECU/LCD/lcd.c: 516:         ret=(Std_ReturnType)0x00;
  8022  003696  0E00               	movlw	0
  8023  003698  6F89               	movwf	i1lcd_send_enable_4bit@ret& (0+255),b
  8024                           
  8025                           ;ECU/LCD/lcd.c: 517:     }
  8026  00369A  EF6A  F01B         	goto	i1l5701
  8027  00369E                     i1l5695:
  8028                           
  8029                           ; BSR set to: 0
  8030  00369E  0E01               	movlw	1
  8031  0036A0  2587               	addwf	i1lcd_send_enable_4bit@lcd& (0+255),w,b
  8032  0036A2  6E35               	movwf	i1pin_write_value@pin^0,c
  8033  0036A4  0E00               	movlw	0
  8034  0036A6  2188               	addwfc	(i1lcd_send_enable_4bit@lcd+1)& (0+255),w,b
  8035  0036A8  6E36               	movwf	(i1pin_write_value@pin+1)^0,c
  8036  0036AA  0E01               	movlw	1
  8037  0036AC  6E37               	movwf	i1pin_write_value@value^0,c
  8038  0036AE  EC21  F010         	call	i1_pin_write_value	;wreg free
  8039  0036B2                     
  8040                           ;ECU/LCD/lcd.c: 521:         _delay((unsigned long)((10)*(8000000UL/4000000.0)));
  8041  0036B2  0E06               	movlw	6
  8042  0036B4                     i1u620_27:
  8043  0036B4  2EE8               	decfsz	wreg,f,c
  8044  0036B6  D7FE               	bra	i1u620_27
  8045  0036B8  D000               	nop2	
  8046  0036BA                     
  8047                           ;ECU/LCD/lcd.c: 522:         ret=pin_write_value(&(lcd->en),0);
  8048  0036BA  0E01               	movlw	1
  8049  0036BC  0100               	movlb	0	; () banked
  8050  0036BE  2587               	addwf	i1lcd_send_enable_4bit@lcd& (0+255),w,b
  8051  0036C0  6E35               	movwf	i1pin_write_value@pin^0,c
  8052  0036C2  0E00               	movlw	0
  8053  0036C4  2188               	addwfc	(i1lcd_send_enable_4bit@lcd+1)& (0+255),w,b
  8054  0036C6  6E36               	movwf	(i1pin_write_value@pin+1)^0,c
  8055  0036C8  0E00               	movlw	0
  8056  0036CA  6E37               	movwf	i1pin_write_value@value^0,c
  8057  0036CC  EC21  F010         	call	i1_pin_write_value	;wreg free
  8058  0036D0  0100               	movlb	0	; () banked
  8059  0036D2  6F89               	movwf	i1lcd_send_enable_4bit@ret& (0+255),b
  8060  0036D4                     i1l5701:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;ECU/LCD/lcd.c: 525:     return ret;
  8064  0036D4  5189               	movf	i1lcd_send_enable_4bit@ret& (0+255),w,b
  8065  0036D6                     
  8066                           ; BSR set to: 0
  8067  0036D6  0012               	return		;funcret
  8068  0036D8                     __end_ofi1_lcd_send_enable_4bit:
  8069                           	callstack 0
  8070                           
  8071 ;; *************** function i1_lcd_send_4bits *****************
  8072 ;; Defined at:
  8073 ;;		line 489 in file "ECU/LCD/lcd.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  lcd             2    7[BANK0 ] PTR const struct .
  8076 ;;		 -> lcd(6), 
  8077 ;;  _data_comman    1    9[BANK0 ] unsigned char 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  counter         1   15[BANK0 ] unsigned char 
  8080 ;;  ret             1   14[BANK0 ] unsigned char 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  1    wreg      unsigned char 
  8083 ;; Registers used:
  8084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8090 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8093 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8094 ;;Total ram usage:        9 bytes
  8095 ;; Hardware stack levels used: 1
  8096 ;; Hardware stack levels required when called: 10
  8097 ;; This function calls:
  8098 ;;		i1_pin_write_value
  8099 ;; This function is called by:
  8100 ;;		i1_send_command
  8101 ;;		i1_display_char
  8102 ;;		i1_display_char_at_position
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text45
  8107  0032A4                     __ptext45:
  8108                           	callstack 0
  8109  0032A4                     i1_lcd_send_4bits:
  8110                           	callstack 6
  8111  0032A4                     
  8112                           ;ECU/LCD/lcd.c: 492:     Std_ReturnType ret=(Std_ReturnType)0x01;
  8113  0032A4  0E01               	movlw	1
  8114  0032A6  0100               	movlb	0	; () banked
  8115  0032A8  6F8E               	movwf	i1lcd_send_4bits@ret& (0+255),b
  8116  0032AA                     
  8117                           ; BSR set to: 0
  8118                           ;ECU/LCD/lcd.c: 493:     if(((void*)0)==lcd)
  8119  0032AA  5187               	movf	i1lcd_send_4bits@lcd& (0+255),w,b
  8120  0032AC  1188               	iorwf	(i1lcd_send_4bits@lcd+1)& (0+255),w,b
  8121  0032AE  A4D8               	btfss	status,2,c
  8122  0032B0  EF5C  F019         	goto	i1u439_21
  8123  0032B4  EF5E  F019         	goto	i1u439_20
  8124  0032B8                     i1u439_21:
  8125  0032B8  EF62  F019         	goto	i1l5673
  8126  0032BC                     i1u439_20:
  8127  0032BC                     
  8128                           ; BSR set to: 0
  8129                           ;ECU/LCD/lcd.c: 494:     {;ECU/LCD/lcd.c: 495:         ret=(Std_ReturnType)0x00;
  8130  0032BC  0E00               	movlw	0
  8131  0032BE  6F8E               	movwf	i1lcd_send_4bits@ret& (0+255),b
  8132                           
  8133                           ;ECU/LCD/lcd.c: 496:     }
  8134  0032C0  EF8D  F019         	goto	i1l5685
  8135  0032C4                     i1l5673:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;ECU/LCD/lcd.c: 498:     {;ECU/LCD/lcd.c: 499:         for(counter=0;counter<4;counter++
      +                          )
  8139  0032C4  0E00               	movlw	0
  8140  0032C6  6F8F               	movwf	i1lcd_send_4bits@counter& (0+255),b
  8141  0032C8                     i1l5679:
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;ECU/LCD/lcd.c: 500:         {;ECU/LCD/lcd.c: 501:             ret=pin_write_value(&(lcd
      +                          ->_4_bit[counter]),(_data_command>>counter)&(uint8)0x01);
  8145  0032C8  518F               	movf	i1lcd_send_4bits@counter& (0+255),w,b
  8146  0032CA  2587               	addwf	i1lcd_send_4bits@lcd& (0+255),w,b
  8147  0032CC  6F8A               	movwf	??i1_lcd_send_4bits& (0+255),b
  8148  0032CE  0E00               	movlw	0
  8149  0032D0  2188               	addwfc	(i1lcd_send_4bits@lcd+1)& (0+255),w,b
  8150  0032D2  6F8B               	movwf	(??i1_lcd_send_4bits+1)& (0+255),b
  8151  0032D4  0E02               	movlw	2
  8152  0032D6  258A               	addwf	??i1_lcd_send_4bits& (0+255),w,b
  8153  0032D8  6E35               	movwf	i1pin_write_value@pin^0,c
  8154  0032DA  0E00               	movlw	0
  8155  0032DC  218B               	addwfc	(??i1_lcd_send_4bits+1)& (0+255),w,b
  8156  0032DE  6E36               	movwf	(i1pin_write_value@pin+1)^0,c
  8157  0032E0  C08F  F08C         	movff	i1lcd_send_4bits@counter,??i1_lcd_send_4bits+2
  8158  0032E4  C089  F08D         	movff	i1lcd_send_4bits@_data_command,??i1_lcd_send_4bits+3
  8159  0032E8  2B8C               	incf	(??i1_lcd_send_4bits+2)& (0+255),f,b
  8160  0032EA  EF79  F019         	goto	i1u440_24
  8161  0032EE                     i1u440_25:
  8162  0032EE  90D8               	bcf	status,0,c
  8163  0032F0  338D               	rrcf	(??i1_lcd_send_4bits+3)& (0+255),f,b
  8164  0032F2                     i1u440_24:
  8165  0032F2  2F8C               	decfsz	(??i1_lcd_send_4bits+2)& (0+255),f,b
  8166  0032F4  EF77  F019         	goto	i1u440_25
  8167  0032F8  0100               	movlb	0	; () banked
  8168  0032FA  518D               	movf	(??i1_lcd_send_4bits+3)& (0+255),w,b
  8169  0032FC  0B01               	andlw	1
  8170  0032FE  6E37               	movwf	i1pin_write_value@value^0,c
  8171  003300  EC21  F010         	call	i1_pin_write_value	;wreg free
  8172  003304  0100               	movlb	0	; () banked
  8173  003306  6F8E               	movwf	i1lcd_send_4bits@ret& (0+255),b
  8174  003308                     
  8175                           ; BSR set to: 0
  8176                           ;ECU/LCD/lcd.c: 502:         }
  8177  003308  2B8F               	incf	i1lcd_send_4bits@counter& (0+255),f,b
  8178  00330A                     
  8179                           ; BSR set to: 0
  8180  00330A  0E03               	movlw	3
  8181  00330C  658F               	cpfsgt	i1lcd_send_4bits@counter& (0+255),b
  8182  00330E  EF8B  F019         	goto	i1u441_21
  8183  003312  EF8D  F019         	goto	i1u441_20
  8184  003316                     i1u441_21:
  8185  003316  EF64  F019         	goto	i1l5679
  8186  00331A                     i1u441_20:
  8187  00331A                     i1l5685:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;ECU/LCD/lcd.c: 504:     return ret;
  8191  00331A  518E               	movf	i1lcd_send_4bits@ret& (0+255),w,b
  8192  00331C                     
  8193                           ; BSR set to: 0
  8194  00331C  0012               	return		;funcret
  8195  00331E                     __end_ofi1_lcd_send_4bits:
  8196                           	callstack 0
  8197                           
  8198 ;; *************** function i1_pin_write_value *****************
  8199 ;; Defined at:
  8200 ;;		line 61 in file "MCAL/GPIO/gpio.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  pin             2   52[COMRAM] PTR const struct .
  8203 ;;		 -> lcd._4_bit(4), lcd(6), relay_off@relay_status(1), relay_on@relay_status(1), 
  8204 ;;		 -> led_turn_off@led_x(1), led_turn_on@led_x(1), 
  8205 ;;  value           1   54[COMRAM] unsigned char 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  ret             1    6[BANK0 ] unsigned char 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      unsigned char 
  8210 ;; Registers used:
  8211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8217 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Totals:         3       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;Total ram usage:       10 bytes
  8222 ;; Hardware stack levels used: 1
  8223 ;; Hardware stack levels required when called: 9
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		i1_send_command
  8228 ;;		i1_display_char
  8229 ;;		i1_display_char_at_position
  8230 ;;		i1_lcd_send_4bits
  8231 ;;		i1_lcd_send_enable_4bit
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text46
  8236  002042                     __ptext46:
  8237                           	callstack 0
  8238  002042                     i1_pin_write_value:
  8239                           	callstack 7
  8240  002042                     
  8241                           ;MCAL/GPIO/gpio.c: 61: Std_ReturnType pin_write_value(const pin_config *pin,uint8 value)
      +                          ;MCAL/GPIO/gpio.c: 62: {;MCAL/GPIO/gpio.c: 63:     Std_ReturnType ret = (Std_ReturnType)
      +                          0x01;
  8242  002042  0E01               	movlw	1
  8243  002044  0100               	movlb	0	; () banked
  8244  002046  6F86               	movwf	i1pin_write_value@ret& (0+255),b
  8245  002048                     
  8246                           ; BSR set to: 0
  8247                           ;MCAL/GPIO/gpio.c: 64:     if(((void*)0) == pin || pin->pin > 8 -1){
  8248  002048  5035               	movf	i1pin_write_value@pin^0,w,c
  8249  00204A  1036               	iorwf	(i1pin_write_value@pin+1)^0,w,c
  8250  00204C  B4D8               	btfsc	status,2,c
  8251  00204E  EF2B  F010         	goto	i1u433_21
  8252  002052  EF2D  F010         	goto	i1u433_20
  8253  002056                     i1u433_21:
  8254  002056  EF3E  F010         	goto	i1l5631
  8255  00205A                     i1u433_20:
  8256  00205A                     
  8257                           ; BSR set to: 0
  8258  00205A  C035  FFD9         	movff	i1pin_write_value@pin,fsr2l
  8259  00205E  C036  FFDA         	movff	i1pin_write_value@pin+1,fsr2h
  8260  002062  30DF               	rrcf	223,w,c
  8261  002064  32E8               	rrcf	wreg,f,c
  8262  002066  32E8               	rrcf	wreg,f,c
  8263  002068  0B07               	andlw	7
  8264  00206A  6F80               	movwf	??i1_pin_write_value& (0+255),b
  8265  00206C  0E07               	movlw	7
  8266  00206E  6580               	cpfsgt	??i1_pin_write_value& (0+255),b
  8267  002070  EF3C  F010         	goto	i1u434_21
  8268  002074  EF3E  F010         	goto	i1u434_20
  8269  002078                     i1u434_21:
  8270  002078  EFA3  F010         	goto	i1l5639
  8271  00207C                     i1u434_20:
  8272  00207C                     i1l5631:
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;MCAL/GPIO/gpio.c: 65:         ret = (Std_ReturnType)0x00;
  8276  00207C  0E00               	movlw	0
  8277  00207E  6F86               	movwf	i1pin_write_value@ret& (0+255),b
  8278                           
  8279                           ;MCAL/GPIO/gpio.c: 66:     }
  8280  002080  EFB8  F010         	goto	i1l5641
  8281  002084                     i1l5633:
  8282                           
  8283                           ; BSR set to: 0
  8284  002084  C035  FFD9         	movff	i1pin_write_value@pin,fsr2l
  8285  002088  C036  FFDA         	movff	i1pin_write_value@pin+1,fsr2h
  8286  00208C  30DF               	rrcf	223,w,c
  8287  00208E  32E8               	rrcf	wreg,f,c
  8288  002090  32E8               	rrcf	wreg,f,c
  8289  002092  0B07               	andlw	7
  8290  002094  6F80               	movwf	??i1_pin_write_value& (0+255),b
  8291  002096  0E01               	movlw	1
  8292  002098  6F81               	movwf	(??i1_pin_write_value+1)& (0+255),b
  8293  00209A  2B80               	incf	??i1_pin_write_value& (0+255),f,b
  8294  00209C  EF52  F010         	goto	i1u435_24
  8295  0020A0                     i1u435_25:
  8296  0020A0  90D8               	bcf	status,0,c
  8297  0020A2  3781               	rlcf	(??i1_pin_write_value+1)& (0+255),f,b
  8298  0020A4                     i1u435_24:
  8299  0020A4  2F80               	decfsz	??i1_pin_write_value& (0+255),f,b
  8300  0020A6  EF50  F010         	goto	i1u435_25
  8301  0020AA  C035  FFD9         	movff	i1pin_write_value@pin,fsr2l
  8302  0020AE  C036  FFDA         	movff	i1pin_write_value@pin+1,fsr2h
  8303  0020B2  50DF               	movf	223,w,c
  8304  0020B4  0B07               	andlw	7
  8305  0020B6  0100               	movlb	0	; () banked
  8306  0020B8  6F82               	movwf	(??i1_pin_write_value+2)& (0+255),b
  8307  0020BA  5182               	movf	(??i1_pin_write_value+2)& (0+255),w,b
  8308  0020BC  0D02               	mullw	2
  8309  0020BE  0EB4               	movlw	low _LAT_array
  8310  0020C0  24F3               	addwf	243,w,c
  8311  0020C2  6ED9               	movwf	fsr2l,c
  8312  0020C4  0E00               	movlw	high _LAT_array
  8313  0020C6  20F4               	addwfc	prodh,w,c
  8314  0020C8  6EDA               	movwf	fsr2h,c
  8315  0020CA  CFDE F083          	movff	postinc2,??i1_pin_write_value+3
  8316  0020CE  CFDD F084          	movff	postdec2,??i1_pin_write_value+4
  8317  0020D2  C083  FFD9         	movff	??i1_pin_write_value+3,fsr2l
  8318  0020D6  C084  FFDA         	movff	??i1_pin_write_value+4,fsr2h
  8319  0020DA  5181               	movf	(??i1_pin_write_value+1)& (0+255),w,b
  8320  0020DC  12DF               	iorwf	indf2,f,c
  8321  0020DE  EFB8  F010         	goto	i1l5641
  8322  0020E2                     i1l5635:
  8323                           
  8324                           ; BSR set to: 0
  8325  0020E2  C035  FFD9         	movff	i1pin_write_value@pin,fsr2l
  8326  0020E6  C036  FFDA         	movff	i1pin_write_value@pin+1,fsr2h
  8327  0020EA  30DF               	rrcf	223,w,c
  8328  0020EC  32E8               	rrcf	wreg,f,c
  8329  0020EE  32E8               	rrcf	wreg,f,c
  8330  0020F0  0B07               	andlw	7
  8331  0020F2  6F80               	movwf	??i1_pin_write_value& (0+255),b
  8332  0020F4  0E01               	movlw	1
  8333  0020F6  6F81               	movwf	(??i1_pin_write_value+1)& (0+255),b
  8334  0020F8  2B80               	incf	??i1_pin_write_value& (0+255),f,b
  8335  0020FA  EF81  F010         	goto	i1u436_24
  8336  0020FE                     i1u436_25:
  8337  0020FE  90D8               	bcf	status,0,c
  8338  002100  3781               	rlcf	(??i1_pin_write_value+1)& (0+255),f,b
  8339  002102                     i1u436_24:
  8340  002102  2F80               	decfsz	??i1_pin_write_value& (0+255),f,b
  8341  002104  EF7F  F010         	goto	i1u436_25
  8342  002108  0100               	movlb	0	; () banked
  8343  00210A  5181               	movf	(??i1_pin_write_value+1)& (0+255),w,b
  8344  00210C  0AFF               	xorlw	255
  8345  00210E  6F82               	movwf	(??i1_pin_write_value+2)& (0+255),b
  8346  002110  C035  FFD9         	movff	i1pin_write_value@pin,fsr2l
  8347  002114  C036  FFDA         	movff	i1pin_write_value@pin+1,fsr2h
  8348  002118  50DF               	movf	223,w,c
  8349  00211A  0B07               	andlw	7
  8350  00211C  6F83               	movwf	(??i1_pin_write_value+3)& (0+255),b
  8351  00211E  5183               	movf	(??i1_pin_write_value+3)& (0+255),w,b
  8352  002120  0D02               	mullw	2
  8353  002122  0EB4               	movlw	low _LAT_array
  8354  002124  24F3               	addwf	243,w,c
  8355  002126  6ED9               	movwf	fsr2l,c
  8356  002128  0E00               	movlw	high _LAT_array
  8357  00212A  20F4               	addwfc	prodh,w,c
  8358  00212C  6EDA               	movwf	fsr2h,c
  8359  00212E  CFDE F084          	movff	postinc2,??i1_pin_write_value+4
  8360  002132  CFDD F085          	movff	postdec2,??i1_pin_write_value+5
  8361  002136  C084  FFD9         	movff	??i1_pin_write_value+4,fsr2l
  8362  00213A  C085  FFDA         	movff	??i1_pin_write_value+5,fsr2h
  8363  00213E  5182               	movf	(??i1_pin_write_value+2)& (0+255),w,b
  8364  002140  16DF               	andwf	indf2,f,c
  8365  002142  EFB8  F010         	goto	i1l5641
  8366  002146                     i1l5639:
  8367                           
  8368                           ; BSR set to: 0
  8369  002146  5037               	movf	i1pin_write_value@value^0,w,c
  8370  002148  6F80               	movwf	??i1_pin_write_value& (0+255),b
  8371  00214A  6B81               	clrf	(??i1_pin_write_value+1)& (0+255),b
  8372                           
  8373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8374                           ; Switch size 1, requested type "simple"
  8375                           ; Number of cases is 1, Range of values is 0 to 0
  8376                           ; switch strategies available:
  8377                           ; Name         Instructions Cycles
  8378                           ; simple_byte            4     3 (average)
  8379                           ;	Chosen strategy is simple_byte
  8380  00214C  5181               	movf	(??i1_pin_write_value+1)& (0+255),w,b
  8381  00214E  0A00               	xorlw	0	; case 0
  8382  002150  B4D8               	btfsc	status,2,c
  8383  002152  EFAD  F010         	goto	i1l7441
  8384  002156  EF3E  F010         	goto	i1l5631
  8385  00215A                     i1l7441:
  8386                           
  8387                           ; BSR set to: 0
  8388                           ; Switch size 1, requested type "simple"
  8389                           ; Number of cases is 2, Range of values is 0 to 1
  8390                           ; switch strategies available:
  8391                           ; Name         Instructions Cycles
  8392                           ; simple_byte            7     4 (average)
  8393                           ;	Chosen strategy is simple_byte
  8394  00215A  5180               	movf	??i1_pin_write_value& (0+255),w,b
  8395  00215C  0A00               	xorlw	0	; case 0
  8396  00215E  B4D8               	btfsc	status,2,c
  8397  002160  EF71  F010         	goto	i1l5635
  8398  002164  0A01               	xorlw	1	; case 1
  8399  002166  B4D8               	btfsc	status,2,c
  8400  002168  EF42  F010         	goto	i1l5633
  8401  00216C  EF3E  F010         	goto	i1l5631
  8402  002170                     i1l5641:
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;MCAL/GPIO/gpio.c: 76:     return ret;
  8406  002170  5186               	movf	i1pin_write_value@ret& (0+255),w,b
  8407  002172                     
  8408                           ; BSR set to: 0
  8409  002172  0012               	return		;funcret
  8410  002174                     __end_ofi1_pin_write_value:
  8411                           	callstack 0
  8412                           
  8413 ;; *************** function _InterruptManagerHigh *****************
  8414 ;; Defined at:
  8415 ;;		line 6 in file "MCAL/INTERRUPT/interrupt_manager.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;Total ram usage:        6 bytes
  8434 ;; Hardware stack levels used: 1
  8435 ;; Hardware stack levels required when called: 8
  8436 ;; This function calls:
  8437 ;;		i2_INT_0_ISR
  8438 ;;		i2_INT_1_ISR
  8439 ;;		i2_INT_2_ISR
  8440 ;; This function is called by:
  8441 ;;		Interrupt level 2
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	intcode
  8446  000008                     __pintcode:
  8447                           	callstack 0
  8448  000008                     _InterruptManagerHigh:
  8449                           	callstack 4
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;incstack = 0
  8453  000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8454  00000A  ED83  F016         	call	int_func,f	;refresh shadow registers
  8455                           
  8456                           	psect	intcode_body
  8457  002D06                     __pintcode_body:
  8458                           	callstack 4
  8459  002D06                     int_func:
  8460                           	callstack 4
  8461  002D06  0006               	pop		; remove dummy address from shadow register refresh
  8462  002D08  CFFA F02F          	movff	pclath,??_InterruptManagerHigh
  8463  002D0C  CFFB F030          	movff	pclatu,??_InterruptManagerHigh+1
  8464  002D10  CFD9 F031          	movff	fsr2l,??_InterruptManagerHigh+2
  8465  002D14  CFDA F032          	movff	fsr2h,??_InterruptManagerHigh+3
  8466  002D18  CFF3 F033          	movff	prodl,??_InterruptManagerHigh+4
  8467  002D1C  CFF4 F034          	movff	prodh,??_InterruptManagerHigh+5
  8468  002D20                     
  8469                           ;MCAL/INTERRUPT/interrupt_manager.c: 9:     if((1 == INTCONbits.INT0IE) && (1 == INTCONb
      +                          its.INT0IF))
  8470  002D20  A8F2               	btfss	242,4,c	;volatile
  8471  002D22  EF95  F016         	goto	i2u596_41
  8472  002D26  EF97  F016         	goto	i2u596_40
  8473  002D2A                     i2u596_41:
  8474  002D2A  EFA0  F016         	goto	i2l558
  8475  002D2E                     i2u596_40:
  8476  002D2E  A2F2               	btfss	242,1,c	;volatile
  8477  002D30  EF9C  F016         	goto	i2u597_41
  8478  002D34  EF9E  F016         	goto	i2u597_40
  8479  002D38                     i2u597_41:
  8480  002D38  EFA0  F016         	goto	i2l558
  8481  002D3C                     i2u597_40:
  8482  002D3C                     
  8483                           ;MCAL/INTERRUPT/interrupt_manager.c: 10:     {;MCAL/INTERRUPT/interrupt_manager.c: 11:  
      +                                 INT_0_ISR();
  8484  002D3C  EC97  F01C         	call	i2_INT_0_ISR	;wreg free
  8485  002D40                     i2l558:
  8486                           
  8487                           ;MCAL/INTERRUPT/interrupt_manager.c: 15:     if((1 == INTCON3bits.INT1IE) && (1 == INTCO
      +                          N3bits.INT1IE))
  8488  002D40  A6F0               	btfss	240,3,c	;volatile
  8489  002D42  EFA5  F016         	goto	i2u598_41
  8490  002D46  EFA7  F016         	goto	i2u598_40
  8491  002D4A                     i2u598_41:
  8492  002D4A  EFB0  F016         	goto	i2l560
  8493  002D4E                     i2u598_40:
  8494  002D4E  A6F0               	btfss	240,3,c	;volatile
  8495  002D50  EFAC  F016         	goto	i2u599_41
  8496  002D54  EFAE  F016         	goto	i2u599_40
  8497  002D58                     i2u599_41:
  8498  002D58  EFB0  F016         	goto	i2l560
  8499  002D5C                     i2u599_40:
  8500  002D5C                     
  8501                           ;MCAL/INTERRUPT/interrupt_manager.c: 16:     {;MCAL/INTERRUPT/interrupt_manager.c: 17:  
      +                                 INT_1_ISR();
  8502  002D5C  EC7F  F01C         	call	i2_INT_1_ISR	;wreg free
  8503  002D60                     i2l560:
  8504                           
  8505                           ;MCAL/INTERRUPT/interrupt_manager.c: 21:     if((1 == INTCON3bits.INT2IE) && (1 == INTCO
      +                          N3bits.INT2IF))
  8506  002D60  A8F0               	btfss	240,4,c	;volatile
  8507  002D62  EFB5  F016         	goto	i2u600_41
  8508  002D66  EFB7  F016         	goto	i2u600_40
  8509  002D6A                     i2u600_41:
  8510  002D6A  EFC0  F016         	goto	i2l563
  8511  002D6E                     i2u600_40:
  8512  002D6E  A2F0               	btfss	240,1,c	;volatile
  8513  002D70  EFBC  F016         	goto	i2u601_41
  8514  002D74  EFBE  F016         	goto	i2u601_40
  8515  002D78                     i2u601_41:
  8516  002D78  EFC0  F016         	goto	i2l563
  8517  002D7C                     i2u601_40:
  8518  002D7C                     
  8519                           ;MCAL/INTERRUPT/interrupt_manager.c: 22:     {;MCAL/INTERRUPT/interrupt_manager.c: 23:  
      +                                 INT_2_ISR();
  8520  002D7C  EC67  F01C         	call	i2_INT_2_ISR	;wreg free
  8521  002D80                     i2l563:
  8522  002D80  C034  FFF4         	movff	??_InterruptManagerHigh+5,prodh
  8523  002D84  C033  FFF3         	movff	??_InterruptManagerHigh+4,prodl
  8524  002D88  C032  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  8525  002D8C  C031  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  8526  002D90  C030  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  8527  002D94  C02F  FFFA         	movff	??_InterruptManagerHigh,pclath
  8528  002D98  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8529  002D9A  0011               	retfie		f
  8530  002D9C                     __end_of_InterruptManagerHigh:
  8531                           	callstack 0
  8532                           
  8533 ;; *************** function i2_INT_2_ISR *****************
  8534 ;; Defined at:
  8535 ;;		line 332 in file "MCAL/INTERRUPT/external_interrupt.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 7
  8556 ;; This function calls:
  8557 ;;		Absolute function
  8558 ;;		i2_int_1_handler
  8559 ;; This function is called by:
  8560 ;;		_InterruptManagerHigh
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text48
  8565  0038CE                     __ptext48:
  8566                           	callstack 0
  8567  0038CE                     i2_INT_2_ISR:
  8568                           	callstack 4
  8569  0038CE                     
  8570                           ;MCAL/INTERRUPT/external_interrupt.c: 334:     INTCON3bits.INT2IF=0;
  8571  0038CE  92F0               	bcf	240,1,c	;volatile
  8572  0038D0                     
  8573                           ;MCAL/INTERRUPT/external_interrupt.c: 335:     if(int2_handler) int2_handler();
  8574  0038D0  0100               	movlb	0	; () banked
  8575  0038D2  51CE               	movf	_int2_handler& (0+255),w,b
  8576  0038D4  11CF               	iorwf	(_int2_handler+1)& (0+255),w,b
  8577  0038D6  B4D8               	btfsc	status,2,c
  8578  0038D8  EF70  F01C         	goto	i2u556_41
  8579  0038DC  EF72  F01C         	goto	i2u556_40
  8580  0038E0                     i2u556_41:
  8581  0038E0  EF7E  F01C         	goto	i2l542
  8582  0038E4                     i2u556_40:
  8583  0038E4                     
  8584                           ; BSR set to: 0
  8585  0038E4  D802               	call	i2u557_48
  8586  0038E6  EF7E  F01C         	goto	i2u557_49
  8587  0038EA                     i2u557_48:
  8588  0038EA  0005               	push	
  8589  0038EC  6EFA               	movwf	pclath,c
  8590  0038EE  51CE               	movf	_int2_handler& (0+255),w,b
  8591  0038F0  6EFD               	movwf	tosl,c
  8592  0038F2  51CF               	movf	(_int2_handler+1)& (0+255),w,b
  8593  0038F4  6EFE               	movwf	tosh,c
  8594  0038F6  6AFF               	clrf	tosu,c
  8595  0038F8  50FA               	movf	pclath,w,c
  8596  0038FA  0012               	return		;indir
  8597  0038FC                     i2u557_49:
  8598  0038FC                     i2l542:
  8599  0038FC  0012               	return		;funcret
  8600  0038FE                     __end_ofi2_INT_2_ISR:
  8601                           	callstack 0
  8602                           
  8603 ;; *************** function i2_INT_1_ISR *****************
  8604 ;; Defined at:
  8605 ;;		line 326 in file "MCAL/INTERRUPT/external_interrupt.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8623 ;;Total ram usage:        0 bytes
  8624 ;; Hardware stack levels used: 1
  8625 ;; Hardware stack levels required when called: 7
  8626 ;; This function calls:
  8627 ;;		Absolute function
  8628 ;;		i2_int_1_handler
  8629 ;; This function is called by:
  8630 ;;		_InterruptManagerHigh
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text49
  8635  0038FE                     __ptext49:
  8636                           	callstack 0
  8637  0038FE                     i2_INT_1_ISR:
  8638                           	callstack 4
  8639  0038FE                     
  8640                           ;MCAL/INTERRUPT/external_interrupt.c: 328:       INTCON3bits.INT1IF=0;
  8641  0038FE  90F0               	bcf	240,0,c	;volatile
  8642  003900                     
  8643                           ;MCAL/INTERRUPT/external_interrupt.c: 329:       if(int1_handler) int1_handler();
  8644  003900  0100               	movlb	0	; () banked
  8645  003902  51D0               	movf	_int1_handler& (0+255),w,b
  8646  003904  11D1               	iorwf	(_int1_handler+1)& (0+255),w,b
  8647  003906  B4D8               	btfsc	status,2,c
  8648  003908  EF88  F01C         	goto	i2u554_41
  8649  00390C  EF8A  F01C         	goto	i2u554_40
  8650  003910                     i2u554_41:
  8651  003910  EF96  F01C         	goto	i2l538
  8652  003914                     i2u554_40:
  8653  003914                     
  8654                           ; BSR set to: 0
  8655  003914  D802               	call	i2u555_48
  8656  003916  EF96  F01C         	goto	i2u555_49
  8657  00391A                     i2u555_48:
  8658  00391A  0005               	push	
  8659  00391C  6EFA               	movwf	pclath,c
  8660  00391E  51D0               	movf	_int1_handler& (0+255),w,b
  8661  003920  6EFD               	movwf	tosl,c
  8662  003922  51D1               	movf	(_int1_handler+1)& (0+255),w,b
  8663  003924  6EFE               	movwf	tosh,c
  8664  003926  6AFF               	clrf	tosu,c
  8665  003928  50FA               	movf	pclath,w,c
  8666  00392A  0012               	return		;indir
  8667  00392C                     i2u555_49:
  8668  00392C                     i2l538:
  8669  00392C  0012               	return		;funcret
  8670  00392E                     __end_ofi2_INT_1_ISR:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function i2_INT_0_ISR *****************
  8674 ;; Defined at:
  8675 ;;		line 320 in file "MCAL/INTERRUPT/external_interrupt.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;Total ram usage:        0 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; Hardware stack levels required when called: 7
  8696 ;; This function calls:
  8697 ;;		Absolute function
  8698 ;;		i2_int_1_handler
  8699 ;; This function is called by:
  8700 ;;		_InterruptManagerHigh
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text50
  8705  00392E                     __ptext50:
  8706                           	callstack 0
  8707  00392E                     i2_INT_0_ISR:
  8708                           	callstack 4
  8709  00392E                     
  8710                           ;MCAL/INTERRUPT/external_interrupt.c: 322:     INTCONbits.INT0IF=0;
  8711  00392E  92F2               	bcf	242,1,c	;volatile
  8712  003930                     
  8713                           ;MCAL/INTERRUPT/external_interrupt.c: 323:       if(int0_handler) int0_handler();
  8714  003930  0100               	movlb	0	; () banked
  8715  003932  51D2               	movf	_int0_handler& (0+255),w,b
  8716  003934  11D3               	iorwf	(_int0_handler+1)& (0+255),w,b
  8717  003936  B4D8               	btfsc	status,2,c
  8718  003938  EFA0  F01C         	goto	i2u552_41
  8719  00393C  EFA2  F01C         	goto	i2u552_40
  8720  003940                     i2u552_41:
  8721  003940  EFAE  F01C         	goto	i2l534
  8722  003944                     i2u552_40:
  8723  003944                     
  8724                           ; BSR set to: 0
  8725  003944  D802               	call	i2u553_48
  8726  003946  EFAE  F01C         	goto	i2u553_49
  8727  00394A                     i2u553_48:
  8728  00394A  0005               	push	
  8729  00394C  6EFA               	movwf	pclath,c
  8730  00394E  51D2               	movf	_int0_handler& (0+255),w,b
  8731  003950  6EFD               	movwf	tosl,c
  8732  003952  51D3               	movf	(_int0_handler+1)& (0+255),w,b
  8733  003954  6EFE               	movwf	tosh,c
  8734  003956  6AFF               	clrf	tosu,c
  8735  003958  50FA               	movf	pclath,w,c
  8736  00395A  0012               	return		;indir
  8737  00395C                     i2u553_49:
  8738  00395C                     i2l534:
  8739  00395C  0012               	return		;funcret
  8740  00395E                     __end_ofi2_INT_0_ISR:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function i2_int_1_handler *****************
  8744 ;; Defined at:
  8745 ;;		line 89 in file "main.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;		None
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  1    wreg      void 
  8752 ;; Registers used:
  8753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8763 ;;Total ram usage:        2 bytes
  8764 ;; Hardware stack levels used: 1
  8765 ;; Hardware stack levels required when called: 6
  8766 ;; This function calls:
  8767 ;;		i2_display_char_at_position
  8768 ;;		i2_display_custom_char
  8769 ;; This function is called by:
  8770 ;;		_INT_0_ISR
  8771 ;;		_INT_1_ISR
  8772 ;;		_INT_2_ISR
  8773 ;;		i2_INT_0_ISR
  8774 ;;		i2_INT_1_ISR
  8775 ;;		i2_INT_2_ISR
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text51
  8780  0022A0                     __ptext51:
  8781                           	callstack 0
  8782  0022A0                     i2_int_1_handler:
  8783                           	callstack 4
  8784  0022A0                     
  8785                           ;main.c: 92:       display_char_at_position(&lcd,3,4,'\0');
  8786  0022A0  0EC1               	movlw	low _lcd
  8787  0022A2  6E1F               	movwf	i2display_char_at_position@lcd^0,c
  8788  0022A4  0E01               	movlw	high _lcd
  8789  0022A6  6E20               	movwf	(i2display_char_at_position@lcd+1)^0,c
  8790  0022A8  0E03               	movlw	3
  8791  0022AA  6E21               	movwf	i2display_char_at_position@row^0,c
  8792  0022AC  0E04               	movlw	4
  8793  0022AE  6E22               	movwf	i2display_char_at_position@coloumn^0,c
  8794  0022B0  0E00               	movlw	0
  8795  0022B2  6E23               	movwf	i2display_char_at_position@data^0,c
  8796  0022B4  EC15  F017         	call	i2_display_char_at_position	;wreg free
  8797                           
  8798                           ;main.c: 93:       display_custom_char(&lcd,1,4,dinasour,1);
  8799  0022B8  0EC1               	movlw	low _lcd
  8800  0022BA  6E25               	movwf	i2display_custom_char@lcd^0,c
  8801  0022BC  0E01               	movlw	high _lcd
  8802  0022BE  6E26               	movwf	(i2display_custom_char@lcd+1)^0,c
  8803  0022C0  0E01               	movlw	1
  8804  0022C2  6E27               	movwf	i2display_custom_char@row^0,c
  8805  0022C4  0E04               	movlw	4
  8806  0022C6  6E28               	movwf	i2display_custom_char@cloumn^0,c
  8807  0022C8  0EB9               	movlw	low _dinasour
  8808  0022CA  6E29               	movwf	i2display_custom_char@data^0,c
  8809  0022CC  0E01               	movlw	high _dinasour
  8810  0022CE  6E2A               	movwf	(i2display_custom_char@data+1)^0,c
  8811  0022D0  0E01               	movlw	1
  8812  0022D2  6E2B               	movwf	i2display_custom_char@mem_pos^0,c
  8813  0022D4  ECD7  F018         	call	i2_display_custom_char	;wreg free
  8814  0022D8                     
  8815                           ;main.c: 96:       if(x==5||x==6){
  8816  0022D8  0E05               	movlw	5
  8817  0022DA  0101               	movlb	1	; () banked
  8818  0022DC  1981               	xorwf	_x& (0+255),w,b
  8819  0022DE  B4D8               	btfsc	status,2,c
  8820  0022E0  EF74  F011         	goto	i2u328_41
  8821  0022E4  EF76  F011         	goto	i2u328_40
  8822  0022E8                     i2u328_41:
  8823  0022E8  EFA7  F011         	goto	i2l4503
  8824  0022EC                     i2u328_40:
  8825  0022EC                     
  8826                           ; BSR set to: 1
  8827  0022EC  0E06               	movlw	6
  8828  0022EE  1981               	xorwf	_x& (0+255),w,b
  8829  0022F0  A4D8               	btfss	status,2,c
  8830  0022F2  EF7D  F011         	goto	i2u329_41
  8831  0022F6  EF7F  F011         	goto	i2u329_40
  8832  0022FA                     i2u329_41:
  8833  0022FA  EFB2  F011         	goto	i2l4509
  8834  0022FE                     i2u329_40:
  8835  0022FE  EFA7  F011         	goto	i2l4503
  8836  002302                     i2l4497:
  8837                           
  8838                           ; BSR set to: 1
  8839                           ;main.c: 98:         {;main.c: 99:              display_custom_char(&lcd,3,x,cactus,4);
  8840  002302  0EC1               	movlw	low _lcd
  8841  002304  6E25               	movwf	i2display_custom_char@lcd^0,c
  8842  002306  0E01               	movlw	high _lcd
  8843  002308  6E26               	movwf	(i2display_custom_char@lcd+1)^0,c
  8844  00230A  0E03               	movlw	3
  8845  00230C  6E27               	movwf	i2display_custom_char@row^0,c
  8846  00230E  C181  F028         	movff	_x,i2display_custom_char@cloumn
  8847  002312  0EB1               	movlw	low _cactus
  8848  002314  6E29               	movwf	i2display_custom_char@data^0,c
  8849  002316  0E01               	movlw	high _cactus
  8850  002318  6E2A               	movwf	(i2display_custom_char@data+1)^0,c
  8851  00231A  0E04               	movlw	4
  8852  00231C  6E2B               	movwf	i2display_custom_char@mem_pos^0,c
  8853  00231E  ECD7  F018         	call	i2_display_custom_char	;wreg free
  8854                           
  8855                           ;main.c: 100:              display_char_at_position(&lcd,3,x+1,'\0');
  8856  002322  0EC1               	movlw	low _lcd
  8857  002324  6E1F               	movwf	i2display_char_at_position@lcd^0,c
  8858  002326  0E01               	movlw	high _lcd
  8859  002328  6E20               	movwf	(i2display_char_at_position@lcd+1)^0,c
  8860  00232A  0E03               	movlw	3
  8861  00232C  6E21               	movwf	i2display_char_at_position@row^0,c
  8862  00232E  0101               	movlb	1	; () banked
  8863  002330  2981               	incf	_x& (0+255),w,b
  8864  002332  6E22               	movwf	i2display_char_at_position@coloumn^0,c
  8865  002334  0E00               	movlw	0
  8866  002336  6E23               	movwf	i2display_char_at_position@data^0,c
  8867  002338  EC15  F017         	call	i2_display_char_at_position	;wreg free
  8868  00233C                     
  8869                           ;main.c: 101:              _delay((unsigned long)((80)*(8000000UL/4000.0)));
  8870  00233C  0ED0               	movlw	208
  8871  00233E  6E2D               	movwf	??i2_int_1_handler^0,c
  8872  002340  0ECA               	movlw	202
  8873  002342                     i2u621_47:
  8874  002342  2EE8               	decfsz	wreg,f,c
  8875  002344  D7FE               	bra	i2u621_47
  8876  002346  2E2D               	decfsz	??i2_int_1_handler^0,f,c
  8877  002348  D7FC               	bra	i2u621_47
  8878  00234A                     
  8879                           ;main.c: 102:              x--;
  8880  00234A  0101               	movlb	1	; () banked
  8881  00234C  0781               	decf	_x& (0+255),f,b
  8882  00234E                     i2l4503:
  8883                           
  8884                           ; BSR set to: 1
  8885                           ;main.c: 97:         while(x>=3)
  8886  00234E  0E03               	movlw	3
  8887  002350  6181               	cpfslt	_x& (0+255),b
  8888  002352  EFAD  F011         	goto	i2u330_41
  8889  002356  EFAF  F011         	goto	i2u330_40
  8890  00235A                     i2u330_41:
  8891  00235A  EF81  F011         	goto	i2l4497
  8892  00235E                     i2u330_40:
  8893  00235E                     
  8894                           ; BSR set to: 1
  8895                           ;main.c: 104:         counter++;
  8896  00235E  2B7F               	incf	_counter& (0+255),f,b
  8897  002360                     
  8898                           ; BSR set to: 1
  8899                           ;main.c: 105:         x=3;
  8900  002360  0E03               	movlw	3
  8901  002362  6F81               	movwf	_x& (0+255),b
  8902  002364                     i2l4509:
  8903                           
  8904                           ; BSR set to: 1
  8905                           ;main.c: 108:         _delay((unsigned long)((200)*(8000000UL/4000.0)));
  8906  002364  0E03               	movlw	3
  8907  002366  6E2E               	movwf	(??i2_int_1_handler+1)^0,c
  8908  002368  0E08               	movlw	8
  8909  00236A  6E2D               	movwf	??i2_int_1_handler^0,c
  8910  00236C  0E77               	movlw	119
  8911  00236E                     i2u622_47:
  8912  00236E  2EE8               	decfsz	wreg,f,c
  8913  002370  D7FE               	bra	i2u622_47
  8914  002372  2E2D               	decfsz	??i2_int_1_handler^0,f,c
  8915  002374  D7FC               	bra	i2u622_47
  8916  002376  2E2E               	decfsz	(??i2_int_1_handler+1)^0,f,c
  8917  002378  D7FA               	bra	i2u622_47
  8918  00237A  F000               	nop	
  8919  00237C                     
  8920                           ;main.c: 109:      display_char_at_position(&lcd,1,4,'\0');
  8921  00237C  0EC1               	movlw	low _lcd
  8922  00237E  6E1F               	movwf	i2display_char_at_position@lcd^0,c
  8923  002380  0E01               	movlw	high _lcd
  8924  002382  6E20               	movwf	(i2display_char_at_position@lcd+1)^0,c
  8925  002384  0E01               	movlw	1
  8926  002386  6E21               	movwf	i2display_char_at_position@row^0,c
  8927  002388  0E04               	movlw	4
  8928  00238A  6E22               	movwf	i2display_char_at_position@coloumn^0,c
  8929  00238C  0E00               	movlw	0
  8930  00238E  6E23               	movwf	i2display_char_at_position@data^0,c
  8931  002390  EC15  F017         	call	i2_display_char_at_position	;wreg free
  8932  002394                     
  8933                           ;main.c: 110:      display_custom_char(&lcd,3,4,dinasour,1);
  8934  002394  0EC1               	movlw	low _lcd
  8935  002396  6E25               	movwf	i2display_custom_char@lcd^0,c
  8936  002398  0E01               	movlw	high _lcd
  8937  00239A  6E26               	movwf	(i2display_custom_char@lcd+1)^0,c
  8938  00239C  0E03               	movlw	3
  8939  00239E  6E27               	movwf	i2display_custom_char@row^0,c
  8940  0023A0  0E04               	movlw	4
  8941  0023A2  6E28               	movwf	i2display_custom_char@cloumn^0,c
  8942  0023A4  0EB9               	movlw	low _dinasour
  8943  0023A6  6E29               	movwf	i2display_custom_char@data^0,c
  8944  0023A8  0E01               	movlw	high _dinasour
  8945  0023AA  6E2A               	movwf	(i2display_custom_char@data+1)^0,c
  8946  0023AC  0E01               	movlw	1
  8947  0023AE  6E2B               	movwf	i2display_custom_char@mem_pos^0,c
  8948  0023B0  ECD7  F018         	call	i2_display_custom_char	;wreg free
  8949  0023B4  0012               	return		;funcret
  8950  0023B6                     __end_ofi2_int_1_handler:
  8951                           	callstack 0
  8952                           
  8953 ;; *************** function i2_display_custom_char *****************
  8954 ;; Defined at:
  8955 ;;		line 184 in file "ECU/LCD/lcd.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  lcd             2   36[COMRAM] PTR const struct .
  8958 ;;		 -> lcd(6), 
  8959 ;;  row             1   38[COMRAM] unsigned char 
  8960 ;;  cloumn          1   39[COMRAM] unsigned char 
  8961 ;;  data            2   40[COMRAM] PTR unsigned char 
  8962 ;;		 -> cactus(8), dinasour(8), ground(8), 
  8963 ;;  mem_pos         1   42[COMRAM] unsigned char 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  counter         1   43[COMRAM] unsigned char 
  8966 ;;  ret             1    0        unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      unsigned char 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8976 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8979 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8980 ;;Total ram usage:        8 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 5
  8983 ;; This function calls:
  8984 ;;		i2_display_char
  8985 ;;		i2_display_char_at_position
  8986 ;;		i2_send_command
  8987 ;; This function is called by:
  8988 ;;		i2_int_1_handler
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           	psect	text52
  8993  0031AE                     __ptext52:
  8994                           	callstack 0
  8995  0031AE                     i2_display_custom_char:
  8996                           	callstack 4
  8997  0031AE                     
  8998                           ;ECU/LCD/lcd.c: 187:     uint8 counter=0;
  8999  0031AE  0E00               	movlw	0
  9000  0031B0  6E2C               	movwf	i2display_custom_char@counter^0,c
  9001  0031B2                     
  9002                           ;ECU/LCD/lcd.c: 188:     if(((void*)0)==lcd)
  9003  0031B2  5025               	movf	i2display_custom_char@lcd^0,w,c
  9004  0031B4  1026               	iorwf	(i2display_custom_char@lcd+1)^0,w,c
  9005  0031B6  A4D8               	btfss	status,2,c
  9006  0031B8  EFE0  F018         	goto	i2u304_41
  9007  0031BC  EFE2  F018         	goto	i2u304_40
  9008  0031C0                     i2u304_41:
  9009  0031C0  EFE4  F018         	goto	i2l4217
  9010  0031C4                     i2u304_40:
  9011  0031C4                     
  9012                           ;ECU/LCD/lcd.c: 191:     }
  9013  0031C4  EF14  F019         	goto	i2l142
  9014  0031C8                     i2l4217:
  9015  0031C8  C025  F014         	movff	i2display_custom_char@lcd,i2send_command@lcd
  9016  0031CC  C026  F015         	movff	i2display_custom_char@lcd+1,i2send_command@lcd+1
  9017  0031D0  502B               	movf	i2display_custom_char@mem_pos^0,w,c
  9018  0031D2  0D08               	mullw	8
  9019  0031D4  50F3               	movf	243,w,c
  9020  0031D6  0F40               	addlw	64
  9021  0031D8  6E16               	movwf	i2send_command@command^0,c
  9022  0031DA  EC3D  F01A         	call	i2_send_command	;wreg free
  9023  0031DE                     
  9024                           ;ECU/LCD/lcd.c: 195:         for(counter=0;counter<=7;counter++)
  9025  0031DE  0E00               	movlw	0
  9026  0031E0  6E2C               	movwf	i2display_custom_char@counter^0,c
  9027  0031E2                     i2l4225:
  9028  0031E2  C025  F014         	movff	i2display_custom_char@lcd,i2display_char@lcd
  9029  0031E6  C026  F015         	movff	i2display_custom_char@lcd+1,i2display_char@lcd+1
  9030  0031EA  502C               	movf	i2display_custom_char@counter^0,w,c
  9031  0031EC  2429               	addwf	i2display_custom_char@data^0,w,c
  9032  0031EE  6ED9               	movwf	fsr2l,c
  9033  0031F0  0E00               	movlw	0
  9034  0031F2  202A               	addwfc	(i2display_custom_char@data+1)^0,w,c
  9035  0031F4  6EDA               	movwf	fsr2h,c
  9036  0031F6  50DF               	movf	indf2,w,c
  9037  0031F8  6E16               	movwf	i2display_char@data^0,c
  9038  0031FA  EC76  F01A         	call	i2_display_char	;wreg free
  9039  0031FE                     
  9040                           ;ECU/LCD/lcd.c: 198:         }
  9041  0031FE  2A2C               	incf	i2display_custom_char@counter^0,f,c
  9042  003200  0E07               	movlw	7
  9043  003202  642C               	cpfsgt	i2display_custom_char@counter^0,c
  9044  003204  EF06  F019         	goto	i2u305_41
  9045  003208  EF08  F019         	goto	i2u305_40
  9046  00320C                     i2u305_41:
  9047  00320C  EFF1  F018         	goto	i2l4225
  9048  003210                     i2u305_40:
  9049  003210  C025  F01F         	movff	i2display_custom_char@lcd,i2display_char_at_position@lcd
  9050  003214  C026  F020         	movff	i2display_custom_char@lcd+1,i2display_char_at_position@lcd+1
  9051  003218  C027  F021         	movff	i2display_custom_char@row,i2display_char_at_position@row
  9052  00321C  C028  F022         	movff	i2display_custom_char@cloumn,i2display_char_at_position@coloumn
  9053  003220  C02B  F023         	movff	i2display_custom_char@mem_pos,i2display_char_at_position@data
  9054  003224  EC15  F017         	call	i2_display_char_at_position	;wreg free
  9055  003228                     i2l142:
  9056  003228  0012               	return		;funcret
  9057  00322A                     __end_ofi2_display_custom_char:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function i2_display_char_at_position *****************
  9061 ;; Defined at:
  9062 ;;		line 110 in file "ECU/LCD/lcd.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  lcd             2   30[COMRAM] PTR const struct .
  9065 ;;		 -> lcd(6), 
  9066 ;;  row             1   32[COMRAM] unsigned char 
  9067 ;;  coloumn         1   33[COMRAM] unsigned char 
  9068 ;;  data            1   34[COMRAM] unsigned char 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  ret             1   35[COMRAM] unsigned char 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      unsigned char 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9080 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;Total ram usage:        6 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 4
  9087 ;; This function calls:
  9088 ;;		i2_lcd_4_bit_set_cursor
  9089 ;;		i2_lcd_send_4bits
  9090 ;;		i2_lcd_send_enable_4bit
  9091 ;;		i2_pin_write_value
  9092 ;; This function is called by:
  9093 ;;		i2_display_custom_char
  9094 ;;		i2_int_1_handler
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text53
  9099  002E2A                     __ptext53:
  9100                           	callstack 0
  9101  002E2A                     i2_display_char_at_position:
  9102                           	callstack 4
  9103  002E2A                     
  9104                           ;ECU/LCD/lcd.c: 113:     if(((void*)0)==lcd)
  9105  002E2A  501F               	movf	i2display_char_at_position@lcd^0,w,c
  9106  002E2C  1020               	iorwf	(i2display_char_at_position@lcd+1)^0,w,c
  9107  002E2E  A4D8               	btfss	status,2,c
  9108  002E30  EF1C  F017         	goto	i2u293_41
  9109  002E34  EF1E  F017         	goto	i2u293_40
  9110  002E38                     i2u293_41:
  9111  002E38  EF22  F017         	goto	i2l4121
  9112  002E3C                     i2u293_40:
  9113  002E3C                     
  9114                           ;ECU/LCD/lcd.c: 114:     {;ECU/LCD/lcd.c: 115:         ret=(Std_ReturnType)0x00;
  9115  002E3C  0E00               	movlw	0
  9116  002E3E  6E24               	movwf	i2display_char_at_position@ret^0,c
  9117                           
  9118                           ;ECU/LCD/lcd.c: 116:     }
  9119  002E40  EF57  F017         	goto	i2l4123
  9120  002E44                     i2l4121:
  9121                           
  9122                           ;ECU/LCD/lcd.c: 118:     {;ECU/LCD/lcd.c: 119:         ret=lcd_4_bit_set_cursor(lcd,row,
      +                          coloumn);
  9123  002E44  C01F  F018         	movff	i2display_char_at_position@lcd,i2lcd_4_bit_set_cursor@lcd
  9124  002E48  C020  F019         	movff	i2display_char_at_position@lcd+1,i2lcd_4_bit_set_cursor@lcd+1
  9125  002E4C  C021  F01A         	movff	i2display_char_at_position@row,i2lcd_4_bit_set_cursor@row
  9126  002E50  C022  F01B         	movff	i2display_char_at_position@coloumn,i2lcd_4_bit_set_cursor@column
  9127  002E54  EC45  F014         	call	i2_lcd_4_bit_set_cursor	;wreg free
  9128  002E58  6E24               	movwf	i2display_char_at_position@ret^0,c
  9129                           
  9130                           ;ECU/LCD/lcd.c: 120:         ret=pin_write_value(&(lcd->rs),1);
  9131  002E5A  C01F  F001         	movff	i2display_char_at_position@lcd,i2pin_write_value@pin
  9132  002E5E  C020  F002         	movff	i2display_char_at_position@lcd+1,i2pin_write_value@pin+1
  9133  002E62  0E01               	movlw	1
  9134  002E64  6E03               	movwf	i2pin_write_value@value^0,c
  9135  002E66  ECBA  F010         	call	i2_pin_write_value	;wreg free
  9136  002E6A  6E24               	movwf	i2display_char_at_position@ret^0,c
  9137                           
  9138                           ;ECU/LCD/lcd.c: 121:         ret=lcd_send_4bits(lcd,data>>4);
  9139  002E6C  C01F  F00B         	movff	i2display_char_at_position@lcd,i2lcd_send_4bits@lcd
  9140  002E70  C020  F00C         	movff	i2display_char_at_position@lcd+1,i2lcd_send_4bits@lcd+1
  9141  002E74  3823               	swapf	i2display_char_at_position@data^0,w,c
  9142  002E76  0B0F               	andlw	15
  9143  002E78  6E0D               	movwf	i2lcd_send_4bits@_data_command^0,c
  9144  002E7A  EC03  F01A         	call	i2_lcd_send_4bits	;wreg free
  9145  002E7E  6E24               	movwf	i2display_char_at_position@ret^0,c
  9146                           
  9147                           ;ECU/LCD/lcd.c: 122:         ret=lcd_send_enable_4bit(lcd);
  9148  002E80  C01F  F00B         	movff	i2display_char_at_position@lcd,i2lcd_send_enable_4bit@lcd
  9149  002E84  C020  F00C         	movff	i2display_char_at_position@lcd+1,i2lcd_send_enable_4bit@lcd+1
  9150  002E88  EC95  F01B         	call	i2_lcd_send_enable_4bit	;wreg free
  9151  002E8C  6E24               	movwf	i2display_char_at_position@ret^0,c
  9152                           
  9153                           ;ECU/LCD/lcd.c: 123:         ret=lcd_send_4bits(lcd,data);
  9154  002E8E  C01F  F00B         	movff	i2display_char_at_position@lcd,i2lcd_send_4bits@lcd
  9155  002E92  C020  F00C         	movff	i2display_char_at_position@lcd+1,i2lcd_send_4bits@lcd+1
  9156  002E96  C023  F00D         	movff	i2display_char_at_position@data,i2lcd_send_4bits@_data_command
  9157  002E9A  EC03  F01A         	call	i2_lcd_send_4bits	;wreg free
  9158  002E9E  6E24               	movwf	i2display_char_at_position@ret^0,c
  9159                           
  9160                           ;ECU/LCD/lcd.c: 124:         ret=lcd_send_enable_4bit(lcd);
  9161  002EA0  C01F  F00B         	movff	i2display_char_at_position@lcd,i2lcd_send_enable_4bit@lcd
  9162  002EA4  C020  F00C         	movff	i2display_char_at_position@lcd+1,i2lcd_send_enable_4bit@lcd+1
  9163  002EA8  EC95  F01B         	call	i2_lcd_send_enable_4bit	;wreg free
  9164  002EAC  6E24               	movwf	i2display_char_at_position@ret^0,c
  9165  002EAE                     i2l4123:
  9166                           
  9167                           ;ECU/LCD/lcd.c: 127:     return ret;
  9168  002EAE  5024               	movf	i2display_char_at_position@ret^0,w,c
  9169  002EB0  0012               	return		;funcret
  9170  002EB2                     __end_ofi2_display_char_at_position:
  9171                           	callstack 0
  9172                           
  9173 ;; *************** function i2_lcd_4_bit_set_cursor *****************
  9174 ;; Defined at:
  9175 ;;		line 558 in file "ECU/LCD/lcd.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  lcd             2   23[COMRAM] PTR const struct .
  9178 ;;		 -> lcd(6), 
  9179 ;;  row             1   25[COMRAM] unsigned char 
  9180 ;;  column          1   26[COMRAM] unsigned char 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  ret             1   29[COMRAM] unsigned char 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      unsigned char 
  9185 ;; Registers used:
  9186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;Total ram usage:        7 bytes
  9197 ;; Hardware stack levels used: 1
  9198 ;; Hardware stack levels required when called: 3
  9199 ;; This function calls:
  9200 ;;		i2_send_command
  9201 ;; This function is called by:
  9202 ;;		i2_display_char_at_position
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text54
  9207  00288A                     __ptext54:
  9208                           	callstack 0
  9209  00288A                     i2_lcd_4_bit_set_cursor:
  9210                           	callstack 4
  9211  00288A                     
  9212                           ;ECU/LCD/lcd.c: 558:  Std_ReturnType lcd_4_bit_set_cursor(const lcd_4_bit_mode *lcd,uint
      +                          8 row,uint8 column);ECU/LCD/lcd.c: 559: {;ECU/LCD/lcd.c: 561:     Std_ReturnType ret=(St
      +                          d_ReturnType)0x01;
  9213  00288A  0E01               	movlw	1
  9214  00288C  6E1E               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  9215  00288E                     
  9216                           ;ECU/LCD/lcd.c: 562:     if(((void*)0)==lcd)
  9217  00288E  5018               	movf	i2lcd_4_bit_set_cursor@lcd^0,w,c
  9218  002890  1019               	iorwf	(i2lcd_4_bit_set_cursor@lcd+1)^0,w,c
  9219  002892  A4D8               	btfss	status,2,c
  9220  002894  EF4E  F014         	goto	i2u284_41
  9221  002898  EF50  F014         	goto	i2u284_40
  9222  00289C                     i2u284_41:
  9223  00289C  EF54  F014         	goto	i2l4003
  9224  0028A0                     i2u284_40:
  9225  0028A0                     
  9226                           ;ECU/LCD/lcd.c: 563:     {;ECU/LCD/lcd.c: 564:         ret=(Std_ReturnType)0x00;
  9227  0028A0  0E00               	movlw	0
  9228  0028A2  6E1E               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  9229                           
  9230                           ;ECU/LCD/lcd.c: 565:     }
  9231  0028A4  EFA4  F014         	goto	i2l4017
  9232  0028A8                     i2l4003:
  9233                           
  9234                           ;ECU/LCD/lcd.c: 567:     {;ECU/LCD/lcd.c: 568:         column--;
  9235  0028A8  061B               	decf	i2lcd_4_bit_set_cursor@column^0,f,c
  9236                           
  9237                           ;ECU/LCD/lcd.c: 569:         switch(row)
  9238  0028AA  EF87  F014         	goto	i2l4015
  9239  0028AE                     i2l4005:
  9240  0028AE  C018  F014         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_command@lcd
  9241  0028B2  C019  F015         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_command@lcd+1
  9242  0028B6  501B               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  9243  0028B8  0F80               	addlw	128
  9244  0028BA  6E16               	movwf	i2send_command@command^0,c
  9245  0028BC  EC3D  F01A         	call	i2_send_command	;wreg free
  9246  0028C0  6E1E               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  9247  0028C2  EFA4  F014         	goto	i2l4017
  9248  0028C6                     i2l4007:
  9249  0028C6  C018  F014         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_command@lcd
  9250  0028CA  C019  F015         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_command@lcd+1
  9251  0028CE  501B               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  9252  0028D0  0FC0               	addlw	192
  9253  0028D2  6E16               	movwf	i2send_command@command^0,c
  9254  0028D4  EC3D  F01A         	call	i2_send_command	;wreg free
  9255  0028D8  6E1E               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  9256  0028DA  EFA4  F014         	goto	i2l4017
  9257  0028DE                     i2l4009:
  9258  0028DE  C018  F014         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_command@lcd
  9259  0028E2  C019  F015         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_command@lcd+1
  9260  0028E6  501B               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  9261  0028E8  0F94               	addlw	148
  9262  0028EA  6E16               	movwf	i2send_command@command^0,c
  9263  0028EC  EC3D  F01A         	call	i2_send_command	;wreg free
  9264  0028F0  6E1E               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  9265  0028F2  EFA4  F014         	goto	i2l4017
  9266  0028F6                     i2l4011:
  9267  0028F6  C018  F014         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_command@lcd
  9268  0028FA  C019  F015         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_command@lcd+1
  9269  0028FE  501B               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  9270  002900  0FD4               	addlw	212
  9271  002902  6E16               	movwf	i2send_command@command^0,c
  9272  002904  EC3D  F01A         	call	i2_send_command	;wreg free
  9273  002908  6E1E               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  9274  00290A  EFA4  F014         	goto	i2l4017
  9275  00290E                     i2l4015:
  9276  00290E  501A               	movf	i2lcd_4_bit_set_cursor@row^0,w,c
  9277  002910  6E1C               	movwf	??i2_lcd_4_bit_set_cursor^0,c
  9278  002912  6A1D               	clrf	(??i2_lcd_4_bit_set_cursor+1)^0,c
  9279                           
  9280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9281                           ; Switch size 1, requested type "simple"
  9282                           ; Number of cases is 1, Range of values is 0 to 0
  9283                           ; switch strategies available:
  9284                           ; Name         Instructions Cycles
  9285                           ; simple_byte            4     3 (average)
  9286                           ;	Chosen strategy is simple_byte
  9287  002914  501D               	movf	(??i2_lcd_4_bit_set_cursor+1)^0,w,c
  9288  002916  0A00               	xorlw	0	; case 0
  9289  002918  B4D8               	btfsc	status,2,c
  9290  00291A  EF91  F014         	goto	i2l7443
  9291  00291E  EFA4  F014         	goto	i2l4017
  9292  002922                     i2l7443:
  9293                           
  9294                           ; Switch size 1, requested type "simple"
  9295                           ; Number of cases is 4, Range of values is 1 to 4
  9296                           ; switch strategies available:
  9297                           ; Name         Instructions Cycles
  9298                           ; simple_byte           13     7 (average)
  9299                           ;	Chosen strategy is simple_byte
  9300  002922  501C               	movf	??i2_lcd_4_bit_set_cursor^0,w,c
  9301  002924  0A01               	xorlw	1	; case 1
  9302  002926  B4D8               	btfsc	status,2,c
  9303  002928  EF57  F014         	goto	i2l4005
  9304  00292C  0A03               	xorlw	3	; case 2
  9305  00292E  B4D8               	btfsc	status,2,c
  9306  002930  EF63  F014         	goto	i2l4007
  9307  002934  0A01               	xorlw	1	; case 3
  9308  002936  B4D8               	btfsc	status,2,c
  9309  002938  EF6F  F014         	goto	i2l4009
  9310  00293C  0A07               	xorlw	7	; case 4
  9311  00293E  B4D8               	btfsc	status,2,c
  9312  002940  EF7B  F014         	goto	i2l4011
  9313  002944  EFA4  F014         	goto	i2l4017
  9314  002948                     i2l4017:
  9315                           
  9316                           ;ECU/LCD/lcd.c: 577:     return ret;
  9317  002948  501E               	movf	i2lcd_4_bit_set_cursor@ret^0,w,c
  9318  00294A  0012               	return		;funcret
  9319  00294C                     __end_ofi2_lcd_4_bit_set_cursor:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function i2_send_command *****************
  9323 ;; Defined at:
  9324 ;;		line 56 in file "ECU/LCD/lcd.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  lcd             2   19[COMRAM] PTR const struct .
  9327 ;;		 -> lcd(6), 
  9328 ;;  command         1   21[COMRAM] unsigned char 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  ret             1   22[COMRAM] unsigned char 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      unsigned char 
  9333 ;; Registers used:
  9334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9340 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;Total ram usage:        4 bytes
  9345 ;; Hardware stack levels used: 1
  9346 ;; Hardware stack levels required when called: 2
  9347 ;; This function calls:
  9348 ;;		i2_lcd_send_4bits
  9349 ;;		i2_lcd_send_enable_4bit
  9350 ;;		i2_pin_write_value
  9351 ;; This function is called by:
  9352 ;;		i2_display_custom_char
  9353 ;;		i2_lcd_4_bit_set_cursor
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text55
  9358  00347A                     __ptext55:
  9359                           	callstack 0
  9360  00347A                     i2_send_command:
  9361                           	callstack 6
  9362  00347A                     
  9363                           ;ECU/LCD/lcd.c: 59:     if(((void*)0)==lcd)
  9364  00347A  5014               	movf	i2send_command@lcd^0,w,c
  9365  00347C  1015               	iorwf	(i2send_command@lcd+1)^0,w,c
  9366  00347E  A4D8               	btfss	status,2,c
  9367  003480  EF44  F01A         	goto	i2u263_41
  9368  003484  EF46  F01A         	goto	i2u263_40
  9369  003488                     i2u263_41:
  9370  003488  EF4A  F01A         	goto	i2l3863
  9371  00348C                     i2u263_40:
  9372  00348C                     
  9373                           ;ECU/LCD/lcd.c: 60:     {;ECU/LCD/lcd.c: 61:         ret=(Std_ReturnType)0x00;
  9374  00348C  0E00               	movlw	0
  9375  00348E  6E17               	movwf	i2send_command@ret^0,c
  9376                           
  9377                           ;ECU/LCD/lcd.c: 62:     }
  9378  003490  EF74  F01A         	goto	i2l3865
  9379  003494                     i2l3863:
  9380                           
  9381                           ;ECU/LCD/lcd.c: 64:     {;ECU/LCD/lcd.c: 65:         ret=pin_write_value(&(lcd->rs),0);
  9382  003494  C014  F001         	movff	i2send_command@lcd,i2pin_write_value@pin
  9383  003498  C015  F002         	movff	i2send_command@lcd+1,i2pin_write_value@pin+1
  9384  00349C  0E00               	movlw	0
  9385  00349E  6E03               	movwf	i2pin_write_value@value^0,c
  9386  0034A0  ECBA  F010         	call	i2_pin_write_value	;wreg free
  9387  0034A4  6E17               	movwf	i2send_command@ret^0,c
  9388                           
  9389                           ;ECU/LCD/lcd.c: 67:         ret=lcd_send_4bits(lcd,command>>4);
  9390  0034A6  C014  F00B         	movff	i2send_command@lcd,i2lcd_send_4bits@lcd
  9391  0034AA  C015  F00C         	movff	i2send_command@lcd+1,i2lcd_send_4bits@lcd+1
  9392  0034AE  3816               	swapf	i2send_command@command^0,w,c
  9393  0034B0  0B0F               	andlw	15
  9394  0034B2  6E0D               	movwf	i2lcd_send_4bits@_data_command^0,c
  9395  0034B4  EC03  F01A         	call	i2_lcd_send_4bits	;wreg free
  9396  0034B8  6E17               	movwf	i2send_command@ret^0,c
  9397                           
  9398                           ;ECU/LCD/lcd.c: 68:         ret=lcd_send_enable_4bit(lcd);
  9399  0034BA  C014  F00B         	movff	i2send_command@lcd,i2lcd_send_enable_4bit@lcd
  9400  0034BE  C015  F00C         	movff	i2send_command@lcd+1,i2lcd_send_enable_4bit@lcd+1
  9401  0034C2  EC95  F01B         	call	i2_lcd_send_enable_4bit	;wreg free
  9402  0034C6  6E17               	movwf	i2send_command@ret^0,c
  9403                           
  9404                           ;ECU/LCD/lcd.c: 70:         ret=lcd_send_4bits(lcd,command);
  9405  0034C8  C014  F00B         	movff	i2send_command@lcd,i2lcd_send_4bits@lcd
  9406  0034CC  C015  F00C         	movff	i2send_command@lcd+1,i2lcd_send_4bits@lcd+1
  9407  0034D0  C016  F00D         	movff	i2send_command@command,i2lcd_send_4bits@_data_command
  9408  0034D4  EC03  F01A         	call	i2_lcd_send_4bits	;wreg free
  9409  0034D8  6E17               	movwf	i2send_command@ret^0,c
  9410                           
  9411                           ;ECU/LCD/lcd.c: 71:         ret=lcd_send_enable_4bit(lcd);
  9412  0034DA  C014  F00B         	movff	i2send_command@lcd,i2lcd_send_enable_4bit@lcd
  9413  0034DE  C015  F00C         	movff	i2send_command@lcd+1,i2lcd_send_enable_4bit@lcd+1
  9414  0034E2  EC95  F01B         	call	i2_lcd_send_enable_4bit	;wreg free
  9415  0034E6  6E17               	movwf	i2send_command@ret^0,c
  9416  0034E8                     i2l3865:
  9417                           
  9418                           ;ECU/LCD/lcd.c: 74:     return ret;
  9419  0034E8  5017               	movf	i2send_command@ret^0,w,c
  9420  0034EA  0012               	return		;funcret
  9421  0034EC                     __end_ofi2_send_command:
  9422                           	callstack 0
  9423                           
  9424 ;; *************** function i2_display_char *****************
  9425 ;; Defined at:
  9426 ;;		line 82 in file "ECU/LCD/lcd.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  lcd             2   19[COMRAM] PTR const struct .
  9429 ;;		 -> lcd(6), 
  9430 ;;  data            1   21[COMRAM] unsigned char 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  ret             1   22[COMRAM] unsigned char 
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      unsigned char 
  9435 ;; Registers used:
  9436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;Total ram usage:        4 bytes
  9447 ;; Hardware stack levels used: 1
  9448 ;; Hardware stack levels required when called: 2
  9449 ;; This function calls:
  9450 ;;		i2_lcd_send_4bits
  9451 ;;		i2_lcd_send_enable_4bit
  9452 ;;		i2_pin_write_value
  9453 ;; This function is called by:
  9454 ;;		i2_display_custom_char
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text56
  9459  0034EC                     __ptext56:
  9460                           	callstack 0
  9461  0034EC                     i2_display_char:
  9462                           	callstack 6
  9463  0034EC                     
  9464                           ;ECU/LCD/lcd.c: 85:     if(((void*)0)==lcd)
  9465  0034EC  5014               	movf	i2display_char@lcd^0,w,c
  9466  0034EE  1015               	iorwf	(i2display_char@lcd+1)^0,w,c
  9467  0034F0  A4D8               	btfss	status,2,c
  9468  0034F2  EF7D  F01A         	goto	i2u291_41
  9469  0034F6  EF7F  F01A         	goto	i2u291_40
  9470  0034FA                     i2u291_41:
  9471  0034FA  EF83  F01A         	goto	i2l4097
  9472  0034FE                     i2u291_40:
  9473  0034FE                     
  9474                           ;ECU/LCD/lcd.c: 86:     {;ECU/LCD/lcd.c: 87:         ret=(Std_ReturnType)0x00;
  9475  0034FE  0E00               	movlw	0
  9476  003500  6E17               	movwf	i2display_char@ret^0,c
  9477                           
  9478                           ;ECU/LCD/lcd.c: 88:     }
  9479  003502  EFAD  F01A         	goto	i2l4099
  9480  003506                     i2l4097:
  9481                           
  9482                           ;ECU/LCD/lcd.c: 90:     {;ECU/LCD/lcd.c: 91:         ret=pin_write_value(&(lcd->rs),1);
  9483  003506  C014  F001         	movff	i2display_char@lcd,i2pin_write_value@pin
  9484  00350A  C015  F002         	movff	i2display_char@lcd+1,i2pin_write_value@pin+1
  9485  00350E  0E01               	movlw	1
  9486  003510  6E03               	movwf	i2pin_write_value@value^0,c
  9487  003512  ECBA  F010         	call	i2_pin_write_value	;wreg free
  9488  003516  6E17               	movwf	i2display_char@ret^0,c
  9489                           
  9490                           ;ECU/LCD/lcd.c: 93:         ret=lcd_send_4bits(lcd,data>>4);
  9491  003518  C014  F00B         	movff	i2display_char@lcd,i2lcd_send_4bits@lcd
  9492  00351C  C015  F00C         	movff	i2display_char@lcd+1,i2lcd_send_4bits@lcd+1
  9493  003520  3816               	swapf	i2display_char@data^0,w,c
  9494  003522  0B0F               	andlw	15
  9495  003524  6E0D               	movwf	i2lcd_send_4bits@_data_command^0,c
  9496  003526  EC03  F01A         	call	i2_lcd_send_4bits	;wreg free
  9497  00352A  6E17               	movwf	i2display_char@ret^0,c
  9498                           
  9499                           ;ECU/LCD/lcd.c: 94:         ret=lcd_send_enable_4bit(lcd);
  9500  00352C  C014  F00B         	movff	i2display_char@lcd,i2lcd_send_enable_4bit@lcd
  9501  003530  C015  F00C         	movff	i2display_char@lcd+1,i2lcd_send_enable_4bit@lcd+1
  9502  003534  EC95  F01B         	call	i2_lcd_send_enable_4bit	;wreg free
  9503  003538  6E17               	movwf	i2display_char@ret^0,c
  9504                           
  9505                           ;ECU/LCD/lcd.c: 96:         ret=lcd_send_4bits(lcd,data);
  9506  00353A  C014  F00B         	movff	i2display_char@lcd,i2lcd_send_4bits@lcd
  9507  00353E  C015  F00C         	movff	i2display_char@lcd+1,i2lcd_send_4bits@lcd+1
  9508  003542  C016  F00D         	movff	i2display_char@data,i2lcd_send_4bits@_data_command
  9509  003546  EC03  F01A         	call	i2_lcd_send_4bits	;wreg free
  9510  00354A  6E17               	movwf	i2display_char@ret^0,c
  9511                           
  9512                           ;ECU/LCD/lcd.c: 97:         ret=lcd_send_enable_4bit(lcd);
  9513  00354C  C014  F00B         	movff	i2display_char@lcd,i2lcd_send_enable_4bit@lcd
  9514  003550  C015  F00C         	movff	i2display_char@lcd+1,i2lcd_send_enable_4bit@lcd+1
  9515  003554  EC95  F01B         	call	i2_lcd_send_enable_4bit	;wreg free
  9516  003558  6E17               	movwf	i2display_char@ret^0,c
  9517  00355A                     i2l4099:
  9518                           
  9519                           ;ECU/LCD/lcd.c: 100:     return ret;
  9520  00355A  5017               	movf	i2display_char@ret^0,w,c
  9521  00355C  0012               	return		;funcret
  9522  00355E                     __end_ofi2_display_char:
  9523                           	callstack 0
  9524                           
  9525 ;; *************** function i2_lcd_send_enable_4bit *****************
  9526 ;; Defined at:
  9527 ;;		line 511 in file "ECU/LCD/lcd.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  lcd             2   10[COMRAM] PTR const struct .
  9530 ;;		 -> lcd(6), 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;  ret             1   12[COMRAM] unsigned char 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      unsigned char 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;Total ram usage:        3 bytes
  9547 ;; Hardware stack levels used: 1
  9548 ;; Hardware stack levels required when called: 1
  9549 ;; This function calls:
  9550 ;;		i2_pin_write_value
  9551 ;; This function is called by:
  9552 ;;		i2_send_command
  9553 ;;		i2_display_char
  9554 ;;		i2_display_char_at_position
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text57
  9559  00372A                     __ptext57:
  9560                           	callstack 0
  9561  00372A                     i2_lcd_send_enable_4bit:
  9562                           	callstack 6
  9563  00372A                     
  9564                           ;ECU/LCD/lcd.c: 514:     if(((void*)0)==lcd)
  9565  00372A  500B               	movf	i2lcd_send_enable_4bit@lcd^0,w,c
  9566  00372C  100C               	iorwf	(i2lcd_send_enable_4bit@lcd+1)^0,w,c
  9567  00372E  A4D8               	btfss	status,2,c
  9568  003730  EF9C  F01B         	goto	i2u239_41
  9569  003734  EF9E  F01B         	goto	i2u239_40
  9570  003738                     i2u239_41:
  9571  003738  EFA2  F01B         	goto	i2l3705
  9572  00373C                     i2u239_40:
  9573  00373C                     
  9574                           ;ECU/LCD/lcd.c: 515:     {;ECU/LCD/lcd.c: 516:         ret=(Std_ReturnType)0x00;
  9575  00373C  0E00               	movlw	0
  9576  00373E  6E0D               	movwf	i2lcd_send_enable_4bit@ret^0,c
  9577                           
  9578                           ;ECU/LCD/lcd.c: 517:     }
  9579  003740  EFBB  F01B         	goto	i2l3711
  9580  003744                     i2l3705:
  9581  003744  0E01               	movlw	1
  9582  003746  240B               	addwf	i2lcd_send_enable_4bit@lcd^0,w,c
  9583  003748  6E01               	movwf	i2pin_write_value@pin^0,c
  9584  00374A  0E00               	movlw	0
  9585  00374C  200C               	addwfc	(i2lcd_send_enable_4bit@lcd+1)^0,w,c
  9586  00374E  6E02               	movwf	(i2pin_write_value@pin+1)^0,c
  9587  003750  0E01               	movlw	1
  9588  003752  6E03               	movwf	i2pin_write_value@value^0,c
  9589  003754  ECBA  F010         	call	i2_pin_write_value	;wreg free
  9590  003758                     
  9591                           ;ECU/LCD/lcd.c: 521:         _delay((unsigned long)((10)*(8000000UL/4000000.0)));
  9592  003758  0E06               	movlw	6
  9593  00375A                     i2u623_47:
  9594  00375A  2EE8               	decfsz	wreg,f,c
  9595  00375C  D7FE               	bra	i2u623_47
  9596  00375E  D000               	nop2	
  9597  003760                     
  9598                           ;ECU/LCD/lcd.c: 522:         ret=pin_write_value(&(lcd->en),0);
  9599  003760  0E01               	movlw	1
  9600  003762  240B               	addwf	i2lcd_send_enable_4bit@lcd^0,w,c
  9601  003764  6E01               	movwf	i2pin_write_value@pin^0,c
  9602  003766  0E00               	movlw	0
  9603  003768  200C               	addwfc	(i2lcd_send_enable_4bit@lcd+1)^0,w,c
  9604  00376A  6E02               	movwf	(i2pin_write_value@pin+1)^0,c
  9605  00376C  0E00               	movlw	0
  9606  00376E  6E03               	movwf	i2pin_write_value@value^0,c
  9607  003770  ECBA  F010         	call	i2_pin_write_value	;wreg free
  9608  003774  6E0D               	movwf	i2lcd_send_enable_4bit@ret^0,c
  9609  003776                     i2l3711:
  9610                           
  9611                           ;ECU/LCD/lcd.c: 525:     return ret;
  9612  003776  500D               	movf	i2lcd_send_enable_4bit@ret^0,w,c
  9613  003778  0012               	return		;funcret
  9614  00377A                     __end_ofi2_lcd_send_enable_4bit:
  9615                           	callstack 0
  9616                           
  9617 ;; *************** function i2_lcd_send_4bits *****************
  9618 ;; Defined at:
  9619 ;;		line 489 in file "ECU/LCD/lcd.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  lcd             2   10[COMRAM] PTR const struct .
  9622 ;;		 -> lcd(6), 
  9623 ;;  _data_comman    1   12[COMRAM] unsigned char 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;  counter         1   18[COMRAM] unsigned char 
  9626 ;;  ret             1   17[COMRAM] unsigned char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      unsigned char 
  9629 ;; Registers used:
  9630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9636 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9639 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;Total ram usage:        9 bytes
  9641 ;; Hardware stack levels used: 1
  9642 ;; Hardware stack levels required when called: 1
  9643 ;; This function calls:
  9644 ;;		i2_pin_write_value
  9645 ;; This function is called by:
  9646 ;;		i2_send_command
  9647 ;;		i2_display_char
  9648 ;;		i2_display_char_at_position
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text58
  9653  003406                     __ptext58:
  9654                           	callstack 0
  9655  003406                     i2_lcd_send_4bits:
  9656                           	callstack 6
  9657  003406                     
  9658                           ;ECU/LCD/lcd.c: 492:     Std_ReturnType ret=(Std_ReturnType)0x01;
  9659  003406  0E01               	movlw	1
  9660  003408  6E12               	movwf	i2lcd_send_4bits@ret^0,c
  9661  00340A                     
  9662                           ;ECU/LCD/lcd.c: 493:     if(((void*)0)==lcd)
  9663  00340A  500B               	movf	i2lcd_send_4bits@lcd^0,w,c
  9664  00340C  100C               	iorwf	(i2lcd_send_4bits@lcd+1)^0,w,c
  9665  00340E  A4D8               	btfss	status,2,c
  9666  003410  EF0C  F01A         	goto	i2u235_41
  9667  003414  EF0E  F01A         	goto	i2u235_40
  9668  003418                     i2u235_41:
  9669  003418  EF12  F01A         	goto	i2l3667
  9670  00341C                     i2u235_40:
  9671  00341C                     
  9672                           ;ECU/LCD/lcd.c: 494:     {;ECU/LCD/lcd.c: 495:         ret=(Std_ReturnType)0x00;
  9673  00341C  0E00               	movlw	0
  9674  00341E  6E12               	movwf	i2lcd_send_4bits@ret^0,c
  9675                           
  9676                           ;ECU/LCD/lcd.c: 496:     }
  9677  003420  EF3B  F01A         	goto	i2l3679
  9678  003424                     i2l3667:
  9679                           
  9680                           ;ECU/LCD/lcd.c: 498:     {;ECU/LCD/lcd.c: 499:         for(counter=0;counter<4;counter++
      +                          )
  9681  003424  0E00               	movlw	0
  9682  003426  6E13               	movwf	i2lcd_send_4bits@counter^0,c
  9683  003428                     i2l3673:
  9684                           
  9685                           ;ECU/LCD/lcd.c: 500:         {;ECU/LCD/lcd.c: 501:             ret=pin_write_value(&(lcd
      +                          ->_4_bit[counter]),(_data_command>>counter)&(uint8)0x01);
  9686  003428  5013               	movf	i2lcd_send_4bits@counter^0,w,c
  9687  00342A  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  9688  00342C  6E0E               	movwf	??i2_lcd_send_4bits^0,c
  9689  00342E  0E00               	movlw	0
  9690  003430  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  9691  003432  6E0F               	movwf	(??i2_lcd_send_4bits+1)^0,c
  9692  003434  0E02               	movlw	2
  9693  003436  240E               	addwf	??i2_lcd_send_4bits^0,w,c
  9694  003438  6E01               	movwf	i2pin_write_value@pin^0,c
  9695  00343A  0E00               	movlw	0
  9696  00343C  200F               	addwfc	(??i2_lcd_send_4bits+1)^0,w,c
  9697  00343E  6E02               	movwf	(i2pin_write_value@pin+1)^0,c
  9698  003440  C013  F010         	movff	i2lcd_send_4bits@counter,??i2_lcd_send_4bits+2
  9699  003444  C00D  F011         	movff	i2lcd_send_4bits@_data_command,??i2_lcd_send_4bits+3
  9700  003448  2A10               	incf	(??i2_lcd_send_4bits+2)^0,f,c
  9701  00344A  EF29  F01A         	goto	i2u236_44
  9702  00344E                     i2u236_45:
  9703  00344E  90D8               	bcf	status,0,c
  9704  003450  3211               	rrcf	(??i2_lcd_send_4bits+3)^0,f,c
  9705  003452                     i2u236_44:
  9706  003452  2E10               	decfsz	(??i2_lcd_send_4bits+2)^0,f,c
  9707  003454  EF27  F01A         	goto	i2u236_45
  9708  003458  5011               	movf	(??i2_lcd_send_4bits+3)^0,w,c
  9709  00345A  0B01               	andlw	1
  9710  00345C  6E03               	movwf	i2pin_write_value@value^0,c
  9711  00345E  ECBA  F010         	call	i2_pin_write_value	;wreg free
  9712  003462  6E12               	movwf	i2lcd_send_4bits@ret^0,c
  9713  003464                     
  9714                           ;ECU/LCD/lcd.c: 502:         }
  9715  003464  2A13               	incf	i2lcd_send_4bits@counter^0,f,c
  9716  003466  0E03               	movlw	3
  9717  003468  6413               	cpfsgt	i2lcd_send_4bits@counter^0,c
  9718  00346A  EF39  F01A         	goto	i2u237_41
  9719  00346E  EF3B  F01A         	goto	i2u237_40
  9720  003472                     i2u237_41:
  9721  003472  EF14  F01A         	goto	i2l3673
  9722  003476                     i2u237_40:
  9723  003476                     i2l3679:
  9724                           
  9725                           ;ECU/LCD/lcd.c: 504:     return ret;
  9726  003476  5012               	movf	i2lcd_send_4bits@ret^0,w,c
  9727  003478  0012               	return		;funcret
  9728  00347A                     __end_ofi2_lcd_send_4bits:
  9729                           	callstack 0
  9730                           
  9731 ;; *************** function i2_pin_write_value *****************
  9732 ;; Defined at:
  9733 ;;		line 61 in file "MCAL/GPIO/gpio.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  pin             2    0[COMRAM] PTR const struct .
  9736 ;;		 -> lcd._4_bit(4), lcd(6), relay_off@relay_status(1), relay_on@relay_status(1), 
  9737 ;;		 -> led_turn_off@led_x(1), led_turn_on@led_x(1), 
  9738 ;;  value           1    2[COMRAM] unsigned char 
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;  ret             1    9[COMRAM] unsigned char 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      unsigned char 
  9743 ;; Registers used:
  9744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9750 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9752 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;Total ram usage:       10 bytes
  9755 ;; Hardware stack levels used: 1
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		i2_send_command
  9760 ;;		i2_display_char
  9761 ;;		i2_display_char_at_position
  9762 ;;		i2_lcd_send_4bits
  9763 ;;		i2_lcd_send_enable_4bit
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text59
  9768  002174                     __ptext59:
  9769                           	callstack 0
  9770  002174                     i2_pin_write_value:
  9771                           	callstack 7
  9772  002174                     
  9773                           ;MCAL/GPIO/gpio.c: 61: Std_ReturnType pin_write_value(const pin_config *pin,uint8 value)
      +                          ;MCAL/GPIO/gpio.c: 62: {;MCAL/GPIO/gpio.c: 63:     Std_ReturnType ret = (Std_ReturnType)
      +                          0x01;
  9774  002174  0E01               	movlw	1
  9775  002176  6E0A               	movwf	i2pin_write_value@ret^0,c
  9776  002178                     
  9777                           ;MCAL/GPIO/gpio.c: 64:     if(((void*)0) == pin || pin->pin > 8 -1){
  9778  002178  5001               	movf	i2pin_write_value@pin^0,w,c
  9779  00217A  1002               	iorwf	(i2pin_write_value@pin+1)^0,w,c
  9780  00217C  B4D8               	btfsc	status,2,c
  9781  00217E  EFC3  F010         	goto	i2u226_41
  9782  002182  EFC5  F010         	goto	i2u226_40
  9783  002186                     i2u226_41:
  9784  002186  EFD6  F010         	goto	i2l3603
  9785  00218A                     i2u226_40:
  9786  00218A  C001  FFD9         	movff	i2pin_write_value@pin,fsr2l
  9787  00218E  C002  FFDA         	movff	i2pin_write_value@pin+1,fsr2h
  9788  002192  30DF               	rrcf	223,w,c
  9789  002194  32E8               	rrcf	wreg,f,c
  9790  002196  32E8               	rrcf	wreg,f,c
  9791  002198  0B07               	andlw	7
  9792  00219A  6E04               	movwf	??i2_pin_write_value^0,c
  9793  00219C  0E07               	movlw	7
  9794  00219E  6404               	cpfsgt	??i2_pin_write_value^0,c
  9795  0021A0  EFD4  F010         	goto	i2u227_41
  9796  0021A4  EFD6  F010         	goto	i2u227_40
  9797  0021A8                     i2u227_41:
  9798  0021A8  EF39  F011         	goto	i2l3611
  9799  0021AC                     i2u227_40:
  9800  0021AC                     i2l3603:
  9801                           
  9802                           ;MCAL/GPIO/gpio.c: 65:         ret = (Std_ReturnType)0x00;
  9803  0021AC  0E00               	movlw	0
  9804  0021AE  6E0A               	movwf	i2pin_write_value@ret^0,c
  9805                           
  9806                           ;MCAL/GPIO/gpio.c: 66:     }
  9807  0021B0  EF4E  F011         	goto	i2l3613
  9808  0021B4                     i2l3605:
  9809  0021B4  C001  FFD9         	movff	i2pin_write_value@pin,fsr2l
  9810  0021B8  C002  FFDA         	movff	i2pin_write_value@pin+1,fsr2h
  9811  0021BC  30DF               	rrcf	223,w,c
  9812  0021BE  32E8               	rrcf	wreg,f,c
  9813  0021C0  32E8               	rrcf	wreg,f,c
  9814  0021C2  0B07               	andlw	7
  9815  0021C4  6E04               	movwf	??i2_pin_write_value^0,c
  9816  0021C6  0E01               	movlw	1
  9817  0021C8  6E05               	movwf	(??i2_pin_write_value+1)^0,c
  9818  0021CA  2A04               	incf	??i2_pin_write_value^0,f,c
  9819  0021CC  EFEA  F010         	goto	i2u228_44
  9820  0021D0                     i2u228_45:
  9821  0021D0  90D8               	bcf	status,0,c
  9822  0021D2  3605               	rlcf	(??i2_pin_write_value+1)^0,f,c
  9823  0021D4                     i2u228_44:
  9824  0021D4  2E04               	decfsz	??i2_pin_write_value^0,f,c
  9825  0021D6  EFE8  F010         	goto	i2u228_45
  9826  0021DA  C001  FFD9         	movff	i2pin_write_value@pin,fsr2l
  9827  0021DE  C002  FFDA         	movff	i2pin_write_value@pin+1,fsr2h
  9828  0021E2  50DF               	movf	223,w,c
  9829  0021E4  0B07               	andlw	7
  9830  0021E6  6E06               	movwf	(??i2_pin_write_value+2)^0,c
  9831  0021E8  5006               	movf	(??i2_pin_write_value+2)^0,w,c
  9832  0021EA  0D02               	mullw	2
  9833  0021EC  0EB4               	movlw	low _LAT_array
  9834  0021EE  24F3               	addwf	243,w,c
  9835  0021F0  6ED9               	movwf	fsr2l,c
  9836  0021F2  0E00               	movlw	high _LAT_array
  9837  0021F4  20F4               	addwfc	prodh,w,c
  9838  0021F6  6EDA               	movwf	fsr2h,c
  9839  0021F8  CFDE F007          	movff	postinc2,??i2_pin_write_value+3
  9840  0021FC  CFDD F008          	movff	postdec2,??i2_pin_write_value+4
  9841  002200  C007  FFD9         	movff	??i2_pin_write_value+3,fsr2l
  9842  002204  C008  FFDA         	movff	??i2_pin_write_value+4,fsr2h
  9843  002208  5005               	movf	(??i2_pin_write_value+1)^0,w,c
  9844  00220A  12DF               	iorwf	indf2,f,c
  9845  00220C  EF4E  F011         	goto	i2l3613
  9846  002210                     i2l3607:
  9847  002210  C001  FFD9         	movff	i2pin_write_value@pin,fsr2l
  9848  002214  C002  FFDA         	movff	i2pin_write_value@pin+1,fsr2h
  9849  002218  30DF               	rrcf	223,w,c
  9850  00221A  32E8               	rrcf	wreg,f,c
  9851  00221C  32E8               	rrcf	wreg,f,c
  9852  00221E  0B07               	andlw	7
  9853  002220  6E04               	movwf	??i2_pin_write_value^0,c
  9854  002222  0E01               	movlw	1
  9855  002224  6E05               	movwf	(??i2_pin_write_value+1)^0,c
  9856  002226  2A04               	incf	??i2_pin_write_value^0,f,c
  9857  002228  EF18  F011         	goto	i2u229_44
  9858  00222C                     i2u229_45:
  9859  00222C  90D8               	bcf	status,0,c
  9860  00222E  3605               	rlcf	(??i2_pin_write_value+1)^0,f,c
  9861  002230                     i2u229_44:
  9862  002230  2E04               	decfsz	??i2_pin_write_value^0,f,c
  9863  002232  EF16  F011         	goto	i2u229_45
  9864  002236  5005               	movf	(??i2_pin_write_value+1)^0,w,c
  9865  002238  0AFF               	xorlw	255
  9866  00223A  6E06               	movwf	(??i2_pin_write_value+2)^0,c
  9867  00223C  C001  FFD9         	movff	i2pin_write_value@pin,fsr2l
  9868  002240  C002  FFDA         	movff	i2pin_write_value@pin+1,fsr2h
  9869  002244  50DF               	movf	223,w,c
  9870  002246  0B07               	andlw	7
  9871  002248  6E07               	movwf	(??i2_pin_write_value+3)^0,c
  9872  00224A  5007               	movf	(??i2_pin_write_value+3)^0,w,c
  9873  00224C  0D02               	mullw	2
  9874  00224E  0EB4               	movlw	low _LAT_array
  9875  002250  24F3               	addwf	243,w,c
  9876  002252  6ED9               	movwf	fsr2l,c
  9877  002254  0E00               	movlw	high _LAT_array
  9878  002256  20F4               	addwfc	prodh,w,c
  9879  002258  6EDA               	movwf	fsr2h,c
  9880  00225A  CFDE F008          	movff	postinc2,??i2_pin_write_value+4
  9881  00225E  CFDD F009          	movff	postdec2,??i2_pin_write_value+5
  9882  002262  C008  FFD9         	movff	??i2_pin_write_value+4,fsr2l
  9883  002266  C009  FFDA         	movff	??i2_pin_write_value+5,fsr2h
  9884  00226A  5006               	movf	(??i2_pin_write_value+2)^0,w,c
  9885  00226C  16DF               	andwf	indf2,f,c
  9886  00226E  EF4E  F011         	goto	i2l3613
  9887  002272                     i2l3611:
  9888  002272  5003               	movf	i2pin_write_value@value^0,w,c
  9889  002274  6E04               	movwf	??i2_pin_write_value^0,c
  9890  002276  6A05               	clrf	(??i2_pin_write_value+1)^0,c
  9891                           
  9892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9893                           ; Switch size 1, requested type "simple"
  9894                           ; Number of cases is 1, Range of values is 0 to 0
  9895                           ; switch strategies available:
  9896                           ; Name         Instructions Cycles
  9897                           ; simple_byte            4     3 (average)
  9898                           ;	Chosen strategy is simple_byte
  9899  002278  5005               	movf	(??i2_pin_write_value+1)^0,w,c
  9900  00227A  0A00               	xorlw	0	; case 0
  9901  00227C  B4D8               	btfsc	status,2,c
  9902  00227E  EF43  F011         	goto	i2l7445
  9903  002282  EFD6  F010         	goto	i2l3603
  9904  002286                     i2l7445:
  9905                           
  9906                           ; Switch size 1, requested type "simple"
  9907                           ; Number of cases is 2, Range of values is 0 to 1
  9908                           ; switch strategies available:
  9909                           ; Name         Instructions Cycles
  9910                           ; simple_byte            7     4 (average)
  9911                           ;	Chosen strategy is simple_byte
  9912  002286  5004               	movf	??i2_pin_write_value^0,w,c
  9913  002288  0A00               	xorlw	0	; case 0
  9914  00228A  B4D8               	btfsc	status,2,c
  9915  00228C  EF08  F011         	goto	i2l3607
  9916  002290  0A01               	xorlw	1	; case 1
  9917  002292  B4D8               	btfsc	status,2,c
  9918  002294  EFDA  F010         	goto	i2l3605
  9919  002298  EFD6  F010         	goto	i2l3603
  9920  00229C                     i2l3613:
  9921                           
  9922                           ;MCAL/GPIO/gpio.c: 76:     return ret;
  9923  00229C  500A               	movf	i2pin_write_value@ret^0,w,c
  9924  00229E  0012               	return		;funcret
  9925  0022A0                     __end_ofi2_pin_write_value:
  9926                           	callstack 0
  9927                           
  9928                           	psect	text60
  9929  000000                     __ptext60:
  9930                           	callstack 0
  9931  000000                     
  9932                           	psect	rparam
  9933  0000                     
  9934                           	psect	temp
  9935  00004B                     btemp:
  9936                           	callstack 0
  9937  00004B                     	ds	1
  9938  0000                     int$flags	set	btemp
  9939  0000                     wtemp8	set	btemp+1
  9940  0000                     ttemp5	set	btemp+1
  9941  0000                     ttemp6	set	btemp+4
  9942  0000                     ttemp7	set	btemp+8
  9943                           
  9944                           	psect	idloc
  9945                           
  9946                           ;Config register IDLOC0 @ 0x200000
  9947                           ;	unspecified, using default values
  9948  200000                     	org	2097152
  9949  200000  FF                 	db	255
  9950                           
  9951                           ;Config register IDLOC1 @ 0x200001
  9952                           ;	unspecified, using default values
  9953  200001                     	org	2097153
  9954  200001  FF                 	db	255
  9955                           
  9956                           ;Config register IDLOC2 @ 0x200002
  9957                           ;	unspecified, using default values
  9958  200002                     	org	2097154
  9959  200002  FF                 	db	255
  9960                           
  9961                           ;Config register IDLOC3 @ 0x200003
  9962                           ;	unspecified, using default values
  9963  200003                     	org	2097155
  9964  200003  FF                 	db	255
  9965                           
  9966                           ;Config register IDLOC4 @ 0x200004
  9967                           ;	unspecified, using default values
  9968  200004                     	org	2097156
  9969  200004  FF                 	db	255
  9970                           
  9971                           ;Config register IDLOC5 @ 0x200005
  9972                           ;	unspecified, using default values
  9973  200005                     	org	2097157
  9974  200005  FF                 	db	255
  9975                           
  9976                           ;Config register IDLOC6 @ 0x200006
  9977                           ;	unspecified, using default values
  9978  200006                     	org	2097158
  9979  200006  FF                 	db	255
  9980                           
  9981                           ;Config register IDLOC7 @ 0x200007
  9982                           ;	unspecified, using default values
  9983  200007                     	org	2097159
  9984  200007  FF                 	db	255
  9985                           
  9986                           	psect	config
  9987                           
  9988                           ; Padding undefined space
  9989  300000                     	org	3145728
  9990  300000  FF                 	db	255
  9991                           
  9992                           ;Config register CONFIG1H @ 0x300001
  9993                           ;	Oscillator Selection bits
  9994                           ;	OSC = HS, HS oscillator
  9995                           ;	Fail-Safe Clock Monitor Enable bit
  9996                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9997                           ;	Internal/External Oscillator Switchover bit
  9998                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9999  300001                     	org	3145729
 10000  300001  02                 	db	2
 10001                           
 10002                           ;Config register CONFIG2L @ 0x300002
 10003                           ;	Power-up Timer Enable bit
 10004                           ;	PWRT = OFF, PWRT disabled
 10005                           ;	Brown-out Reset Enable bits
 10006                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10007                           ;	Brown Out Reset Voltage bits
 10008                           ;	BORV = 3, Minimum setting
 10009  300002                     	org	3145730
 10010  300002  1F                 	db	31
 10011                           
 10012                           ;Config register CONFIG2H @ 0x300003
 10013                           ;	Watchdog Timer Enable bit
 10014                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10015                           ;	Watchdog Timer Postscale Select bits
 10016                           ;	WDTPS = 32768, 1:32768
 10017  300003                     	org	3145731
 10018  300003  1E                 	db	30
 10019                           
 10020                           ; Padding undefined space
 10021  300004                     	org	3145732
 10022  300004  FF                 	db	255
 10023                           
 10024                           ;Config register CONFIG3H @ 0x300005
 10025                           ;	CCP2 MUX bit
 10026                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10027                           ;	PORTB A/D Enable bit
 10028                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10029                           ;	Low-Power Timer1 Oscillator Enable bit
 10030                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10031                           ;	MCLR Pin Enable bit
 10032                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10033  300005                     	org	3145733
 10034  300005  81                 	db	129
 10035                           
 10036                           ;Config register CONFIG4L @ 0x300006
 10037                           ;	Stack Full/Underflow Reset Enable bit
 10038                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10039                           ;	Single-Supply ICSP Enable bit
 10040                           ;	LVP = OFF, Single-Supply ICSP disabled
 10041                           ;	Extended Instruction Set Enable bit
 10042                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10043                           ;	Background Debugger Enable bit
 10044                           ;	DEBUG = 0x1, unprogrammed default
 10045  300006                     	org	3145734
 10046  300006  81                 	db	129
 10047                           
 10048                           ; Padding undefined space
 10049  300007                     	org	3145735
 10050  300007  FF                 	db	255
 10051                           
 10052                           ;Config register CONFIG5L @ 0x300008
 10053                           ;	Code Protection bit
 10054                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10055                           ;	Code Protection bit
 10056                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10057                           ;	Code Protection bit
 10058                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10059                           ;	Code Protection bit
 10060                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10061  300008                     	org	3145736
 10062  300008  0F                 	db	15
 10063                           
 10064                           ;Config register CONFIG5H @ 0x300009
 10065                           ;	Boot Block Code Protection bit
 10066                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10067                           ;	Data EEPROM Code Protection bit
 10068                           ;	CPD = OFF, Data EEPROM not code-protected
 10069  300009                     	org	3145737
 10070  300009  C0                 	db	192
 10071                           
 10072                           ;Config register CONFIG6L @ 0x30000A
 10073                           ;	Write Protection bit
 10074                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10075                           ;	Write Protection bit
 10076                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10077                           ;	Write Protection bit
 10078                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10079                           ;	Write Protection bit
 10080                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10081  30000A                     	org	3145738
 10082  30000A  0F                 	db	15
 10083                           
 10084                           ;Config register CONFIG6H @ 0x30000B
 10085                           ;	Configuration Register Write Protection bit
 10086                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10087                           ;	Boot Block Write Protection bit
 10088                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10089                           ;	Data EEPROM Write Protection bit
 10090                           ;	WRTD = OFF, Data EEPROM not write-protected
 10091  30000B                     	org	3145739
 10092  30000B  E0                 	db	224
 10093                           
 10094                           ;Config register CONFIG7L @ 0x30000C
 10095                           ;	Table Read Protection bit
 10096                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10097                           ;	Table Read Protection bit
 10098                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10099                           ;	Table Read Protection bit
 10100                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10101                           ;	Table Read Protection bit
 10102                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10103  30000C                     	org	3145740
 10104  30000C  0F                 	db	15
 10105                           
 10106                           ;Config register CONFIG7H @ 0x30000D
 10107                           ;	Boot Block Table Read Protection bit
 10108                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10109  30000D                     	org	3145741
 10110  30000D  40                 	db	64
 10111                           tosu	equ	0xFFF
 10112                           tosh	equ	0xFFE
 10113                           tosl	equ	0xFFD
 10114                           stkptr	equ	0xFFC
 10115                           pclatu	equ	0xFFB
 10116                           pclath	equ	0xFFA
 10117                           pcl	equ	0xFF9
 10118                           tblptru	equ	0xFF8
 10119                           tblptrh	equ	0xFF7
 10120                           tblptrl	equ	0xFF6
 10121                           tablat	equ	0xFF5
 10122                           prodh	equ	0xFF4
 10123                           prodl	equ	0xFF3
 10124                           indf0	equ	0xFEF
 10125                           postinc0	equ	0xFEE
 10126                           postdec0	equ	0xFED
 10127                           preinc0	equ	0xFEC
 10128                           plusw0	equ	0xFEB
 10129                           fsr0h	equ	0xFEA
 10130                           fsr0l	equ	0xFE9
 10131                           wreg	equ	0xFE8
 10132                           indf1	equ	0xFE7
 10133                           postinc1	equ	0xFE6
 10134                           postdec1	equ	0xFE5
 10135                           preinc1	equ	0xFE4
 10136                           plusw1	equ	0xFE3
 10137                           fsr1h	equ	0xFE2
 10138                           fsr1l	equ	0xFE1
 10139                           bsr	equ	0xFE0
 10140                           indf2	equ	0xFDF
 10141                           postinc2	equ	0xFDE
 10142                           postdec2	equ	0xFDD
 10143                           preinc2	equ	0xFDC
 10144                           plusw2	equ	0xFDB
 10145                           fsr2h	equ	0xFDA
 10146                           fsr2l	equ	0xFD9
 10147                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    16
    Data        68
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      74
    BANK0           128     52      84
    BANK1           256    119     205
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> short_to_string@Temp(BANK1[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1781$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1781$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> num(BANK1[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> num(BANK1[7]), 

    int_t.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_int_1_handler(), int_1_handler(), 

    int2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_int_1_handler(), int_1_handler(), Absolute function(), 

    int1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_int_1_handler(), int_1_handler(), Absolute function(), 

    INTX_interrupt_handle@int_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    int0_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_int_1_handler(), int_1_handler(), Absolute function(), 

    INTX_interrupt_handle@int_obj	PTR const struct . size(2) Largest target is 6
		 -> int_t(BANK1[6]), 

    INTX_clear_flag@int_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    INTX_clear_flag@int_obj	PTR const struct . size(2) Largest target is 6
		 -> int_t(BANK1[6]), 

    INTX_pin_init@int_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    INTX_pin_init@int_obj	PTR const struct . size(2) Largest target is 6
		 -> int_t(BANK1[6]), 

    INTX_disable@int_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    INTX_disable@int_obj	PTR const struct . size(2) Largest target is 6
		 -> int_t(BANK1[6]), 

    INTX_select_edge@int_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    INTX_select_edge@int_obj	PTR const struct . size(2) Largest target is 6
		 -> int_t(BANK1[6]), 

    INTX_enable@int_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    INTX_enable@int_obj	PTR const struct . size(2) Largest target is 6
		 -> int_t(BANK1[6]), 

    S690$interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    Interrupt_INTx_DeInit@int_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int_1_handler(), 

    Interrupt_INTx_Init@int_obj	PTR const struct . size(2) Largest target is 6
		 -> int_t(BANK1[6]), 

    pin_write_value@pin	PTR const struct . size(2) Largest target is 6
		 -> lcd._4_bit(BANK1[4]), lcd(BANK1[6]), relay_off@relay_status(COMRAM[1]), relay_on@relay_status(COMRAM[1]), 
		 -> led_turn_off@led_x(COMRAM[1]), led_turn_on@led_x(COMRAM[1]), 

    pin_directoin_intialize@pin	PTR const struct . size(2) Largest target is 6
		 -> lcd._4_bit(BANK1[4]), lcd(BANK1[6]), int_t(BANK1[6]), relay_init@relay_status(COMRAM[1]), 
		 -> led_init@led_x(COMRAM[1]), 

    LAT_array	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    PORT_array	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    TRIS_array	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhlllll[1]), TRISD(BITBIGSFRhlllll[1]), TRISC(BITBIGSFRhlllll[1]), TRISB(BITBIGSFRhlllll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    lcd_4_bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_send_enable_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    short_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> num(BANK1[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> num(BANK1[7]), 

    display_custom_char@data	PTR unsigned char  size(2) Largest target is 8
		 -> cactus(BANK1[8]), dinasour(BANK1[8]), ground(BANK1[8]), 

    display_custom_char@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    display_string_at_position@data	PTR unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[7]), num(BANK1[7]), STR_5(CODE[10]), STR_4(CODE[10]), 

    display_string_at_position@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    display_char_at_position@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    display_char@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 

    lcd_4_bit_init@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(BANK1[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManagerLow in COMRAM

    i1_display_char_at_position->i1_pin_write_value
    i1_send_command->i1_pin_write_value
    i1_display_char->i1_pin_write_value
    i1_lcd_send_enable_4bit->i1_pin_write_value
    i1_lcd_send_4bits->i1_pin_write_value

Critical Paths under _InterruptManagerHigh in COMRAM

    i2_INT_2_ISR->i2_int_1_handler
    i2_INT_1_ISR->i2_int_1_handler
    i2_INT_0_ISR->i2_int_1_handler
    i2_int_1_handler->i2_display_custom_char
    i2_display_custom_char->i2_display_char_at_position
    i2_display_char_at_position->i2_lcd_4_bit_set_cursor
    i2_lcd_4_bit_set_cursor->i2_send_command
    i2_send_command->i2_lcd_send_4bits
    i2_display_char->i2_lcd_send_4bits
    i2_lcd_send_enable_4bit->i2_pin_write_value
    i2_lcd_send_4bits->i2_pin_write_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    _INT_2_ISR->_int_1_handler
    _INT_1_ISR->_int_1_handler
    _INT_0_ISR->_int_1_handler
    _int_1_handler->i1_display_custom_char
    i1_display_custom_char->i1_display_char_at_position
    i1_display_char_at_position->i1_lcd_4_bit_set_cursor
    i1_lcd_4_bit_set_cursor->i1_send_command
    i1_send_command->i1_lcd_send_4bits
    i1_display_char->i1_lcd_send_4bits
    i1_lcd_send_enable_4bit->i1_pin_write_value
    i1_lcd_send_4bits->i1_pin_write_value

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_short_to_string
    _short_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_4_bit_init->_send_command
    _display_string_at_position->_lcd_4_bit_set_cursor
    _display_custom_char->_display_char_at_position
    _display_char_at_position->_lcd_4_bit_set_cursor
    _lcd_4_bit_set_cursor->_send_command
    _send_command->_lcd_send_4bits
    _display_char->_lcd_send_4bits
    _lcd_send_enable_4bit->_pin_write_value
    _lcd_send_4bits->_pin_write_value
    _Interrupt_INTx_Init->_INTX_pin_init
    _INTX_pin_init->_pin_directoin_intialize

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  201108
                                            117 BANK1      2     2      0
                _Interrupt_INTx_Init
                        _Timer1_init
           _display_char_at_position
                _display_custom_char
         _display_string_at_position
                     _lcd_4_bit_init
                    _short_to_string
 ---------------------------------------------------------------------------------
 (1) _short_to_string                                     12     8      4   11165
                                            106 BANK1     11     7      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    8777
                                             87 BANK1     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7931
                                             79 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             63 BANK1     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             27 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             16 BANK1     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              0 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK1     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK1     26    10     16
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                              0 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (1) _lcd_4_bit_init                                       6     4      2   22534
                                             23 BANK1      6     4      2
            _pin_directoin_intialize
                       _send_command
 ---------------------------------------------------------------------------------
 (1) _display_string_at_position                           7     1      6   40987
                                             30 BANK1      6     0      6
                       _display_char
               _lcd_4_bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _display_custom_char                                  9     2      7   81948
                                             36 BANK1      8     1      7
                       _display_char
           _display_char_at_position
                       _send_command
 ---------------------------------------------------------------------------------
 (2) _display_char_at_position                             6     1      5   40964
                                             30 BANK1      6     1      5
               _lcd_4_bit_set_cursor
                     _lcd_send_4bits
               _lcd_send_enable_4bit
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (2) _lcd_4_bit_set_cursor                                 7     3      4   21095
                                             23 BANK1      7     3      4
                       _send_command
 ---------------------------------------------------------------------------------
 (2) _send_command                                         4     1      3   20193
                                             19 BANK1      4     1      3
                     _lcd_send_4bits
               _lcd_send_enable_4bit
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (2) _display_char                                         4     1      3   18213
                                             19 BANK1      4     1      3
                     _lcd_send_4bits
               _lcd_send_enable_4bit
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (3) _lcd_send_enable_4bit                                 3     1      2    5793
                                             10 BANK1      3     1      2
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       9     6      3    6463
                                             10 BANK1      9     6      3
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (3) _pin_write_value                                     10     7      3    5117
                                              0 BANK1     10     7      3
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_INTx_Init                                  3     1      2    3510
                                             14 BANK1      3     1      2
                    _INTX_clear_flag
                       _INTX_disable
                        _INTX_enable
              _INTX_interrupt_handle
                      _INTX_pin_init
                   _INTX_select_edge
 ---------------------------------------------------------------------------------
 (2) _INTX_select_edge                                     5     3      2     282
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _INTX_pin_init                                        5     3      2    1979
                                              9 BANK1      5     3      2
            _pin_directoin_intialize
 ---------------------------------------------------------------------------------
 (2) _pin_directoin_intialize                              9     7      2    1697
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) _INTX_interrupt_handle                                5     3      2     282
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _INTX_enable                                          5     3      2     251
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _INTX_disable                                         5     3      2     189
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _INTX_clear_flag                                      5     3      2     189
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManagerLow                                 9     9      0   73416
                                             43 BANK0      9     9      0
                          _INT_0_ISR
                          _INT_1_ISR
                          _INT_2_ISR
 ---------------------------------------------------------------------------------
 (11) _INT_2_ISR                                           0     0      0   24472
                   Absolute function *
                      _int_1_handler *
 ---------------------------------------------------------------------------------
 (11) _INT_1_ISR                                           0     0      0   24472
                   Absolute function *
                      _int_1_handler *
 ---------------------------------------------------------------------------------
 (11) _INT_0_ISR                                           0     0      0   24472
                   Absolute function *
                      _int_1_handler *
 ---------------------------------------------------------------------------------
 (12) _int_1_handler                                       2     2      0   24472
                                             41 BANK0      2     2      0
         i1_display_char_at_position
              i1_display_custom_char
 ---------------------------------------------------------------------------------
 (13) i1_display_custom_char                               9     2      7   16273
                                             33 BANK0      8     1      7
                     i1_display_char
         i1_display_char_at_position
                     i1_send_command
 ---------------------------------------------------------------------------------
 (14) i1_display_char_at_position                          6     1      5    8199
                                             27 BANK0      6     1      5
             i1_lcd_4_bit_set_cursor
                   i1_lcd_send_4bits
             i1_lcd_send_enable_4bit
                  i1_pin_write_value
 ---------------------------------------------------------------------------------
 (15) i1_lcd_4_bit_set_cursor                              7     3      4    4180
                                             20 BANK0      7     3      4
                     i1_send_command
 ---------------------------------------------------------------------------------
 (14) i1_send_command                                      4     1      3    3713
                                             16 BANK0      4     1      3
                   i1_lcd_send_4bits
             i1_lcd_send_enable_4bit
                  i1_pin_write_value
 ---------------------------------------------------------------------------------
 (14) i1_display_char                                      4     1      3    3433
                                             16 BANK0      4     1      3
                   i1_lcd_send_4bits
             i1_lcd_send_enable_4bit
                  i1_pin_write_value
 ---------------------------------------------------------------------------------
 (15) i1_lcd_send_enable_4bit                              3     1      2    1023
                                              7 BANK0      3     1      2
                  i1_pin_write_value
 ---------------------------------------------------------------------------------
 (15) i1_lcd_send_4bits                                    9     6      3    1363
                                              7 BANK0      9     6      3
                  i1_pin_write_value
 ---------------------------------------------------------------------------------
 (15) i1_pin_write_value                                  10     7      3     677
                                             52 COMRAM     3     0      3
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _InterruptManagerHigh                                6     6      0   52920
                                             46 COMRAM     6     6      0
                        i2_INT_0_ISR
                        i2_INT_1_ISR
                        i2_INT_2_ISR
 ---------------------------------------------------------------------------------
 (20) i2_INT_2_ISR                                         0     0      0   17640
                   Absolute function *
                    i2_int_1_handler *
 ---------------------------------------------------------------------------------
 (20) i2_INT_1_ISR                                         0     0      0   17640
                   Absolute function *
                    i2_int_1_handler *
 ---------------------------------------------------------------------------------
 (20) i2_INT_0_ISR                                         0     0      0   17640
                   Absolute function *
                    i2_int_1_handler *
 ---------------------------------------------------------------------------------
 (21) i2_int_1_handler                                     2     2      0   17640
                                             44 COMRAM     2     2      0
         i2_display_char_at_position
              i2_display_custom_char
 ---------------------------------------------------------------------------------
 (22) i2_display_custom_char                               9     2      7   11730
                                             36 COMRAM     8     1      7
                     i2_display_char
         i2_display_char_at_position
                     i2_send_command
 ---------------------------------------------------------------------------------
 (23) i2_display_char_at_position                          6     1      5    5910
                                             30 COMRAM     6     1      5
             i2_lcd_4_bit_set_cursor
                   i2_lcd_send_4bits
             i2_lcd_send_enable_4bit
                  i2_pin_write_value
 ---------------------------------------------------------------------------------
 (24) i2_lcd_4_bit_set_cursor                              7     3      4    3007
                                             23 COMRAM     7     3      4
                     i2_send_command
 ---------------------------------------------------------------------------------
 (23) i2_send_command                                      4     1      3    2680
                                             19 COMRAM     4     1      3
                   i2_lcd_send_4bits
             i2_lcd_send_enable_4bit
                  i2_pin_write_value
 ---------------------------------------------------------------------------------
 (23) i2_display_char                                      4     1      3    2472
                                             19 COMRAM     4     1      3
                   i2_lcd_send_4bits
             i2_lcd_send_enable_4bit
                  i2_pin_write_value
 ---------------------------------------------------------------------------------
 (24) i2_lcd_send_enable_4bit                              3     1      2     739
                                             10 COMRAM     3     1      2
                  i2_pin_write_value
 ---------------------------------------------------------------------------------
 (24) i2_lcd_send_4bits                                    9     6      3     985
                                             10 COMRAM     9     6      3
                  i2_pin_write_value
 ---------------------------------------------------------------------------------
 (24) i2_pin_write_value                                  10     7      3     491
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 24
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_INTx_Init
     _INTX_clear_flag
     _INTX_disable
     _INTX_enable
     _INTX_interrupt_handle
     _INTX_pin_init
       _pin_directoin_intialize
     _INTX_select_edge
   _Timer1_init
   _display_char_at_position
     _lcd_4_bit_set_cursor
       _send_command
         _lcd_send_4bits
           _pin_write_value
         _lcd_send_enable_4bit
           _pin_write_value
         _pin_write_value
     _lcd_send_4bits
     _lcd_send_enable_4bit
     _pin_write_value
   _display_custom_char
     _display_char
       _lcd_send_4bits
       _lcd_send_enable_4bit
       _pin_write_value
     _display_char_at_position
     _send_command
   _display_string_at_position
     _display_char
     _lcd_4_bit_set_cursor
   _lcd_4_bit_init
     _pin_directoin_intialize
     _send_command
   _short_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc

 _InterruptManagerLow (ROOT)
   _INT_0_ISR
     Absolute function(Fake) *
     _int_1_handler *
       i1_display_char_at_position
         i1_lcd_4_bit_set_cursor
           i1_send_command
             i1_lcd_send_4bits
               i1_pin_write_value
             i1_lcd_send_enable_4bit
               i1_pin_write_value
             i1_pin_write_value
         i1_lcd_send_4bits
         i1_lcd_send_enable_4bit
         i1_pin_write_value
       i1_display_custom_char
         i1_display_char
           i1_lcd_send_4bits
           i1_lcd_send_enable_4bit
           i1_pin_write_value
         i1_display_char_at_position
         i1_send_command
   _INT_1_ISR
     Absolute function(Fake) *
     _int_1_handler *
   _INT_2_ISR
     Absolute function(Fake) *
     _int_1_handler *

 _InterruptManagerHigh (ROOT)
   i2_INT_0_ISR
     Absolute function(Fake) *
     i2_int_1_handler *
       i2_display_char_at_position
         i2_lcd_4_bit_set_cursor
           i2_send_command
             i2_lcd_send_4bits
               i2_pin_write_value
             i2_lcd_send_enable_4bit
               i2_pin_write_value
             i2_pin_write_value
         i2_lcd_send_4bits
         i2_lcd_send_enable_4bit
         i2_pin_write_value
       i2_display_custom_char
         i2_display_char
           i2_lcd_send_4bits
           i2_lcd_send_enable_4bit
           i2_pin_write_value
         i2_display_char_at_position
         i2_send_command
   i2_INT_1_ISR
     Absolute function(Fake) *
     i2_int_1_handler *
   i2_INT_2_ISR
     Absolute function(Fake) *
     i2_int_1_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     77      CD       7       80.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     34      54       5       65.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      4A       1       58.7%
BITBIGSFRhllllh     2E      0       0      40        0.0%
BITBIGSFRhllhh      1C      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRhlllll      7      0       0      41        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BITBIGSFRhllhl       2      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B      12        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Sep 03 14:56:06 2023

                i1display_char@data 0092       __end_of_INTX_interrupt_handle 2B3E  
             __end_of_INTX_pin_init 2AA0                                   _x 0181  
                                 _y 0180       __end_ofi1_display_custom_char 2FB6  
                   ?_lcd_send_4bits 010A                     ?i1_send_command 0090  
     i2display_char_at_position@lcd 001F       i2display_char_at_position@ret 0024  
     i2display_char_at_position@row 0021                          _TRIS_array 00BE  
                                bsr 000FE0               ??_InterruptManagerLow 00AB  
                    i2_send_command 347A                _lcd_4_bit_set_cursor 2628  
                     ?_display_char 0113                                 l104 1DDC  
                               l114 30B0                                 l220 32A2  
                               l109 3032                                 l142 2F32  
                               l119 2C6E                                 l135 2BD8  
                               l208 29FE                                 l225 3680  
                               l241 26F2                                 l500 3390  
                               l510 2A9E                                 l520 3404  
                               l530 2B3C                                 l450 35C6  
                               l516 33B2                                 l518 33B8  
                               l470 2812                                 l519 33BE  
                               l471 2818                                 l359 1C9A  
                               l472 283E                                 l473 2842  
                               l481 23F8                                 l474 2888  
                               l466 27E0                                 l490 248E  
                               l378 1F0E                                 l468 27E8  
                               l469 280E                                 l485 2420  
                               l654 39A6                                 l496 333E  
                               l488 2448                                 l498 3344  
                               l499 334A                                 l790 1B50  
                               l777 1872                                 _abs 37C2  
                               _lcd 01C1              ??_InterruptManagerHigh 002F  
                               _pad 2490                                 _num 01A2  
                               prod 000FF3                                 tosl 000FFD  
                               wreg 000FE8                    ?_short_to_string 016A  
              i2pin_write_value@pin 0001                i2pin_write_value@ret 000A  
       lcd_send_4bits@_data_command 010C                                ?_abs 0112  
                              l1430 3802                                l1422 3622  
                              l1423 362A                                l1351 3728  
                              l1416 16E8                                l1409 1328  
                              l1338 19EA                                l1442 2626  
                              l1450 37C0                                l1427 37FA  
                              l1453 39A8                                l1381 251C  
                              l1383 255A                                l1391 10DC  
                              l1378 24D8                                l1459 383C  
                              l1389 10D4                                l6001 1602  
                              l6011 1684                                l6005 163A  
                              l6021 16AE                                l6023 16D6  
                              l6007 1660                                l6015 1692  
                              l6111 3604                                l6201 19C2  
                              l6017 16A0                                l6009 166E  
                              l6105 35C8                                l6203 19CE  
                              l6107 35D0                                l6211 36EA  
                              l6301 33AA                                l6221 331E  
                              l6061 1B94                                l6053 1B52  
                              l6141 3048                                l6205 19D4  
                              l6109 35DE                                l6213 36F2  
                              l7101 14C8                                ?_pad 0110  
                              l6231 338E                                l6223 3324  
                              l6063 1BF2                                l6055 1B58  
                              l6143 3050                                l6151 2BDA  
                              l6207 19D8                                l6215 36FA  
                              l7103 14DA                                l6305 33C4  
                              l6225 3336                                l6321 2AB8  
                              l6057 1B6A                                l6241 23B6  
                              l6145 30AE                                l6137 3034  
                              l6081 2640                                l6153 2BEE  
                              l6401 1CB8                                l6217 3716  
                              l6209 36D8                                l7105 14F8  
       ?i1_display_char_at_position 009B                                l6307 3402  
                              l6323 2AC0                                l6331 2AFC  
                              l6067 1C56                                l6059 1B8C  
                              l6251 23FE                                l6243 23BC  
                              l6139 3034                                l6091 269C  
                              l6083 2648                                l6155 2BF6  
                              l6411 1CFC                                l6403 1CDC  
                              l5611 255C                                l7107 1516  
                              l6229 3350                                l6325 2AD4  
                              l6333 2B3A                                l6317 2AA0  
                              l6069 1C98                                l6253 241A  
                              l6245 23CE                                l6261 244E  
                              l6085 264E                                l6077 2628  
                              l6157 2C6C                                l6149 2BDA  
                              l6421 1D58                                l6413 1D00  
                              l6181 1894                                l5621 25E0  
                              l5613 2570                                l7061 133C  
                              l6351 2806                                l6343 27C0  
                              l6327 2AE8                                l6319 2AA6  
                              l6271 2A00                                l6255 2426  
                              l6247 23D6                                l6263 248C  
                              l5711 1E18                                l6087 2668  
                              l6095 26B6                                l6079 262E  
                              l6431 1DA6                                l6423 1D5E  
                              l6415 1D10                                l6183 18A0  
                              l5615 2582                                l7071 1370  
                              l7063 134A                                l6353 281A  
                              l6361 2886                                l6345 27C6  
                              l6281 2A48                                l6273 2A06  
                              l6257 2442                                l6249 23F2  
                              l5713 1E20                                l5721 1F0C  
                              l5705 1DDE                                l6089 2682  
                              l6097 26F0                                l6441 2B3E  
                              l6433 1DB8                                l6425 1D70  
                              l6417 1D22                                l6409 1CE0  
                              l6193 1948                                l6177 1874  
                              l5801 1B00                                l5617 258C  
                              l7081 13BA                                l7073 1374  
                              l7057 132A                                l6355 2836  
                              l6347 27D8                                l6275 2A18  
                              l5715 1E7E                                l5707 1DE4  
                              l6451 2BA6                                l6443 2B52  
                              l6435 1DCA                                l6427 1D82  
                              l6419 1D34                                l6195 1974  
                              l6187 18D6                                l5731 16F0  
                              l5803 1B10                                l5619 25AA  
                              l5651 3788                                l5811 24A0  
                              l7091 1450                                l7075 1384  
                              l7059 132E                                l6349 27EA  
                              l6277 2A20                                l6285 2A5C  
                              l6613 39A2                                l5709 1DF6  
                              l7421 26CA                                l6461 2EE4  
                              l6453 2EB2                                l6445 2B56  
                              l6429 1D94                                l6189 192E  
                              l5741 1750                                l5733 16FE  
                              l5805 1B30                                l5653 379A  
                              l5661 3816                                l5821 24F8  
                              l5813 24B4                                l5901 10F8  
                              l7093 146C                                l7085 13CE  
                              l7077 13A4                                l7069 1350  
                              l6359 2848                                l7431 2B1C  
                              l6279 2A34                                l6287 2A9A  
                              l7423 1EF6                                l5719 1EE2  
                              l6471 2F0A                                l6455 2EB8  
                              l6447 2B6E                                l6439 2B3E  
                              l6199 198E                                l5751 179A  
                              l5743 1754                                l5735 171E  
                              l5831 37C2                                l5655 37A0  
                              l5663 382E                                l5823 24FE  
                              l5815 24C4                                l5911 112A  
                              l5903 1108                                l7095 1472  
                              l7087 1422                                l7079 13B4  
                              l6297 3392                                l7433 2868  
                              l7425 246E                                l6473 2F1A  
                              l6457 2ECA                                l6449 2BA0  
                              l5761 180A                                l5753 17A8  
                              l5745 1760                                l5737 1722  
                              l5729 16EA                                l5833 37DE  
                              l5649 377A                                l5657 3804  
                              l5825 252C                                l5817 24D0  
                              l5809 2490                                l5921 123A  
                              l5913 11AE                                l5905 1110  
                              l6561 295E                                l7097 148C  
                              l7089 143C                                l6299 3398  
                              l7435 3370                                l7427 2A7C  
                              l5851 3242                                l6467 2EEA  
                              l6459 2ECE                                l6395 1C9C  
                              l5763 181C                                l5755 17BA  
                              l5747 177E                                l5739 1730  
                              l5659 3810                                l5827 2540  
                              l5819 24E4                                l5931 12B0  
                              l5923 1258                                l5915 11B4  
                              l5907 111A                                l6571 29C2  
                              l6563 2970                                l6555 294C  
                              l7099 14AA                                l7437 33E4  
                              l7429 1C82                                l6581 3572  
                              l5861 328E                                l5853 324A  
                              l6469 2F06                                l6397 1CA2  
                              l5757 17E8                                l5749 1786  
                              l5765 1822                                l5781 1A24  
                              l5773 19EC                                l5941 12EE  
                              l5933 12C0                                l5925 1272  
                              l5917 11BA                                l5909 1122  
                              l6573 29DE                                l6565 2974  
                              l6557 294C                                l6591 35BA  
                              l6583 3576                                l5863 3290  
                              l5847 322A                                l5871 362C  
                              l6399 1CB4                                l5767 1832  
                              l5759 1808                                l5791 1A8C  
                              l5783 1A32                                l5775 19F2  
                              l5935 12C8                                l5943 12FE  
                              l5927 128C                                l5919 121E  
                              l6575 29E0                                l6567 2990  
                              l6559 2958                                l6585 3596  
                              l6577 355E                                l5865 32A0  
                              l5849 3230                                l5881 367E  
                              l5873 3640                                l5769 1852  
                              l5793 1A9A                                l5785 1A52  
                              l5777 1A00                                l5937 12DA  
                              l5929 129C                                l6569 29A2  
                              l6587 35A2                                l6579 355E  
                              l5859 324E                                l5875 3648  
                              l5795 1AC8                                l5787 1A70  
                              l5779 1A20                                l5939 12E6  
                              l5891 109A                                l6589 35AE  
                              l5877 365C                                l5869 362C  
                              l5981 2FD2                                l5797 1AE8  
                              l5789 1A78                                l5893 10AA  
                              l5885 1030                                l5879 3664  
                              l5983 3030                                l5975 2FB6  
                              l5799 1AFA                                l5895 10AC  
                              l5887 1050                                l5991 1556  
                              l5977 2FB6                                l5897 10C6  
                              l5889 107A                                l5993 1568  
                              l5979 2FCA                                l5899 10E4  
                              l5995 156C                                l5987 1522  
                              l5997 1592                                l5989 1548  
                              l5999 15B8                                STR_1 102C  
                              STR_2 102C                                STR_4 101B  
                              STR_5 1011                                STR_6 1025  
                              _LATA 000F89                                _LATB 000F8A  
                  ?_INTX_clear_flag 0100                                _LATC 000F8B  
                              _LATD 000F8C                                _LATE 000F8D  
                              u5000 3622                                u5001 361E  
                              u5100 19EA                                u4300 2582  
                              u5101 19E6                                u4301 257E  
                              u5110 3336                                u5030 3048  
                              u4310 25AA                                u5111 3332  
                              u5031 3044                                u4311 25A6  
                              u5200 2806                                u5120 23CE  
                              u5040 2BEE                                u4320 25E0  
                              u5201 2802                                u5121 23CA  
                              u5041 2BEA                                u4321 25DC  
                              u5210 2836                                u5130 23F2  
                              u5211 2832                                u5131 23EE  
                              u5140 241A                                u5300 2BD8  
                              u5060 1890                                u4500 177E  
                              u6100 1450                                u5141 2416  
                              u5301 2BD4                                u5061 188C  
                              u4501 177A                                u6101 144C  
                              u5150 2442                                u4430 1DF6  
                              u5310 2ECA                                u5070 18D2  
                              u4510 17A8                                u5151 243E  
                              u4431 1DF2                                u5311 2EC6  
                              u5071 18CE                                u4511 17A4  
                              u5160 2A18                                u4440 1E18  
                              u5320 2F1A                                u5080 1944  
                              u4520 17E8                                u4600 24A0  
                              u5161 2A14                                u4441 1E14  
                              u5321 2F16                                u5081 1940  
                              u4521 17E4                                u4601 249C  
                              u5170 33AA                                u5250 1CB4  
                              u5090 198A                                u4530 1832  
                              u4290 2570                                u4370 37C0  
                              u4610 24C4                                u5171 33A6  
                              u5251 1CB0                                u5091 1986  
                              u4531 182E                                u4291 256C  
                              u4371 37BC                                u4611 24C0  
                              u5180 2AB8                                u5260 1D10  
                              u4540 1A00                                u4380 382E  
                              u4620 251C                                u4700 1062  
                              u5181 2AB4                                u5261 1D0C  
                              u4541 19FC                                u4381 382A  
                              u4621 2518                                u4701 105C  
                              u5421 2952                                u6117 13AC  
                              u5190 27D8                                u4454 1E40  
                              u5270 2B52                                u4470 16FE  
                              u4550 1A32                                u4630 252C  
                              u4710 1064                                u5430 2970  
                              u5191 27D4                                u4455 1E3C  
                              u5271 2B4E                                u4471 16FA  
                              u4551 1A2E                                u4631 2528  
                              u5431 296C                                u6127 142E  
                              u4464 1E9E                                u5280 2B98  
                              u4480 1730                                u4560 1A70  
                              u4640 37DE                                u4800 128C  
                              u4720 107A                                u5440 29FE  
                              u6080 1384                                u4465 1E9A  
                              u4481 172C                                u4561 1A6C  
                              u4641 37DA                                u4801 1288  
                              u4721 1076                                u5441 29FA  
                              u6137 147E                                u6081 1380  
                              u5450 3572                                u5290 2BC8  
                              u4570 1A9A                                u4810 129C  
                              u4730 10AA                                u6090 13CA  
                              u5451 356E                                u6147 1D18  
                              u4491 175A                                u4571 1A96  
                              u4811 1298                                u4731 10A6  
                              u6091 13C6                                u4660 3242  
                              u4580 1AC8                                u4820 12B0  
                              u4740 10C6                                u4900 1660  
                              u4661 323E                                u6157 1D3C  
                              u4581 1AC4                                u4821 12AC  
                              u4741 10C2                                u4901 165C  
                              u4590 1B10                                u4830 12C0  
                              u4750 10F8                                u5287 2B8E  
                              u6167 1D5A                                u4591 1B0C  
                              u4831 12BC                                u4751 10F4  
                              u4680 32A0                                u4840 12DA  
                              u4760 1108                                u4681 329C  
                              u6177 365E                                u5297 2BBE  
                              u4841 12D6                                u4761 1104  
                              u4930 1B6A                                u4674 3278  
                              u4690 3640                                u4770 123A  
                              u4931 1B66                                u4675 3274  
                              u4691 363C                                u4771 1236  
                              u4940 1B8C                                u4860 2FCA  
                              u4780 1258                                u4941 1B88  
                              u4861 2FC6                                u4781 1254  
                              u4790 1272                                u4870 1548  
                              u4791 126E                                u4871 1544  
                              u4880 1592                                u4881 158E  
                              u4970 1C6E                                u4954 1BB4  
                              u4890 15B8                                u4971 1C68  
                              u4955 1BB0                                u4891 15B4  
                              u4980 1C70                                u4964 1C12  
                              u4965 1C0E                                u4990 2640  
                              u4991 263C                                _TMR1 000FCE  
          ??i1_lcd_send_enable_4bit 0038                     send_command@lcd 0113  
                   send_command@ret 0116                                abs@a 0112  
                              _dbuf 0182                                _main 132A  
                              _dtoa 1030                                _prec 00CA  
                              _nout 017D                                pad@i 0117  
                              pad@p 0114                                fsr0h 000FEA  
                              fsr1h 000FE2                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 0119  
                              fsr2l 000FD9                                btemp 004B  
                              prodh 000FF4                                prodl 000FF3  
                              start 00C6            __end_of_INTX_select_edge 2490  
           _int_1_handler$intlevel1 1F1A             ??i2_display_custom_char 002C  
                      ___param_bank 000000        i2display_custom_char@counter 002C  
      i2display_custom_char@mem_pos 002B                               ??_abs 0114  
                             ??_pad 0116                    ??i2_display_char 0017  
            __end_ofi2_send_command 34EC                      ??_display_char 0116  
             ?_lcd_4_bit_set_cursor 0117                     __end_of___aodiv 1874  
                             ?_main 0001                               ?_dtoa 011B  
                   __end_of___aomod 1B52                               _T1CON 000FCD  
                             i1l114 31AC                               i1l220 331C  
                             i1l109 312E                               i1l142 2FB4  
                             i1l119 2D04                               i1l225 36D6  
                             i1l241 27BE                               i2l114 355C  
                             i2l220 3478                               i2l109 34EA  
                             i2l142 3228                               i1l534 38CC  
                             i1l542 386C                               i2l119 2EB0  
                             i2l225 3778                               i2l241 294A  
                             i1l378 2172                               i1l538 389C  
                             i1l571 007E                               i1l637 2040  
                             i1l574 009E                               i1l569 005E  
                             i2l534 395C                               i2l542 38FC  
                             i2l560 2D60                               i2l378 229E  
                             i2l538 392C                               i2l563 2D80  
                             i2l637 23B4                               i2l558 2D40  
                      vfpfcnvrt@fmt 0141                       _int_1_handler 1F10  
                             _PORTA 000F80                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _PORTE 000F84                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
             lcd_send_4bits@counter 0112                               _flags 00CC  
      i1lcd_4_bit_set_cursor@column 0097                               _fputc 255C  
                             _int_t 01C7                               _fputs 377A  
                             _speed 0043                               pad@fp 0110  
                             _width 00C8         ?_display_string_at_position 011E  
                             _putch 39A8                               dtoa@d 011D  
                             dtoa@i 013D                               dtoa@n 0135  
                             dtoa@p 012F                               dtoa@s 0133  
                             dtoa@w 0131                               pclath 000FFA  
                             pclatu 000FFB                               tablat 000FF5  
                fp_i2_int_1_handler 0000                               ttemp5 004C  
                             ttemp6 004F                               ttemp7 0053  
                             status 000FD8                        ?i2_INT_0_ISR 0001  
                      ?i2_INT_1_ISR 0001                        ?i2_INT_2_ISR 0001  
                             wtemp8 004C                     __end_of_sprintf 372A  
                short_to_string@str 016C                        ?_INTX_enable 0100  
            i2pin_write_value@value 0003                     __initialization 2D9C  
                      __end_of_main 1522                        __end_of_dtoa 132A  
               i2lcd_send_4bits@lcd 000B                 i2lcd_send_4bits@ret 0012  
                   ?i2_send_command 0014        INTX_interrupt_handle@int_obj 0100  
        display_custom_char@counter 012B          display_custom_char@mem_pos 012A  
                            ??_main 0175                              ??_dtoa 0125  
                 i1_pin_write_value 2042                      ?_int_1_handler 0001  
                     __activetblptr 000003                    led_turn_on@F3016 0049  
       display_char_at_position@lcd 011E         display_char_at_position@ret 0123  
       display_char_at_position@row 0120                  ?i1_pin_write_value 0035  
  __end_of_display_char_at_position 2C70                  i2display_char@data 0016  
                            ?_fputc 0100                   __end_of_INT_0_ISR 38CE  
                            ?_fputs 0109                   __end_of_INT_1_ISR 389E  
                 __end_of_INT_2_ISR 386E                              ?_putch 0001  
               ??i1_pin_write_value 0080             lcd_send_enable_4bit@lcd 010A  
          i1display_custom_char@lcd 00A1             lcd_send_enable_4bit@ret 010C  
                  i1_lcd_send_4bits 32A4            i1display_custom_char@row 00A3  
                            i1l6031 3130                              i1l6033 3144  
                            i1l6041 2C70                              i1l6121 2F66  
                            i1l6113 2F34        __end_of_lcd_send_enable_4bit 3682  
                            i1l6035 314C                              i1l6043 2C70  
                            i1l6131 2F8C                              i1l6115 2F3A  
                            i1l6037 31AA                              i1l6029 3130  
                            i1l6045 2C84                              i1l6133 2F9C  
                            i1l6117 2F4C                              i1l6047 2C8C  
                            i1l6127 2F6C                              i1l6119 2F50  
                            i2l4001 28A0                              i1l6049 2D02  
                            i1l6129 2F88                              i2l4011 28F6  
                            i2l4003 28A8                              i1l7051 007A  
                            i1l7043 003E                              i2l4005 28AE  
                            i1l5701 36D4                              i1l7053 008C  
                            i1l7045 004C                              i2l4007 28C6  
                            i2l4015 290E                              i1l5631 207C  
                            i1l7055 009A                              i1l7047 005A  
                            i2l4009 28DE                              i2l4017 2948  
                            i2l4121 2E44                              i1l5633 2084  
                            i1l5641 2170                              i1l5625 2042  
                            i1l6601 386E                              i1l7049 006C  
                            i2l4123 2EAE                              i2l4115 2E2A  
                            i2l4211 31AE                              i1l5635 20E2  
                            i1l5627 2048                              i1l6371 1F1A  
                            i1l6603 3870                              i1l6611 3854  
                            i2l4117 2E2A                              i2l4213 31B2  
                            i1l5629 205A                              i1l6381 1FD2  
                            i1l6373 1F56                              i1l6605 3884  
                            i2l4119 2E3C                              i2l4231 3210  
                            i2l4215 31C4                              i1l5639 2146  
                            i1l5671 32BC                              i1l6391 2004  
                            i1l6375 1F6A                              i1l6383 1FD6  
                            i1l6607 383E                              i2l3601 218A  
                            i2l4225 31E2                              i2l4217 31C8  
                            i1l7441 215A                              i1l5681 3308  
                            i1l5673 32C4                              i1l5841 30CE  
                            i1l6393 201E                              i1l6385 1FE6  
                            i1l6377 1F80                              i1l6609 3840  
                            i2l3611 2272                              i2l3603 21AC  
                            i2l4091 34EC                              i2l4227 31FE  
                            i2l4219 31DE                              i1l5683 330A  
                            i1l5667 32A4                              i1l5691 3682  
                            i1l5843 312C                              i1l5835 30B2  
                            i1l6387 1FE8                              i1l6379 1FC0  
                            i2l3605 21B4                              i2l3613 229C  
                            i2l3701 372A                              i2l4093 34EC  
                            i2l4229 3200                              i2l4501 234A  
                            i1l5685 331A                              i1l5669 32AA  
                            i1l5693 3696                              i1l5837 30B2  
                            i1l6389 1FEC                              i2l3607 2210  
                            i2l3711 3776                              i2l3703 373C  
                            i2l4095 34FE                              i2l4511 237C  
                            i2l4503 234E                              i1l5679 32C8  
                            i1l5695 369E                              i1l5839 30C6  
                            i1l7439 2796                              i1l5951 270C  
                            i2l3705 3744                              i2l4097 3506  
                            i2l4513 2394                              i2l4505 235E  
                            i1l5697 36B2                              i1l5689 3682  
                            i1l5961 2768                              i1l5953 2714  
                            i2l3707 3758                              i2l4099 355A  
                            i2l4507 2360                              i1l5699 36BA  
                            i1l5955 271A                              i1l5947 26F4  
                            i1l6595 389E                              i2l3661 3406  
                            i2l3709 3760                              i2l4509 2364  
                            i1l5957 2734                              i1l5965 2782  
                            i1l5949 26FA                              i1l6597 38A0  
                            i2l3663 340A                              i2l7031 2D2E  
                            i1l5959 274E                              i1l5967 27BC  
                            i1l6599 38B4                              i2l3673 3428  
                            i2l3665 341C                              i2l7041 2D7C  
                            i2l7033 2D3C                              i2l3675 3464  
                            i2l3667 3424                              i2l4491 22A0  
                            i2l7035 2D4E                              i2l3597 2174  
                            i2l3677 3466                              i2l3861 348C  
                            i2l4493 22D8                              i2l7037 2D5C  
                            i2l7029 2D20                              i2l3599 2178  
                            i2l3679 3476                              i2l3863 3494  
                            i2l4495 22EC                              i2l7039 2D6E  
                            i2l3865 34E8                              i2l3857 347A  
                            i2l4497 2302                              i2l3699 372A  
                            i2l3859 347A                              i2l4499 233C  
                            i2l6621 38FE                              i2l6615 392E  
                            i2l6623 3900                              i2l6631 38E4  
                            i2l6617 3930                              i2l6625 3914  
                            i2l7443 2922                              i2l6619 3944  
                            i2l6627 38CE                              i2l7445 2286  
                            i2l3997 288A                              i2l6629 38D0  
                            i2l3999 288E                              _OSCCON 000FD3  
                            _TMR1IF 007CF0                              _TMR1ON 007E68  
                     ??_Timer1_init 0100                        vfprintf@cfmt 0155  
         i1lcd_send_enable_4bit@lcd 0087           i1lcd_send_enable_4bit@ret 0089  
           ?i2_lcd_send_enable_4bit 000B                           ??___aodiv 0110  
           ?i1_lcd_4_bit_set_cursor 0094                           ??___aomod 0110  
                            _cactus 01B1            ?_pin_directoin_intialize 0100  
         __end_ofi1_pin_write_value 2174              ??_lcd_4_bit_set_cursor 011B  
                            _memset 1874                              _ground 01A9  
                            clear_0 2E02                              clear_1 2E0E  
                            clear_2 2E1A                              isa$std 000001  
                            pad@buf 0112                              dtoa@fp 011B  
                            _strlen 3804                       led_init@F3011 004A  
                 ?i2_lcd_send_4bits 000B                              fputc@c 0100  
                            fputs@c 010D                              fputs@i 010E  
                      __pdataCOMRAM 0038                              fputs@s 0109  
                      __mediumconst 0000                  ??i2_lcd_send_4bits 000E  
            INTX_clear_flag@int_obj 0100                 INTX_disable@int_obj 0100  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                              putch@c 0001  
                 i2_pin_write_value 2174                    __end_of_vfprintf 362C  
               short_to_string@Temp 016E                 short_to_string@data 016A  
                         ??_sprintf 015D               i1send_command@command 0092  
                ?i2_pin_write_value 0001                          __accesstop 0080  
           __end_of__initialization 2E20                __end_of_display_char 30B2  
                     ?_INTX_disable 0100                       ___rparam_used 000001  
         i2lcd_4_bit_set_cursor@lcd 0018           i2lcd_4_bit_set_cursor@ret 001E  
         i2lcd_4_bit_set_cursor@row 001A                    ??_lcd_send_4bits 010D  
               ??i2_pin_write_value 0004                    ??i1_send_command 0038  
      ??i2_display_char_at_position 0024      __end_ofi2_lcd_send_enable_4bit 377A  
 i2display_char_at_position@coloumn 0022   i1display_char_at_position@coloumn 009E  
   display_char_at_position@coloumn 0121      __end_ofi1_lcd_4_bit_set_cursor 27C0  
                 ??i2_int_1_handler 002D                      __pcstackCOMRAM 0001  
                      __pidataBANK0 3982                        __pidataBANK1 395E  
                     __end_of_fputc 2628                       __end_of_fputs 37C2  
         display_custom_char@cloumn 0127                       __end_of_putch 39AA  
            i1_lcd_send_enable_4bit 3682                     ??_int_1_handler 00A9  
               __end_of_Timer1_init 39A8           i2display_custom_char@data 0029  
         __end_ofi2_pin_write_value 22A0             i2lcd_send_4bits@counter 0013  
       __end_of_display_custom_char 2F34         __end_of_Interrupt_INTx_Init 35C8  
                           ??_fputc 0104                             ??_fputs 010D  
                           ??_putch 0100                          __pbssBANK0 00C8  
                        __pbssBANK1 0177                   ??_pin_write_value 0103  
                    ??_INTX_disable 0102                  INTX_clear_flag@ret 0104  
                    _lcd_4_bit_init 1C9C                   ?_INTX_select_edge 0100  
       __end_of_InterruptManagerLow 00C6                       _buttons_array 1001  
         ?_display_char_at_position 011E                  ??_INTX_select_edge 0102  
                 led_turn_off@F3021 0048                       ?_send_command 0113  
     __end_ofi2_display_custom_char 322A        i1display_custom_char@counter 00A8  
      i1display_custom_char@mem_pos 00A7                      INTX_enable@ret 0104  
                   led_toggle@F3026 0047                             ?_memset 0100  
             _INTX_interrupt_handle 2AA0               i1_display_custom_char 2F34  
              _lcd_send_enable_4bit 362C   display_string_at_position@coloumn 0121  
                           ?_strlen 0100                i1pin_write_value@pin 0035  
              i1pin_write_value@ret 0086         i1display_custom_char@cloumn 00A4  
          ??i2_lcd_4_bit_set_cursor 001C              __end_of_lcd_4_bit_init 1DDE  
                           __Hparam 0000                    ??i2_send_command 0017  
                           __Lparam 0000                         _Timer1_init 39A2  
                    ??_send_command 0116                             ___aodiv 16EA  
                           ___aomod 19EC                           ?_vfprintf 014F  
                      __psmallconst 1000            __end_ofi1_lcd_send_4bits 331E  
             ?_lcd_send_enable_4bit 010A                             __pcinit 2D9C  
                           __ramtop 1000                       relay_on@F3010 0045  
                           __ptext0 132A                             __ptext1 294C  
                           __ptext2 36D8                             __ptext3 35C8  
                           __ptext4 1522                             __ptext5 1030  
                           __ptext6 2490                             __ptext7 3804  
                           __ptext8 377A                             __ptext9 255C  
     i1lcd_send_4bits@_data_command 0089                           _T1CONbits 000FCD  
                           _counter 017F                             _sprintf 36D8  
                    __pintcode_body 2D06                end_of_initialization 2E20  
                 lcd_send_4bits@lcd 010A                   lcd_send_4bits@ret 0111  
                           fputc@fp 0102                             memset@c 0102  
                           memset@k 0108                             memset@n 0104  
                           memset@s 010A                        _int0_handler 00D2  
                         _INT_0_ISR 389E                             int_func 2D06  
                           fputs@fp 010B                           _INT_1_ISR 386E  
                         _INT_2_ISR 383E                     ?_lcd_4_bit_init 0117  
                      _int1_handler 00D0                           _LAT_array 00B4  
__end_ofi2_display_char_at_position 2EB2          i2_display_char_at_position 2E2A  
              short_to_string@F3178 0177              display_custom_char@lcd 0124  
                      _int2_handler 00CE              display_custom_char@row 0126  
            i1pin_write_value@value 0037                   __end_of_vfpfcnvrt 16EA  
        pin_directoin_intialize@pin 0100          pin_directoin_intialize@ret 0108  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE              ?_INTX_interrupt_handle 0100  
                     _INTX_pin_init 2A00                          ??_vfprintf 0155  
            ?i1_display_custom_char 00A1                             strlen@a 0102  
                           strlen@s 0100       display_string_at_position@lcd 011E  
     display_string_at_position@row 0120                        _display_char 3034  
              __end_of_INTX_disable 3392                   i1display_char@lcd 0090  
                 i1display_char@ret 0093                     i2_int_1_handler 22A0  
                        ?_INT_0_ISR 0001                          ?_INT_1_ISR 0001  
                        ?_INT_2_ISR 0001                  INTX_enable@int_obj 0100  
              pin_write_value@value 0102                 INTX_select_edge@ret 0104  
           ?i1_lcd_send_enable_4bit 0087                   ??_short_to_string 016E  
                    ?_INTX_pin_init 0109              Interrupt_INTx_Init@ret 0110  
            ??_lcd_send_enable_4bit 010C           i2lcd_send_enable_4bit@lcd 000B  
         i2lcd_send_enable_4bit@ret 000D                         vfpfcnvrt@ap 0143  
                       vfpfcnvrt@fp 013F                         vfpfcnvrt@ll 0147  
     i1display_char_at_position@lcd 009B                       __pidataCOMRAM 3996  
     i1display_char_at_position@ret 00A0                   ??_INTX_clear_flag 0102  
     i1display_char_at_position@row 009D                      __end_of_memset 19EC  
                 lcd_4_bit_init@lcd 0117                   lcd_4_bit_init@ret 011C  
                    __end_of_strlen 383E                     _pin_write_value 1DDE  
               start_initialization 2D9C                      i1_display_char 3130  
                       __end_of_abs 3804                         __end_of_pad 255C  
           INTX_select_edge@int_obj 0100                __end_of_send_command 3034  
             i2send_command@command 0016        ??i1_display_char_at_position 0038  
                 i2display_char@lcd 0014                INTX_pin_init@int_obj 0109  
                 i2display_char@ret 0017      __end_ofi1_lcd_send_enable_4bit 36D8  
                       vfprintf@fmt 0151                         __pdataBANK0 00B4  
                       __pdataBANK1 01A9      i2display_char_at_position@data 0023  
                          ??_memset 0106                          memset@dest 0100  
            i2_lcd_4_bit_set_cursor 288A                            ??_strlen 0102  
             __end_of_int_1_handler 2042              __end_ofi1_display_char 31AE  
           __end_ofi2_int_1_handler 23B6                         __pbssCOMRAM 0044  
                     __pcstackBANK0 0080                       __pcstackBANK1 0100  
                pin_write_value@pin 0100                  pin_write_value@ret 0109  
                  ___aodiv@dividend 0100                   i1send_command@lcd 0090  
                 i1send_command@ret 0093        ??_display_string_at_position 0124  
                     ??i2_INT_0_ISR 002F                       ??i2_INT_1_ISR 002F  
                     ??i2_INT_2_ISR 002F                         ??_INT_0_ISR 0038  
                       ??_INT_1_ISR 0038                         ??_INT_2_ISR 0038  
                     ??_INTX_enable 0102        __end_of_InterruptManagerHigh 2D9C  
                         _dtoa$1863 012D                     ??_INTX_pin_init 010B  
                      ?_Timer1_init 0001                           __pintcode 0008  
                          ?___aodiv 0100                            ?___aomod 0100  
                  ___aodiv@quotient 0112            INTX_interrupt_handle@ret 0104  
           __end_of_pin_write_value 1F10                         __pintcodelo 0018  
                 ?i1_lcd_send_4bits 0087               i2_display_custom_char 31AE  
    i1display_char_at_position@data 009F                     ?i1_display_char 0090  
                ??i1_lcd_send_4bits 008A                         __smallconst 1000  
                    i2_display_char 34EC             _pin_directoin_intialize 1B52  
                   INTX_disable@ret 0104                    ??_lcd_4_bit_init 0119  
                          ?_sprintf 0157            ??i2_lcd_send_enable_4bit 000D  
          ??i1_lcd_4_bit_set_cursor 0098                    i2_lcd_send_4bits 3406  
                 i2send_command@lcd 0014                   i2send_command@ret 0017  
       ?i2_display_char_at_position 001F            _display_char_at_position 2BDA  
                      _INTX_disable 331E                            i1u501_20 2F4C  
                          i1u501_21 2F48                            i1u502_20 2F9C  
                          i1u502_21 2F98                            i1u440_24 32F2  
                          i1u440_25 32EE                            i1u433_20 205A  
                          i1u441_20 331A                            i1u433_21 2056  
                          i1u441_21 3316                            i1u434_20 207C  
                          i1u442_20 3696                            i1u522_20 1F6A  
                          i1u602_20 004C                            i1u434_21 2078  
                          i1u442_21 3692                            i1u522_21 1F66  
                          i1u602_21 0048                            i1u523_20 1F7C  
                          i1u603_20 005A                            i1u523_21 1F78  
                          i1u603_21 0056                            i1u435_24 20A4  
                          i1u435_25 20A0                            i1u524_20 1FE6  
                          i1u604_20 006C                            i1u524_21 1FE2  
                          i1u604_21 0068                            i1u436_24 2102  
                          i1u436_25 20FE                            i1u620_27 36B4  
                          i1u605_20 007A             ??_INTX_interrupt_handle 0102  
                          i1u605_21 0076                            i1u550_20 3854  
                          i1u606_20 008C                            i1u550_21 3850  
                          i1u606_21 0088                            i1u439_20 32BC  
                          i1u607_20 009A                            i1u439_21 32B8  
                          i1u607_21 0096                            i1u551_28 385A  
                          i1u551_29 386C                            i2u304_40 31C4  
                          i2u304_41 31C0                            i1u465_20 30C6  
                          i1u465_21 30C2                            i2u305_40 3210  
                          i2u305_41 320C                            i1u546_20 38B4  
                          i1u546_21 38B0                            i2u226_40 218A  
                          i2u330_40 235E                            i2u226_41 2186  
                          i2u330_41 235A                            i1u618_27 1FC8  
                          i1u491_20 3144                            i1u491_21 3140  
                          i2u227_40 21AC                            i2u235_40 341C  
                          i2u227_41 21A8                            i2u235_41 3418  
                          i1u619_27 1FF8                            i1u492_20 2C84  
                          i1u547_28 38BA                            i1u548_20 3884  
                          i1u492_21 2C80                            i1u547_29 38CC  
                          i1u548_21 3880                            i2u228_44 21D4  
                          i2u236_44 3452                            i1u485_20 270C  
                          i2u228_45 21D0                            i2u236_45 344E  
                          i1u485_21 2708                            i2u237_40 3476  
                          i2u237_41 3472                            i2u229_44 2230  
                          i1u549_28 388A                            i2u229_45 222C  
                          i1u549_29 389C                            i2u239_40 373C  
                          i2u263_40 348C                            i2u239_41 3738  
                          i2u263_41 3488                            i2u328_40 22EC  
                          i2u600_40 2D6E                            i2u328_41 22E8  
                          i2u600_41 2D6A                            i2u329_40 22FE  
                          i2u601_40 2D7C                            i2u329_41 22FA  
                          i2u601_41 2D78                            _PIR1bits 000F9E  
                          i2u291_40 34FE                            i2u291_41 34FA  
                          i2u284_40 28A0                            i2u284_41 289C  
                          i2u293_40 2E3C                            i2u293_41 2E38  
                          i2u621_47 2342                            i2u622_47 236E  
                          i2u623_47 375A                            i2u552_40 3944  
                          i2u552_41 3940                            i2u553_48 394A  
                          i2u554_40 3914                            i2u553_49 395C  
                          i2u554_41 3910                            i2u555_48 391A  
                          i2u556_40 38E4                            i2u555_49 392C  
                          i2u556_41 38E0                            i2u557_48 38EA  
                          i2u557_49 38FC             ??i1_display_custom_char 0038  
                          i2u596_40 2D2E                            i2u596_41 2D2A  
                          i2u597_40 2D3C                            i2u597_41 2D38  
                          i2u598_40 2D4E                            i2u598_41 2D4A  
                          i2u599_40 2D5C                            i2u599_41 2D58  
                          _RCONbits 000FD0                 __end_ofi2_INT_0_ISR 395E  
               __end_ofi2_INT_1_ISR 392E                 __end_ofi2_INT_2_ISR 38FE  
       i2display_custom_char@cloumn 0028                 __end_of_INTX_enable 288A  
                         _vfpfcnvrt 1522              __end_ofi2_display_char 355E  
                  ?i2_int_1_handler 0001                     relay_init@F3005 0046  
                       _INTCON2bits 000FF1  __end_ofi1_display_char_at_position 2D06  
        i1_display_char_at_position 2C70                         _INTCON3bits 000FF0  
                         copy_data0 2DB0                           copy_data1 2DD0  
                         copy_data2 2DF0                 send_command@command 0115  
                   _short_to_string 294C                    INTX_pin_init@ret 010D  
                   _INTX_clear_flag 3392                            __Hrparam 0000  
                        vfprintf@ap 0153                            __Lrparam 0000  
                        vfprintf@fp 014F                 i1lcd_send_4bits@lcd 0087  
               i1lcd_send_4bits@ret 008E                        _send_command 2FB6  
            ?i2_display_custom_char 0025                          ?_vfpfcnvrt 013F  
                  ?_pin_write_value 0100          Interrupt_INTx_Init@int_obj 010E  
                   ___aodiv@divisor 0108                     ___aodiv@counter 0110  
                  display_char@data 0115           ??_pin_directoin_intialize 0102  
                   ?i2_display_char 0014                          sprintf@fmt 0159  
                  _INTX_select_edge 23B6                _InterruptManagerHigh 0008  
                          __ptext10 39A8                            __ptext11 37C2  
                          __ptext20 2FB6                            __ptext12 19EC  
                          __ptext21 3034                            __ptext13 16EA  
                          __ptext30 2AA0                            __ptext22 362C  
                          __ptext14 1874                            __ptext31 27C0  
                          __ptext23 322A                            __ptext15 1C9C  
                          __ptext40 2C70                            __ptext32 331E  
                          __ptext24 1DDE                            __ptext16 2B3E  
                          __ptext41 26F4                            __ptext33 3392  
                          __ptext25 39A2                            __ptext17 2EB2  
                          __ptext50 392E                            __ptext42 30B2  
                          __ptext26 355E                            __ptext18 2BDA  
                          __ptext51 22A0                            __ptext43 3130  
                          __ptext35 383E                            __ptext27 23B6  
                          __ptext19 2628                            __ptext60 0000  
                          __ptext52 31AE                            __ptext44 3682  
                          __ptext36 386E                            __ptext28 2A00  
                          __ptext53 2E2A                            __ptext45 32A4  
                          __ptext37 389E                            __ptext29 1B52  
                          __ptext54 288A                            __ptext46 2042  
                          __ptext38 1F10                            __ptext55 347A  
                          __ptext39 2F34                            __ptext56 34EC  
                          __ptext48 38CE                            __ptext57 372A  
                          __ptext49 38FE                            __ptext58 3406  
                          __ptext59 2174        i2lcd_4_bit_set_cursor@column 001B  
                          _dinasour 01B9  __end_of_display_string_at_position 2BDA  
        _display_string_at_position 2B3E            i2display_custom_char@lcd 0025  
          i2display_custom_char@row 0027        __end_of_lcd_4_bit_set_cursor 26F4  
                       i2_INT_0_ISR 392E                         i2_INT_1_ISR 38FE  
                       i2_INT_2_ISR 38CE                      relay_off@F3015 0044  
                       _INTX_enable 27C0               __end_of_buttons_array 1011  
                          _operator 0042                            isa$xinst 000000  
           ?i2_lcd_4_bit_set_cursor 0018                            int$flags 004B  
                          _vfprintf 35C8                      _lcd_send_4bits 322A  
                    i1_send_command 30B2       i2lcd_send_4bits@_data_command 000D  
               _display_custom_char 2EB2                    ___aomod@dividend 0100  
               _Interrupt_INTx_Init 355E             lcd_4_bit_set_cursor@lcd 0117  
           lcd_4_bit_set_cursor@ret 011D             lcd_4_bit_set_cursor@row 0119  
                        _INTCONbits 000FF2             __end_of_short_to_string 2A00  
             ?_InterruptManagerHigh 0001        display_char_at_position@data 0122  
           __end_of_INTX_clear_flag 3406                     display_char@lcd 0113  
        short_to_string@DataCounter 0174                     display_char@ret 0116  
                          intlevel1 0000                            intlevel2 0000  
        lcd_4_bit_set_cursor@column 011A                           sprintf@ap 015D  
         i1lcd_4_bit_set_cursor@lcd 0094           i1lcd_4_bit_set_cursor@ret 009A  
         i1lcd_4_bit_set_cursor@row 0096                 _InterruptManagerLow 0018  
              ?_display_custom_char 0124             display_custom_char@data 0128  
   __end_of_pin_directoin_intialize 1C9C                ?_Interrupt_INTx_Init 010E  
    __end_ofi2_lcd_4_bit_set_cursor 294C               lcd_4_bit_init@counter 011B  
            __end_of_lcd_send_4bits 32A4                    ??i1_display_char 0038  
            __end_ofi1_send_command 3130                     ___aomod@divisor 0108  
         i1display_custom_char@data 00A5                         ??_vfpfcnvrt 0145  
                   ___aomod@counter 0110              i2_lcd_send_enable_4bit 372A  
              ?_InterruptManagerLow 0001              i1_lcd_4_bit_set_cursor 26F4  
          __end_ofi2_lcd_send_4bits 347A                            sprintf@f 015F  
                          sprintf@s 0157             i1lcd_send_4bits@counter 008F  
    display_string_at_position@data 0122          ??_display_char_at_position 0123  
                      ___aodiv@sign 0111               ??_display_custom_char 012B  
             ??_Interrupt_INTx_Init 0110                          _PORT_array 0038  
                  fp__int_1_handler 0000                        ___aomod@sign 0111  
